{"ast":null,"code":"var _jsxFileName = \"/Users/Gary 1/Desktop/Code stuff/\\u8CC7\\u7B56\\u6703/\\u5C08\\u984C/\\u5927\\u5C08/artddict-react/src/pages/event/components/tetris/Stage.js\";\nimport React from 'react';\nimport Cell from './Cell';\nimport { StyledStage } from './StyleforTetris/StyledStage'; //const Cell = ({ type }) => (<div>cell</div>)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Stage({\n  stage\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledStage, {\n      width: stage[0].length,\n      height: stage.length,\n      children: stage.map(row => row.map((cell, x) => /*#__PURE__*/_jsxDEV(Cell, {\n        type: cell[0]\n      }, x, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = Stage;\nexport default Stage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stage\");","map":{"version":3,"sources":["/Users/Gary 1/Desktop/Code stuff/資策會/專題/大專/artddict-react/src/pages/event/components/tetris/Stage.js"],"names":["React","Cell","StyledStage","Stage","stage","length","map","row","cell","x"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,WAAT,QAA4B,8BAA5B,C,CAEA;;;;;AACA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA0B;AACxB,sBACE;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEA,KAAK,CAAC,CAAD,CAAL,CAASC,MAA7B;AAAqC,MAAA,MAAM,EAAED,KAAK,CAACC,MAAnD;AAAA,gBACGD,KAAK,CAACE,GAAN,CAAWC,GAAD,IACTA,GAAG,CAACD,GAAJ,CAAQ,CAACE,IAAD,EAAOC,CAAP,kBACN,QAAC,IAAD;AAAc,QAAA,IAAI,EAAED,IAAI,CAAC,CAAD;AAAxB,SAAWC,CAAX;AAAA;AAAA;AAAA;AAAA,cADF,CADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD;;KAZQN,K;AAcT,eAAeA,KAAf","sourcesContent":["import React from 'react'\nimport Cell from './Cell'\nimport { StyledStage } from './StyleforTetris/StyledStage'\n\n//const Cell = ({ type }) => (<div>cell</div>)\nfunction Stage({ stage }) {\n  return (\n    <>\n      <StyledStage width={stage[0].length} height={stage.length}>\n        {stage.map((row) =>\n          row.map((cell, x) => (\n            <Cell key={x} type={cell[0]} />\n          ))\n        )}\n      </StyledStage>\n    </>\n  )\n}\n\nexport default Stage\n"]},"metadata":{},"sourceType":"module"}