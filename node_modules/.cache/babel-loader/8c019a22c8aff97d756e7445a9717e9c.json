{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react';\nexport const useGameStatus = rowsCleared => {\n  _s();\n\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n  const linePoints = [40, 100, 300, 1200];\n  const calcScore = useCallback(() => {\n    // We have score\n    if (rowsCleared > 0) {\n      // This is how original Tetris score is calculated\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows(prev => prev + rowsCleared);\n    }\n  }, [level, linePoints, rowsCleared]);\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n  return [score, setScore, rows, setRows, level, setLevel];\n};\n\n_s(useGameStatus, \"OyoIUu5u9oTBXcnkl9Z7Fnkr5uo=\");","map":{"version":3,"sources":["/Users/Gary 1/Desktop/Code stuff/資策會/專題/大專/artddict-react/src/pages/event/components/tetris/hooks/useGameStatus.js"],"names":["useState","useEffect","useCallback","useGameStatus","rowsCleared","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","prev"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AAEA,OAAO,MAAMC,aAAa,GAAIC,WAAD,IAAiB;AAAA;;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAMW,UAAU,GAAG,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,IAAf,CAAnB;AAEA,QAAMC,SAAS,GAAGV,WAAW,CAAC,MAAM;AAClC;AACA,QAAIE,WAAW,GAAG,CAAlB,EAAqB;AACnB;AACAE,MAAAA,QAAQ,CACLO,IAAD,IACEA,IAAI,GAAGF,UAAU,CAACP,WAAW,GAAG,CAAf,CAAV,IAA+BK,KAAK,GAAG,CAAvC,CAFH,CAAR;AAIAD,MAAAA,OAAO,CAAEK,IAAD,IAAUA,IAAI,GAAGT,WAAlB,CAAP;AACD;AACF,GAV4B,EAU1B,CAACK,KAAD,EAAQE,UAAR,EAAoBP,WAApB,CAV0B,CAA7B;AAYAH,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACA,SAAD,EAAYR,WAAZ,EAAyBC,KAAzB,CAFM,CAAT;AAIA,SAAO,CAACA,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,OAAxB,EAAiCC,KAAjC,EAAwCC,QAAxC,CAAP;AACD,CAxBM;;GAAMP,a","sourcesContent":["import { useState, useEffect, useCallback } from 'react'\n\nexport const useGameStatus = (rowsCleared) => {\n  const [score, setScore] = useState(0)\n  const [rows, setRows] = useState(0)\n  const [level, setLevel] = useState(0)\n\n  const linePoints = [40, 100, 300, 1200]\n\n  const calcScore = useCallback(() => {\n    // We have score\n    if (rowsCleared > 0) {\n      // This is how original Tetris score is calculated\n      setScore(\n        (prev) =>\n          prev + linePoints[rowsCleared - 1] * (level + 1)\n      )\n      setRows((prev) => prev + rowsCleared)\n    }\n  }, [level, linePoints, rowsCleared])\n\n  useEffect(() => {\n    calcScore()\n  }, [calcScore, rowsCleared, score])\n\n  return [score, setScore, rows, setRows, level, setLevel]\n}\n"]},"metadata":{},"sourceType":"module"}