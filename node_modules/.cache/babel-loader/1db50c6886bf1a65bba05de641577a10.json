{"ast":null,"code":"var _jsxFileName = \"/Users/Gary 1/Desktop/Code stuff/\\u8CC7\\u7B56\\u6703/\\u5C08\\u984C/\\u5927\\u5C08/artddict-react/src/pages/map/components/LeafLet2.js\";\nimport React, { useRef } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { MdLocationCity } from 'react-icons/md';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LeafLet2 extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      osmMap: '',\n      center: [25.072615859459205, 121.52481019741808],\n      zoom: 8,\n      id: ''\n    }; //TODO:this.setmusEvent拿不到\n    // this.setmusEvent = this.setmusEvent.bind(this)\n  }\n\n  componentDidMount(props) {\n    //console.log(this)\n    $('#osm-map').on('click', 'button', function () {\n      let id = $('#osm-map button').data('id'); // let id = 1\n\n      getMusEventServer(id);\n    });\n\n    async function getMusEventServer(id) {\n      const url = `http://localhost:6005/map/musEvent?idMuseum=${id}`; // 注意header資料格式要設定，伺服器才知道是json格式\n\n      const request = new Request(url, {\n        method: 'GET',\n        headers: new Headers({\n          Accept: 'application/json',\n          'Content-Type': 'appliaction/json'\n        })\n      });\n      const response = await fetch(request);\n      const data = await response.json(); // 設定資料\n      //TODO:無法拿到props\n\n      this.props.setmusEvent(data); // console.log(data)\n    } // create map\n\n\n    this.setState({\n      osmMap: L.map('osm-map', {\n        //初始位置坐標\n        center: this.state.center,\n        zoom: this.state.zoom,\n        layers: [L.tileLayer('https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.{ext}', {\n          attribution: 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n          subdomains: 'abcd',\n          minZoom: 0,\n          maxZoom: 20,\n          ext: 'png'\n        })],\n        id: ''\n      })\n    }); // 使用 leaflet-color-markers ( https://github.com/pointhi/leaflet-color-markers ) 當作 marker\n    // //?套件 L.MarkerCluster當資料很多的時候只顯示區域總數(TODO)\n    // //let markers = new L.MarkerClusterGroup().addTO(osmMap)\n  } //componentDidUpdate是無法拿到更改過的父層屬性的\n  //要用componentWillReceiveProps偵查是否有新的富曾屬性傳入\n\n\n  componentWillReceiveProps(nextProps) {\n    console.log('nextProps.museums', nextProps.museums); // this.setState({ id: nextProps.museums.musId })\n    // const btnRef = { useRef }\n    //flyto\n\n    this.state.osmMap.flyTo([nextProps.museums[0].Px, nextProps.museums[0].Py], 17);\n    const greenIcon = new L.Icon({\n      iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\n      shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n      iconSize: [25, 41],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n      shadowSize: [41, 41]\n    }); // L.marker([24.048828481572784, 120.68847639336789], {\n    //   icon: greenIcon,\n    // })\n    //   .addTo(this.state.osmMap)\n    //   .bindPopup(`<b>hello</b>`)\n\n    for (let i = 0; nextProps.museums.length > i; i++) {\n      L.marker([nextProps.museums[i].Px, nextProps.museums[i].Py], {\n        icon: greenIcon\n      }).addTo(this.state.osmMap).bindPopup(`<b>${nextProps.museums[i].musName}</b><br><b>營業時間：09:00-17:00</b><br><b>休館時間：每週一 休管</b><br><button data-id=${nextProps.museums[i].musId}  class=\"mt-2 map-card-btn loca-btn\" >查看活動`);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"osm-map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default LeafLet2;","map":{"version":3,"sources":["/Users/Gary 1/Desktop/Code stuff/資策會/專題/大專/artddict-react/src/pages/map/components/LeafLet2.js"],"names":["React","useRef","L","MdLocationCity","$","LeafLet2","Component","constructor","state","osmMap","center","zoom","id","componentDidMount","props","on","data","getMusEventServer","url","request","Request","method","headers","Headers","Accept","response","fetch","json","setmusEvent","setState","map","layers","tileLayer","attribution","subdomains","minZoom","maxZoom","ext","componentWillReceiveProps","nextProps","console","log","museums","flyTo","Px","Py","greenIcon","Icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","i","length","marker","icon","addTo","bindPopup","musName","musId","render"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\nimport 'leaflet/dist/leaflet.css'\nimport L from 'leaflet'\nimport { MdLocationCity } from 'react-icons/md'\nimport $ from 'jquery'\n\nclass LeafLet2 extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      osmMap: '',\n      center: [25.072615859459205, 121.52481019741808],\n      zoom: 8,\n      id: '',\n    }\n    //TODO:this.setmusEvent拿不到\n    // this.setmusEvent = this.setmusEvent.bind(this)\n  }\n\n  componentDidMount(props) {\n\n    //console.log(this)\n\n    $('#osm-map').on('click', 'button', function () {\n      let id = $('#osm-map button').data('id')\n      // let id = 1\n      getMusEventServer(id)\n    })\n\n    async function getMusEventServer(id) {\n\n      const url = `http://localhost:6005/map/musEvent?idMuseum=${id}`\n\n      // 注意header資料格式要設定，伺服器才知道是json格式\n      const request = new Request(url, {\n        method: 'GET',\n        headers: new Headers({\n          Accept: 'application/json',\n          'Content-Type': 'appliaction/json',\n        }),\n      })\n\n      const response = await fetch(request)\n      const data = await response.json()\n      // 設定資料\n      //TODO:無法拿到props\n      this.props.setmusEvent(data)\n      // console.log(data)\n    }\n\n    // create map\n    this.setState({\n      osmMap: L.map('osm-map', {\n        //初始位置坐標\n        center: this.state.center,\n        zoom: this.state.zoom,\n        layers: [\n          L.tileLayer(\n            'https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.{ext}',\n            {\n              attribution:\n                'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n              subdomains: 'abcd',\n              minZoom: 0,\n              maxZoom: 20,\n              ext: 'png',\n            }\n          ),\n        ],\n        id: '',\n      }),\n    })\n\n    // 使用 leaflet-color-markers ( https://github.com/pointhi/leaflet-color-markers ) 當作 marker\n    // //?套件 L.MarkerCluster當資料很多的時候只顯示區域總數(TODO)\n    // //let markers = new L.MarkerClusterGroup().addTO(osmMap)\n  }\n\n  //componentDidUpdate是無法拿到更改過的父層屬性的\n  //要用componentWillReceiveProps偵查是否有新的富曾屬性傳入\n\n  componentWillReceiveProps(nextProps) {\n    console.log('nextProps.museums', nextProps.museums)\n\n    // this.setState({ id: nextProps.museums.musId })\n    // const btnRef = { useRef }\n\n    //flyto\n    this.state.osmMap.flyTo(\n      [nextProps.museums[0].Px, nextProps.museums[0].Py],\n      17\n    )\n\n    const greenIcon = new L.Icon({\n      iconUrl:\n        'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\n      shadowUrl:\n        'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n      iconSize: [25, 41],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n      shadowSize: [41, 41],\n    })\n\n    // L.marker([24.048828481572784, 120.68847639336789], {\n    //   icon: greenIcon,\n    // })\n    //   .addTo(this.state.osmMap)\n    //   .bindPopup(`<b>hello</b>`)\n\n    for (let i = 0; nextProps.museums.length > i; i++) {\n      L.marker(\n        [nextProps.museums[i].Px, nextProps.museums[i].Py],\n        {\n          icon: greenIcon,\n        }\n      )\n        .addTo(this.state.osmMap)\n        .bindPopup(\n          `<b>${nextProps.museums[i].musName}</b><br><b>營業時間：09:00-17:00</b><br><b>休館時間：每週一 休管</b><br><button data-id=${nextProps.museums[i].musId}  class=\"mt-2 map-card-btn loca-btn\" >查看活動`\n        )\n    }\n  }\n\n  render() {\n    return <div id=\"osm-map\"></div>\n  }\n}\n\nexport default LeafLet2\n"]},"metadata":{},"sourceType":"module"}