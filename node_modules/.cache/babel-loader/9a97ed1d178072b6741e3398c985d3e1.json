{"ast":null,"code":"// Polyfills\nif (Number.EPSILON === undefined) {\n  Number.EPSILON = Math.pow(2, -52);\n}\n\nif (Number.isInteger === undefined) {\n  // Missing in IE\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n  Number.isInteger = function (value) {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n  };\n} //\n\n\nif (Math.sign === undefined) {\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n  Math.sign = function (x) {\n    return x < 0 ? -1 : x > 0 ? 1 : +x;\n  };\n}\n\nif (Function.prototype.name === undefined) {\n  // Missing in IE\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n  Object.defineProperty(Function.prototype, 'name', {\n    get: function () {\n      return this.toString().match(/^\\s*function\\s*([^\\(\\s]*)/)[1];\n    }\n  });\n}\n\nif (Object.assign === undefined) {\n  // Missing in IE\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n  (function () {\n    Object.assign = function (target) {\n      'use strict';\n\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var output = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var source = arguments[index];\n\n        if (source !== undefined && source !== null) {\n          for (var nextKey in source) {\n            if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n              output[nextKey] = source[nextKey];\n            }\n          }\n        }\n      }\n\n      return output;\n    };\n  })();\n}\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\n\nfunction EventDispatcher() {}\n\nObject.assign(EventDispatcher.prototype, {\n  addEventListener: function (type, listener) {\n    if (this._listeners === undefined) this._listeners = {};\n    var listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n\n    if (listeners[type].indexOf(listener) === -1) {\n      listeners[type].push(listener);\n    }\n  },\n  hasEventListener: function (type, listener) {\n    if (this._listeners === undefined) return false;\n    var listeners = this._listeners;\n    return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n  },\n  removeEventListener: function (type, listener) {\n    if (this._listeners === undefined) return;\n    var listeners = this._listeners;\n    var listenerArray = listeners[type];\n\n    if (listenerArray !== undefined) {\n      var index = listenerArray.indexOf(listener);\n\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  },\n  dispatchEvent: function (event) {\n    if (this._listeners === undefined) return;\n    var listeners = this._listeners;\n    var listenerArray = listeners[event.type];\n\n    if (listenerArray !== undefined) {\n      event.target = this;\n      var array = listenerArray.slice(0);\n\n      for (var i = 0, l = array.length; i < l; i++) {\n        array[i].call(this, event);\n      }\n    }\n  }\n});\nvar REVISION = '87';\nvar MOUSE = {\n  LEFT: 0,\n  MIDDLE: 1,\n  RIGHT: 2\n};\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RGB_S3TC_DXT1_Format = 2001;\nvar RGBA_S3TC_DXT1_Format = 2002;\nvar RGBA_S3TC_DXT3_Format = 2003;\nvar RGBA_S3TC_DXT5_Format = 2004;\nvar RGB_PVRTC_4BPPV1_Format = 2100;\nvar RGB_PVRTC_2BPPV1_Format = 2101;\nvar RGBA_PVRTC_4BPPV1_Format = 2102;\nvar RGBA_PVRTC_2BPPV1_Format = 2103;\nvar RGB_ETC1_Format = 2151;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n  DEG2RAD: Math.PI / 180,\n  RAD2DEG: 180 / Math.PI,\n  generateUUID: function () {\n    // http://www.broofa.com/Tools/Math.uuid.htm\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n    var uuid = new Array(36);\n    var rnd = 0,\n        r;\n    return function generateUUID() {\n      for (var i = 0; i < 36; i++) {\n        if (i === 8 || i === 13 || i === 18 || i === 23) {\n          uuid[i] = '-';\n        } else if (i === 14) {\n          uuid[i] = '4';\n        } else {\n          if (rnd <= 0x02) rnd = 0x2000000 + Math.random() * 0x1000000 | 0;\n          r = rnd & 0xf;\n          rnd = rnd >> 4;\n          uuid[i] = chars[i === 19 ? r & 0x3 | 0x8 : r];\n        }\n      }\n\n      return uuid.join('');\n    };\n  }(),\n  clamp: function (value, min, max) {\n    return Math.max(min, Math.min(max, value));\n  },\n  // compute euclidian modulo of m % n\n  // https://en.wikipedia.org/wiki/Modulo_operation\n  euclideanModulo: function (n, m) {\n    return (n % m + m) % m;\n  },\n  // Linear mapping from range <a1, a2> to range <b1, b2>\n  mapLinear: function (x, a1, a2, b1, b2) {\n    return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n  },\n  // https://en.wikipedia.org/wiki/Linear_interpolation\n  lerp: function (x, y, t) {\n    return (1 - t) * x + t * y;\n  },\n  // http://en.wikipedia.org/wiki/Smoothstep\n  smoothstep: function (x, min, max) {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * (3 - 2 * x);\n  },\n  smootherstep: function (x, min, max) {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * x * (x * (x * 6 - 15) + 10);\n  },\n  // Random integer from <low, high> interval\n  randInt: function (low, high) {\n    return low + Math.floor(Math.random() * (high - low + 1));\n  },\n  // Random float from <low, high> interval\n  randFloat: function (low, high) {\n    return low + Math.random() * (high - low);\n  },\n  // Random float from <-range/2, range/2> interval\n  randFloatSpread: function (range) {\n    return range * (0.5 - Math.random());\n  },\n  degToRad: function (degrees) {\n    return degrees * _Math.DEG2RAD;\n  },\n  radToDeg: function (radians) {\n    return radians * _Math.RAD2DEG;\n  },\n  isPowerOfTwo: function (value) {\n    return (value & value - 1) === 0 && value !== 0;\n  },\n  nearestPowerOfTwo: function (value) {\n    return Math.pow(2, Math.round(Math.log(value) / Math.LN2));\n  },\n  nextPowerOfTwo: function (value) {\n    value--;\n    value |= value >> 1;\n    value |= value >> 2;\n    value |= value >> 4;\n    value |= value >> 8;\n    value |= value >> 16;\n    value++;\n    return value;\n  }\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2(x, y) {\n  this.x = x || 0;\n  this.y = y || 0;\n}\n\nObject.defineProperties(Vector2.prototype, {\n  \"width\": {\n    get: function () {\n      return this.x;\n    },\n    set: function (value) {\n      this.x = value;\n    }\n  },\n  \"height\": {\n    get: function () {\n      return this.y;\n    },\n    set: function (value) {\n      this.y = value;\n    }\n  }\n});\nObject.assign(Vector2.prototype, {\n  isVector2: true,\n  set: function (x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n\n    return this;\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    return this;\n  },\n  multiply: function (v) {\n    this.x *= v.x;\n    this.y *= v.y;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    return this;\n  },\n  divide: function (v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  min: function (v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    return this;\n  },\n  max: function (v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    return this;\n  },\n  clamp: function (min, max) {\n    // assumes min < max, componentwise\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    return this;\n  },\n  clampScalar: function () {\n    var min = new Vector2();\n    var max = new Vector2();\n    return function clampScalar(minVal, maxVal) {\n      min.set(minVal, minVal);\n      max.set(maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  clampLength: function (min, max) {\n    var length = this.length();\n    return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n  },\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  },\n  lengthManhattan: function () {\n    return Math.abs(this.x) + Math.abs(this.y);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length() || 1);\n  },\n  angle: function () {\n    // computes the angle in radians with respect to the positive x-axis\n    var angle = Math.atan2(this.y, this.x);\n    if (angle < 0) angle += 2 * Math.PI;\n    return angle;\n  },\n  distanceTo: function (v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function (v) {\n    var dx = this.x - v.x,\n        dy = this.y - v.y;\n    return dx * dx + dy * dy;\n  },\n  distanceToManhattan: function (v) {\n    return Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n  },\n  setLength: function (length) {\n    return this.normalize().multiplyScalar(length);\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    return array;\n  },\n  fromBufferAttribute: function (attribute, index, offset) {\n    if (offset !== undefined) {\n      console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\n    }\n\n    this.x = attribute.getX(index);\n    this.y = attribute.getY(index);\n    return this;\n  },\n  rotateAround: function (center, angle) {\n    var c = Math.cos(angle),\n        s = Math.sin(angle);\n    var x = this.x - center.x;\n    var y = this.y - center.y;\n    this.x = x * c - y * s + center.x;\n    this.y = x * s + y * c + center.y;\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture(image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n  Object.defineProperty(this, 'id', {\n    value: textureId++\n  });\n  this.uuid = _Math.generateUUID();\n  this.name = '';\n  this.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n  this.mipmaps = [];\n  this.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n  this.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n  this.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n  this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n  this.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n  this.format = format !== undefined ? format : RGBAFormat;\n  this.type = type !== undefined ? type : UnsignedByteType;\n  this.offset = new Vector2(0, 0);\n  this.repeat = new Vector2(1, 1);\n  this.generateMipmaps = true;\n  this.premultiplyAlpha = false;\n  this.flipY = true;\n  this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n  // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n  //\n  // Also changing the encoding after already used by a Material will not automatically make the Material\n  // update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n  this.encoding = encoding !== undefined ? encoding : LinearEncoding;\n  this.version = 0;\n  this.onUpdate = null;\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\nObject.defineProperty(Texture.prototype, \"needsUpdate\", {\n  set: function (value) {\n    if (value === true) this.version++;\n  }\n});\nObject.assign(Texture.prototype, EventDispatcher.prototype, {\n  constructor: Texture,\n  isTexture: true,\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.name = source.name;\n    this.image = source.image;\n    this.mipmaps = source.mipmaps.slice(0);\n    this.mapping = source.mapping;\n    this.wrapS = source.wrapS;\n    this.wrapT = source.wrapT;\n    this.magFilter = source.magFilter;\n    this.minFilter = source.minFilter;\n    this.anisotropy = source.anisotropy;\n    this.format = source.format;\n    this.type = source.type;\n    this.offset.copy(source.offset);\n    this.repeat.copy(source.repeat);\n    this.generateMipmaps = source.generateMipmaps;\n    this.premultiplyAlpha = source.premultiplyAlpha;\n    this.flipY = source.flipY;\n    this.unpackAlignment = source.unpackAlignment;\n    this.encoding = source.encoding;\n    return this;\n  },\n  toJSON: function (meta) {\n    if (meta.textures[this.uuid] !== undefined) {\n      return meta.textures[this.uuid];\n    }\n\n    function getDataURL(image) {\n      var canvas;\n\n      if (image instanceof HTMLCanvasElement) {\n        canvas = image;\n      } else {\n        canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        var context = canvas.getContext('2d');\n\n        if (image instanceof ImageData) {\n          context.putImageData(image, 0, 0);\n        } else {\n          context.drawImage(image, 0, 0, image.width, image.height);\n        }\n      }\n\n      if (canvas.width > 2048 || canvas.height > 2048) {\n        return canvas.toDataURL('image/jpeg', 0.6);\n      } else {\n        return canvas.toDataURL('image/png');\n      }\n    }\n\n    var output = {\n      metadata: {\n        version: 4.5,\n        type: 'Texture',\n        generator: 'Texture.toJSON'\n      },\n      uuid: this.uuid,\n      name: this.name,\n      mapping: this.mapping,\n      repeat: [this.repeat.x, this.repeat.y],\n      offset: [this.offset.x, this.offset.y],\n      wrap: [this.wrapS, this.wrapT],\n      minFilter: this.minFilter,\n      magFilter: this.magFilter,\n      anisotropy: this.anisotropy,\n      flipY: this.flipY\n    };\n\n    if (this.image !== undefined) {\n      // TODO: Move to THREE.Image\n      var image = this.image;\n\n      if (image.uuid === undefined) {\n        image.uuid = _Math.generateUUID(); // UGH\n      }\n\n      if (meta.images[image.uuid] === undefined) {\n        meta.images[image.uuid] = {\n          uuid: image.uuid,\n          url: getDataURL(image)\n        };\n      }\n\n      output.image = image.uuid;\n    }\n\n    meta.textures[this.uuid] = output;\n    return output;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  },\n  transformUv: function (uv) {\n    if (this.mapping !== UVMapping) return;\n    uv.multiply(this.repeat);\n    uv.add(this.offset);\n\n    if (uv.x < 0 || uv.x > 1) {\n      switch (this.wrapS) {\n        case RepeatWrapping:\n          uv.x = uv.x - Math.floor(uv.x);\n          break;\n\n        case ClampToEdgeWrapping:\n          uv.x = uv.x < 0 ? 0 : 1;\n          break;\n\n        case MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n            uv.x = Math.ceil(uv.x) - uv.x;\n          } else {\n            uv.x = uv.x - Math.floor(uv.x);\n          }\n\n          break;\n      }\n    }\n\n    if (uv.y < 0 || uv.y > 1) {\n      switch (this.wrapT) {\n        case RepeatWrapping:\n          uv.y = uv.y - Math.floor(uv.y);\n          break;\n\n        case ClampToEdgeWrapping:\n          uv.y = uv.y < 0 ? 0 : 1;\n          break;\n\n        case MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n            uv.y = Math.ceil(uv.y) - uv.y;\n          } else {\n            uv.y = uv.y - Math.floor(uv.y);\n          }\n\n          break;\n      }\n    }\n\n    if (this.flipY) {\n      uv.y = 1 - uv.y;\n    }\n  }\n});\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4(x, y, z, w) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = w !== undefined ? w : 1;\n}\n\nObject.assign(Vector4.prototype, {\n  isVector4: true,\n  set: function (x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    this.w = scalar;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setZ: function (z) {\n    this.z = z;\n    return this;\n  },\n  setW: function (w) {\n    this.w = w;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      case 3:\n        this.w = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n\n    return this;\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      case 3:\n        return this.w;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y, this.z, this.w);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    this.w = v.w !== undefined ? v.w : 1;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    this.w += v.w;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    this.w += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    this.w = a.w + b.w;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    this.w += v.w * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    this.w -= v.w;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    this.w -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    this.w = a.w - b.w;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n    this.w *= scalar;\n    return this;\n  },\n  applyMatrix4: function (m) {\n    var x = this.x,\n        y = this.y,\n        z = this.z,\n        w = this.w;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n    this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  setAxisAngleFromQuaternion: function (q) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n    // q is assumed to be normalized\n    this.w = 2 * Math.acos(q.w);\n    var s = Math.sqrt(1 - q.w * q.w);\n\n    if (s < 0.0001) {\n      this.x = 1;\n      this.y = 0;\n      this.z = 0;\n    } else {\n      this.x = q.x / s;\n      this.y = q.y / s;\n      this.z = q.z / s;\n    }\n\n    return this;\n  },\n  setAxisAngleFromRotationMatrix: function (m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var angle,\n        x,\n        y,\n        z,\n        // variables for result\n    epsilon = 0.01,\n        // margin to allow for rounding errors\n    epsilon2 = 0.1,\n        // margin to distinguish between 0 and 180 degrees\n    te = m.elements,\n        m11 = te[0],\n        m12 = te[4],\n        m13 = te[8],\n        m21 = te[1],\n        m22 = te[5],\n        m23 = te[9],\n        m31 = te[2],\n        m32 = te[6],\n        m33 = te[10];\n\n    if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n      // singularity found\n      // first check for identity matrix which must have +1 for all terms\n      // in leading diagonal and zero in other terms\n      if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n        // this singularity is identity matrix so angle = 0\n        this.set(1, 0, 0, 0);\n        return this; // zero angle, arbitrary axis\n      } // otherwise this singularity is angle = 180\n\n\n      angle = Math.PI;\n      var xx = (m11 + 1) / 2;\n      var yy = (m22 + 1) / 2;\n      var zz = (m33 + 1) / 2;\n      var xy = (m12 + m21) / 4;\n      var xz = (m13 + m31) / 4;\n      var yz = (m23 + m32) / 4;\n\n      if (xx > yy && xx > zz) {\n        // m11 is the largest diagonal term\n        if (xx < epsilon) {\n          x = 0;\n          y = 0.707106781;\n          z = 0.707106781;\n        } else {\n          x = Math.sqrt(xx);\n          y = xy / x;\n          z = xz / x;\n        }\n      } else if (yy > zz) {\n        // m22 is the largest diagonal term\n        if (yy < epsilon) {\n          x = 0.707106781;\n          y = 0;\n          z = 0.707106781;\n        } else {\n          y = Math.sqrt(yy);\n          x = xy / y;\n          z = yz / y;\n        }\n      } else {\n        // m33 is the largest diagonal term so base result on this\n        if (zz < epsilon) {\n          x = 0.707106781;\n          y = 0.707106781;\n          z = 0;\n        } else {\n          z = Math.sqrt(zz);\n          x = xz / z;\n          y = yz / z;\n        }\n      }\n\n      this.set(x, y, z, angle);\n      return this; // return 180 deg rotation\n    } // as we have reached here there are no singularities so we can handle normally\n\n\n    var s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n    if (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n    // caught by singularity test above, but I've left it in just in case\n\n    this.x = (m32 - m23) / s;\n    this.y = (m13 - m31) / s;\n    this.z = (m21 - m12) / s;\n    this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n    return this;\n  },\n  min: function (v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    this.w = Math.min(this.w, v.w);\n    return this;\n  },\n  max: function (v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    this.w = Math.max(this.w, v.w);\n    return this;\n  },\n  clamp: function (min, max) {\n    // assumes min < max, componentwise\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    this.w = Math.max(min.w, Math.min(max.w, this.w));\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function clampScalar(minVal, maxVal) {\n      if (min === undefined) {\n        min = new Vector4();\n        max = new Vector4();\n      }\n\n      min.set(minVal, minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  clampLength: function (min, max) {\n    var length = this.length();\n    return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n  },\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    this.w = Math.floor(this.w);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    this.w = Math.ceil(this.w);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    this.w = Math.round(this.w);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    this.w = -this.w;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n  },\n  lengthManhattan: function () {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length() || 1);\n  },\n  setLength: function (length) {\n    return this.normalize().multiplyScalar(length);\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    this.w += (v.w - this.w) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    this.w = array[offset + 3];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    array[offset + 3] = this.w;\n    return array;\n  },\n  fromBufferAttribute: function (attribute, index, offset) {\n    if (offset !== undefined) {\n      console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\n    }\n\n    this.x = attribute.getX(index);\n    this.y = attribute.getY(index);\n    this.z = attribute.getZ(index);\n    this.w = attribute.getW(index);\n    return this;\n  }\n});\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\n\nfunction WebGLRenderTarget(width, height, options) {\n  this.uuid = _Math.generateUUID();\n  this.width = width;\n  this.height = height;\n  this.scissor = new Vector4(0, 0, width, height);\n  this.scissorTest = false;\n  this.viewport = new Vector4(0, 0, width, height);\n  options = options || {};\n  if (options.minFilter === undefined) options.minFilter = LinearFilter;\n  this.texture = new Texture(undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n  this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n  this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n  this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n}\n\nObject.assign(WebGLRenderTarget.prototype, EventDispatcher.prototype, {\n  isWebGLRenderTarget: true,\n  setSize: function (width, height) {\n    if (this.width !== width || this.height !== height) {\n      this.width = width;\n      this.height = height;\n      this.dispose();\n    }\n\n    this.viewport.set(0, 0, width, height);\n    this.scissor.set(0, 0, width, height);\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.width = source.width;\n    this.height = source.height;\n    this.viewport.copy(source.viewport);\n    this.texture = source.texture.clone();\n    this.depthBuffer = source.depthBuffer;\n    this.stencilBuffer = source.stencilBuffer;\n    this.depthTexture = source.depthTexture;\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube(width, height, options) {\n  WebGLRenderTarget.call(this, width, height, options);\n  this.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\n  this.activeMipMapLevel = 0;\n}\n\nWebGLRenderTargetCube.prototype = Object.create(WebGLRenderTarget.prototype);\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion(x, y, z, w) {\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._w = w !== undefined ? w : 1;\n}\n\nObject.assign(Quaternion, {\n  slerp: function (qa, qb, qm, t) {\n    return qm.copy(qa).slerp(qb, t);\n  },\n  slerpFlat: function (dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n    // fuzz-free, array-based Quaternion SLERP operation\n    var x0 = src0[srcOffset0 + 0],\n        y0 = src0[srcOffset0 + 1],\n        z0 = src0[srcOffset0 + 2],\n        w0 = src0[srcOffset0 + 3],\n        x1 = src1[srcOffset1 + 0],\n        y1 = src1[srcOffset1 + 1],\n        z1 = src1[srcOffset1 + 2],\n        w1 = src1[srcOffset1 + 3];\n\n    if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n      var s = 1 - t,\n          cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n          dir = cos >= 0 ? 1 : -1,\n          sqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n      if (sqrSin > Number.EPSILON) {\n        var sin = Math.sqrt(sqrSin),\n            len = Math.atan2(sin, cos * dir);\n        s = Math.sin(s * len) / sin;\n        t = Math.sin(t * len) / sin;\n      }\n\n      var tDir = t * dir;\n      x0 = x0 * s + x1 * tDir;\n      y0 = y0 * s + y1 * tDir;\n      z0 = z0 * s + z1 * tDir;\n      w0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n      if (s === 1 - t) {\n        var f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n        x0 *= f;\n        y0 *= f;\n        z0 *= f;\n        w0 *= f;\n      }\n    }\n\n    dst[dstOffset] = x0;\n    dst[dstOffset + 1] = y0;\n    dst[dstOffset + 2] = z0;\n    dst[dstOffset + 3] = w0;\n  }\n});\nObject.defineProperties(Quaternion.prototype, {\n  x: {\n    get: function () {\n      return this._x;\n    },\n    set: function (value) {\n      this._x = value;\n      this.onChangeCallback();\n    }\n  },\n  y: {\n    get: function () {\n      return this._y;\n    },\n    set: function (value) {\n      this._y = value;\n      this.onChangeCallback();\n    }\n  },\n  z: {\n    get: function () {\n      return this._z;\n    },\n    set: function (value) {\n      this._z = value;\n      this.onChangeCallback();\n    }\n  },\n  w: {\n    get: function () {\n      return this._w;\n    },\n    set: function (value) {\n      this._w = value;\n      this.onChangeCallback();\n    }\n  }\n});\nObject.assign(Quaternion.prototype, {\n  set: function (x, y, z, w) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this.onChangeCallback();\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this._x, this._y, this._z, this._w);\n  },\n  copy: function (quaternion) {\n    this._x = quaternion.x;\n    this._y = quaternion.y;\n    this._z = quaternion.z;\n    this._w = quaternion.w;\n    this.onChangeCallback();\n    return this;\n  },\n  setFromEuler: function (euler, update) {\n    if (!(euler && euler.isEuler)) {\n      throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\n    }\n\n    var x = euler._x,\n        y = euler._y,\n        z = euler._z,\n        order = euler.order; // http://www.mathworks.com/matlabcentral/fileexchange/\n    // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n    //\tcontent/SpinCalc.m\n\n    var cos = Math.cos;\n    var sin = Math.sin;\n    var c1 = cos(x / 2);\n    var c2 = cos(y / 2);\n    var c3 = cos(z / 2);\n    var s1 = sin(x / 2);\n    var s2 = sin(y / 2);\n    var s3 = sin(z / 2);\n\n    if (order === 'XYZ') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'YXZ') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'ZXY') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'ZYX') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'YZX') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'XZY') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    }\n\n    if (update !== false) this.onChangeCallback();\n    return this;\n  },\n  setFromAxisAngle: function (axis, angle) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n    // assumes axis is normalized\n    var halfAngle = angle / 2,\n        s = Math.sin(halfAngle);\n    this._x = axis.x * s;\n    this._y = axis.y * s;\n    this._z = axis.z * s;\n    this._w = Math.cos(halfAngle);\n    this.onChangeCallback();\n    return this;\n  },\n  setFromRotationMatrix: function (m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var te = m.elements,\n        m11 = te[0],\n        m12 = te[4],\n        m13 = te[8],\n        m21 = te[1],\n        m22 = te[5],\n        m23 = te[9],\n        m31 = te[2],\n        m32 = te[6],\n        m33 = te[10],\n        trace = m11 + m22 + m33,\n        s;\n\n    if (trace > 0) {\n      s = 0.5 / Math.sqrt(trace + 1.0);\n      this._w = 0.25 / s;\n      this._x = (m32 - m23) * s;\n      this._y = (m13 - m31) * s;\n      this._z = (m21 - m12) * s;\n    } else if (m11 > m22 && m11 > m33) {\n      s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n      this._w = (m32 - m23) / s;\n      this._x = 0.25 * s;\n      this._y = (m12 + m21) / s;\n      this._z = (m13 + m31) / s;\n    } else if (m22 > m33) {\n      s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n      this._w = (m13 - m31) / s;\n      this._x = (m12 + m21) / s;\n      this._y = 0.25 * s;\n      this._z = (m23 + m32) / s;\n    } else {\n      s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n      this._w = (m21 - m12) / s;\n      this._x = (m13 + m31) / s;\n      this._y = (m23 + m32) / s;\n      this._z = 0.25 * s;\n    }\n\n    this.onChangeCallback();\n    return this;\n  },\n  setFromUnitVectors: function () {\n    // assumes direction vectors vFrom and vTo are normalized\n    var v1 = new Vector3();\n    var r;\n    var EPS = 0.000001;\n    return function setFromUnitVectors(vFrom, vTo) {\n      if (v1 === undefined) v1 = new Vector3();\n      r = vFrom.dot(vTo) + 1;\n\n      if (r < EPS) {\n        r = 0;\n\n        if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n          v1.set(-vFrom.y, vFrom.x, 0);\n        } else {\n          v1.set(0, -vFrom.z, vFrom.y);\n        }\n      } else {\n        v1.crossVectors(vFrom, vTo);\n      }\n\n      this._x = v1.x;\n      this._y = v1.y;\n      this._z = v1.z;\n      this._w = r;\n      return this.normalize();\n    };\n  }(),\n  inverse: function () {\n    return this.conjugate().normalize();\n  },\n  conjugate: function () {\n    this._x *= -1;\n    this._y *= -1;\n    this._z *= -1;\n    this.onChangeCallback();\n    return this;\n  },\n  dot: function (v) {\n    return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n  },\n  lengthSq: function () {\n    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n  },\n  length: function () {\n    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n  },\n  normalize: function () {\n    var l = this.length();\n\n    if (l === 0) {\n      this._x = 0;\n      this._y = 0;\n      this._z = 0;\n      this._w = 1;\n    } else {\n      l = 1 / l;\n      this._x = this._x * l;\n      this._y = this._y * l;\n      this._z = this._z * l;\n      this._w = this._w * l;\n    }\n\n    this.onChangeCallback();\n    return this;\n  },\n  multiply: function (q, p) {\n    if (p !== undefined) {\n      console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n      return this.multiplyQuaternions(q, p);\n    }\n\n    return this.multiplyQuaternions(this, q);\n  },\n  premultiply: function (q) {\n    return this.multiplyQuaternions(q, this);\n  },\n  multiplyQuaternions: function (a, b) {\n    // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n    var qax = a._x,\n        qay = a._y,\n        qaz = a._z,\n        qaw = a._w;\n    var qbx = b._x,\n        qby = b._y,\n        qbz = b._z,\n        qbw = b._w;\n    this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n    this.onChangeCallback();\n    return this;\n  },\n  slerp: function (qb, t) {\n    if (t === 0) return this;\n    if (t === 1) return this.copy(qb);\n    var x = this._x,\n        y = this._y,\n        z = this._z,\n        w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n    var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n    if (cosHalfTheta < 0) {\n      this._w = -qb._w;\n      this._x = -qb._x;\n      this._y = -qb._y;\n      this._z = -qb._z;\n      cosHalfTheta = -cosHalfTheta;\n    } else {\n      this.copy(qb);\n    }\n\n    if (cosHalfTheta >= 1.0) {\n      this._w = w;\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      return this;\n    }\n\n    var sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);\n\n    if (Math.abs(sinHalfTheta) < 0.001) {\n      this._w = 0.5 * (w + this._w);\n      this._x = 0.5 * (x + this._x);\n      this._y = 0.5 * (y + this._y);\n      this._z = 0.5 * (z + this._z);\n      return this;\n    }\n\n    var halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n    var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n        ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n    this._w = w * ratioA + this._w * ratioB;\n    this._x = x * ratioA + this._x * ratioB;\n    this._y = y * ratioA + this._y * ratioB;\n    this._z = z * ratioA + this._z * ratioB;\n    this.onChangeCallback();\n    return this;\n  },\n  equals: function (quaternion) {\n    return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this._x = array[offset];\n    this._y = array[offset + 1];\n    this._z = array[offset + 2];\n    this._w = array[offset + 3];\n    this.onChangeCallback();\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._w;\n    return array;\n  },\n  onChange: function (callback) {\n    this.onChangeCallback = callback;\n    return this;\n  },\n  onChangeCallback: function () {}\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3(x, y, z) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n}\n\nObject.assign(Vector3.prototype, {\n  isVector3: true,\n  set: function (x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setZ: function (z) {\n    this.z = z;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n\n    return this;\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y, this.z);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    return this;\n  },\n  multiply: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n      return this.multiplyVectors(v, w);\n    }\n\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n    return this;\n  },\n  multiplyVectors: function (a, b) {\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n    return this;\n  },\n  applyEuler: function () {\n    var quaternion = new Quaternion();\n    return function applyEuler(euler) {\n      if (!(euler && euler.isEuler)) {\n        console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n      }\n\n      return this.applyQuaternion(quaternion.setFromEuler(euler));\n    };\n  }(),\n  applyAxisAngle: function () {\n    var quaternion = new Quaternion();\n    return function applyAxisAngle(axis, angle) {\n      return this.applyQuaternion(quaternion.setFromAxisAngle(axis, angle));\n    };\n  }(),\n  applyMatrix3: function (m) {\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n    return this;\n  },\n  applyMatrix4: function (m) {\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    var w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n    return this;\n  },\n  applyQuaternion: function (q) {\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var qx = q.x,\n        qy = q.y,\n        qz = q.z,\n        qw = q.w; // calculate quat * vector\n\n    var ix = qw * x + qy * z - qz * y;\n    var iy = qw * y + qz * x - qx * z;\n    var iz = qw * z + qx * y - qy * x;\n    var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return this;\n  },\n  project: function () {\n    var matrix = new Matrix4();\n    return function project(camera) {\n      matrix.multiplyMatrices(camera.projectionMatrix, matrix.getInverse(camera.matrixWorld));\n      return this.applyMatrix4(matrix);\n    };\n  }(),\n  unproject: function () {\n    var matrix = new Matrix4();\n    return function unproject(camera) {\n      matrix.multiplyMatrices(camera.matrixWorld, matrix.getInverse(camera.projectionMatrix));\n      return this.applyMatrix4(matrix);\n    };\n  }(),\n  transformDirection: function (m) {\n    // input: THREE.Matrix4 affine matrix\n    // vector interpreted as a direction\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n    return this.normalize();\n  },\n  divide: function (v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  min: function (v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    return this;\n  },\n  max: function (v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    return this;\n  },\n  clamp: function (min, max) {\n    // assumes min < max, componentwise\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    return this;\n  },\n  clampScalar: function () {\n    var min = new Vector3();\n    var max = new Vector3();\n    return function clampScalar(minVal, maxVal) {\n      min.set(minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  clampLength: function (min, max) {\n    var length = this.length();\n    return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n  },\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  },\n  // TODO lengthSquared?\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  },\n  lengthManhattan: function () {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length() || 1);\n  },\n  setLength: function (length) {\n    return this.normalize().multiplyScalar(length);\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n  },\n  cross: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n      return this.crossVectors(v, w);\n    }\n\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    this.x = y * v.z - z * v.y;\n    this.y = z * v.x - x * v.z;\n    this.z = x * v.y - y * v.x;\n    return this;\n  },\n  crossVectors: function (a, b) {\n    var ax = a.x,\n        ay = a.y,\n        az = a.z;\n    var bx = b.x,\n        by = b.y,\n        bz = b.z;\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n    return this;\n  },\n  projectOnVector: function (vector) {\n    var scalar = vector.dot(this) / vector.lengthSq();\n    return this.copy(vector).multiplyScalar(scalar);\n  },\n  projectOnPlane: function () {\n    var v1 = new Vector3();\n    return function projectOnPlane(planeNormal) {\n      v1.copy(this).projectOnVector(planeNormal);\n      return this.sub(v1);\n    };\n  }(),\n  reflect: function () {\n    // reflect incident vector off plane orthogonal to normal\n    // normal is assumed to have unit length\n    var v1 = new Vector3();\n    return function reflect(normal) {\n      return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n    };\n  }(),\n  angleTo: function (v) {\n    var theta = this.dot(v) / Math.sqrt(this.lengthSq() * v.lengthSq()); // clamp, to handle numerical problems\n\n    return Math.acos(_Math.clamp(theta, -1, 1));\n  },\n  distanceTo: function (v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function (v) {\n    var dx = this.x - v.x,\n        dy = this.y - v.y,\n        dz = this.z - v.z;\n    return dx * dx + dy * dy + dz * dz;\n  },\n  distanceToManhattan: function (v) {\n    return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n  },\n  setFromSpherical: function (s) {\n    var sinPhiRadius = Math.sin(s.phi) * s.radius;\n    this.x = sinPhiRadius * Math.sin(s.theta);\n    this.y = Math.cos(s.phi) * s.radius;\n    this.z = sinPhiRadius * Math.cos(s.theta);\n    return this;\n  },\n  setFromCylindrical: function (c) {\n    this.x = c.radius * Math.sin(c.theta);\n    this.y = c.y;\n    this.z = c.radius * Math.cos(c.theta);\n    return this;\n  },\n  setFromMatrixPosition: function (m) {\n    var e = m.elements;\n    this.x = e[12];\n    this.y = e[13];\n    this.z = e[14];\n    return this;\n  },\n  setFromMatrixScale: function (m) {\n    var sx = this.setFromMatrixColumn(m, 0).length();\n    var sy = this.setFromMatrixColumn(m, 1).length();\n    var sz = this.setFromMatrixColumn(m, 2).length();\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n    return this;\n  },\n  setFromMatrixColumn: function (m, index) {\n    return this.fromArray(m.elements, index * 4);\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    return array;\n  },\n  fromBufferAttribute: function (attribute, index, offset) {\n    if (offset !== undefined) {\n      console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\n    }\n\n    this.x = attribute.getX(index);\n    this.y = attribute.getY(index);\n    this.z = attribute.getZ(index);\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n  this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n  if (arguments.length > 0) {\n    console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n  }\n}\n\nObject.assign(Matrix4.prototype, {\n  isMatrix4: true,\n  set: function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n    var te = this.elements;\n    te[0] = n11;\n    te[4] = n12;\n    te[8] = n13;\n    te[12] = n14;\n    te[1] = n21;\n    te[5] = n22;\n    te[9] = n23;\n    te[13] = n24;\n    te[2] = n31;\n    te[6] = n32;\n    te[10] = n33;\n    te[14] = n34;\n    te[3] = n41;\n    te[7] = n42;\n    te[11] = n43;\n    te[15] = n44;\n    return this;\n  },\n  identity: function () {\n    this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  },\n  clone: function () {\n    return new Matrix4().fromArray(this.elements);\n  },\n  copy: function (m) {\n    var te = this.elements;\n    var me = m.elements;\n    te[0] = me[0];\n    te[1] = me[1];\n    te[2] = me[2];\n    te[3] = me[3];\n    te[4] = me[4];\n    te[5] = me[5];\n    te[6] = me[6];\n    te[7] = me[7];\n    te[8] = me[8];\n    te[9] = me[9];\n    te[10] = me[10];\n    te[11] = me[11];\n    te[12] = me[12];\n    te[13] = me[13];\n    te[14] = me[14];\n    te[15] = me[15];\n    return this;\n  },\n  copyPosition: function (m) {\n    var te = this.elements,\n        me = m.elements;\n    te[12] = me[12];\n    te[13] = me[13];\n    te[14] = me[14];\n    return this;\n  },\n  extractBasis: function (xAxis, yAxis, zAxis) {\n    xAxis.setFromMatrixColumn(this, 0);\n    yAxis.setFromMatrixColumn(this, 1);\n    zAxis.setFromMatrixColumn(this, 2);\n    return this;\n  },\n  makeBasis: function (xAxis, yAxis, zAxis) {\n    this.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n    return this;\n  },\n  extractRotation: function () {\n    var v1 = new Vector3();\n    return function extractRotation(m) {\n      var te = this.elements;\n      var me = m.elements;\n      var scaleX = 1 / v1.setFromMatrixColumn(m, 0).length();\n      var scaleY = 1 / v1.setFromMatrixColumn(m, 1).length();\n      var scaleZ = 1 / v1.setFromMatrixColumn(m, 2).length();\n      te[0] = me[0] * scaleX;\n      te[1] = me[1] * scaleX;\n      te[2] = me[2] * scaleX;\n      te[4] = me[4] * scaleY;\n      te[5] = me[5] * scaleY;\n      te[6] = me[6] * scaleY;\n      te[8] = me[8] * scaleZ;\n      te[9] = me[9] * scaleZ;\n      te[10] = me[10] * scaleZ;\n      return this;\n    };\n  }(),\n  makeRotationFromEuler: function (euler) {\n    if (!(euler && euler.isEuler)) {\n      console.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n    }\n\n    var te = this.elements;\n    var x = euler.x,\n        y = euler.y,\n        z = euler.z;\n    var a = Math.cos(x),\n        b = Math.sin(x);\n    var c = Math.cos(y),\n        d = Math.sin(y);\n    var e = Math.cos(z),\n        f = Math.sin(z);\n\n    if (euler.order === 'XYZ') {\n      var ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n      te[0] = c * e;\n      te[4] = -c * f;\n      te[8] = d;\n      te[1] = af + be * d;\n      te[5] = ae - bf * d;\n      te[9] = -b * c;\n      te[2] = bf - ae * d;\n      te[6] = be + af * d;\n      te[10] = a * c;\n    } else if (euler.order === 'YXZ') {\n      var ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n      te[0] = ce + df * b;\n      te[4] = de * b - cf;\n      te[8] = a * d;\n      te[1] = a * f;\n      te[5] = a * e;\n      te[9] = -b;\n      te[2] = cf * b - de;\n      te[6] = df + ce * b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZXY') {\n      var ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n      te[0] = ce - df * b;\n      te[4] = -a * f;\n      te[8] = de + cf * b;\n      te[1] = cf + de * b;\n      te[5] = a * e;\n      te[9] = df - ce * b;\n      te[2] = -a * d;\n      te[6] = b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZYX') {\n      var ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n      te[0] = c * e;\n      te[4] = be * d - af;\n      te[8] = ae * d + bf;\n      te[1] = c * f;\n      te[5] = bf * d + ae;\n      te[9] = af * d - be;\n      te[2] = -d;\n      te[6] = b * c;\n      te[10] = a * c;\n    } else if (euler.order === 'YZX') {\n      var ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n      te[0] = c * e;\n      te[4] = bd - ac * f;\n      te[8] = bc * f + ad;\n      te[1] = f;\n      te[5] = a * e;\n      te[9] = -b * e;\n      te[2] = -d * e;\n      te[6] = ad * f + bc;\n      te[10] = ac - bd * f;\n    } else if (euler.order === 'XZY') {\n      var ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n      te[0] = c * e;\n      te[4] = -f;\n      te[8] = d * e;\n      te[1] = ac * f + bd;\n      te[5] = a * e;\n      te[9] = ad * f - bc;\n      te[2] = bc * f - ad;\n      te[6] = b * e;\n      te[10] = bd * f + ac;\n    } // last column\n\n\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0; // bottom row\n\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  },\n  makeRotationFromQuaternion: function (q) {\n    var te = this.elements;\n    var x = q._x,\n        y = q._y,\n        z = q._z,\n        w = q._w;\n    var x2 = x + x,\n        y2 = y + y,\n        z2 = z + z;\n    var xx = x * x2,\n        xy = x * y2,\n        xz = x * z2;\n    var yy = y * y2,\n        yz = y * z2,\n        zz = z * z2;\n    var wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n    te[0] = 1 - (yy + zz);\n    te[4] = xy - wz;\n    te[8] = xz + wy;\n    te[1] = xy + wz;\n    te[5] = 1 - (xx + zz);\n    te[9] = yz - wx;\n    te[2] = xz - wy;\n    te[6] = yz + wx;\n    te[10] = 1 - (xx + yy); // last column\n\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0; // bottom row\n\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  },\n  lookAt: function () {\n    var x = new Vector3();\n    var y = new Vector3();\n    var z = new Vector3();\n    return function lookAt(eye, target, up) {\n      var te = this.elements;\n      z.subVectors(eye, target);\n\n      if (z.lengthSq() === 0) {\n        // eye and target are in the same position\n        z.z = 1;\n      }\n\n      z.normalize();\n      x.crossVectors(up, z);\n\n      if (x.lengthSq() === 0) {\n        // up and z are parallel\n        if (Math.abs(up.z) === 1) {\n          z.x += 0.0001;\n        } else {\n          z.z += 0.0001;\n        }\n\n        z.normalize();\n        x.crossVectors(up, z);\n      }\n\n      x.normalize();\n      y.crossVectors(z, x);\n      te[0] = x.x;\n      te[4] = y.x;\n      te[8] = z.x;\n      te[1] = x.y;\n      te[5] = y.y;\n      te[9] = z.y;\n      te[2] = x.z;\n      te[6] = y.z;\n      te[10] = z.z;\n      return this;\n    };\n  }(),\n  multiply: function (m, n) {\n    if (n !== undefined) {\n      console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n      return this.multiplyMatrices(m, n);\n    }\n\n    return this.multiplyMatrices(this, m);\n  },\n  premultiply: function (m) {\n    return this.multiplyMatrices(m, this);\n  },\n  multiplyMatrices: function (a, b) {\n    var ae = a.elements;\n    var be = b.elements;\n    var te = this.elements;\n    var a11 = ae[0],\n        a12 = ae[4],\n        a13 = ae[8],\n        a14 = ae[12];\n    var a21 = ae[1],\n        a22 = ae[5],\n        a23 = ae[9],\n        a24 = ae[13];\n    var a31 = ae[2],\n        a32 = ae[6],\n        a33 = ae[10],\n        a34 = ae[14];\n    var a41 = ae[3],\n        a42 = ae[7],\n        a43 = ae[11],\n        a44 = ae[15];\n    var b11 = be[0],\n        b12 = be[4],\n        b13 = be[8],\n        b14 = be[12];\n    var b21 = be[1],\n        b22 = be[5],\n        b23 = be[9],\n        b24 = be[13];\n    var b31 = be[2],\n        b32 = be[6],\n        b33 = be[10],\n        b34 = be[14];\n    var b41 = be[3],\n        b42 = be[7],\n        b43 = be[11],\n        b44 = be[15];\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n    te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n    te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n    te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n    te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n    te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n    te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n    te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n    te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n    te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n    te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n    te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n    te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n    te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n    return this;\n  },\n  multiplyScalar: function (s) {\n    var te = this.elements;\n    te[0] *= s;\n    te[4] *= s;\n    te[8] *= s;\n    te[12] *= s;\n    te[1] *= s;\n    te[5] *= s;\n    te[9] *= s;\n    te[13] *= s;\n    te[2] *= s;\n    te[6] *= s;\n    te[10] *= s;\n    te[14] *= s;\n    te[3] *= s;\n    te[7] *= s;\n    te[11] *= s;\n    te[15] *= s;\n    return this;\n  },\n  applyToBufferAttribute: function () {\n    var v1 = new Vector3();\n    return function applyToBufferAttribute(attribute) {\n      for (var i = 0, l = attribute.count; i < l; i++) {\n        v1.x = attribute.getX(i);\n        v1.y = attribute.getY(i);\n        v1.z = attribute.getZ(i);\n        v1.applyMatrix4(this);\n        attribute.setXYZ(i, v1.x, v1.y, v1.z);\n      }\n\n      return attribute;\n    };\n  }(),\n  determinant: function () {\n    var te = this.elements;\n    var n11 = te[0],\n        n12 = te[4],\n        n13 = te[8],\n        n14 = te[12];\n    var n21 = te[1],\n        n22 = te[5],\n        n23 = te[9],\n        n24 = te[13];\n    var n31 = te[2],\n        n32 = te[6],\n        n33 = te[10],\n        n34 = te[14];\n    var n41 = te[3],\n        n42 = te[7],\n        n43 = te[11],\n        n44 = te[15]; //TODO: make this more efficient\n    //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n    return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n  },\n  transpose: function () {\n    var te = this.elements;\n    var tmp;\n    tmp = te[1];\n    te[1] = te[4];\n    te[4] = tmp;\n    tmp = te[2];\n    te[2] = te[8];\n    te[8] = tmp;\n    tmp = te[6];\n    te[6] = te[9];\n    te[9] = tmp;\n    tmp = te[3];\n    te[3] = te[12];\n    te[12] = tmp;\n    tmp = te[7];\n    te[7] = te[13];\n    te[13] = tmp;\n    tmp = te[11];\n    te[11] = te[14];\n    te[14] = tmp;\n    return this;\n  },\n  setPosition: function (v) {\n    var te = this.elements;\n    te[12] = v.x;\n    te[13] = v.y;\n    te[14] = v.z;\n    return this;\n  },\n  getInverse: function (m, throwOnDegenerate) {\n    // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n    var te = this.elements,\n        me = m.elements,\n        n11 = me[0],\n        n21 = me[1],\n        n31 = me[2],\n        n41 = me[3],\n        n12 = me[4],\n        n22 = me[5],\n        n32 = me[6],\n        n42 = me[7],\n        n13 = me[8],\n        n23 = me[9],\n        n33 = me[10],\n        n43 = me[11],\n        n14 = me[12],\n        n24 = me[13],\n        n34 = me[14],\n        n44 = me[15],\n        t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n        t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n        t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n        t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n    var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n    if (det === 0) {\n      var msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n      if (throwOnDegenerate === true) {\n        throw new Error(msg);\n      } else {\n        console.warn(msg);\n      }\n\n      return this.identity();\n    }\n\n    var detInv = 1 / det;\n    te[0] = t11 * detInv;\n    te[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n    te[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n    te[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n    te[4] = t12 * detInv;\n    te[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n    te[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n    te[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n    te[8] = t13 * detInv;\n    te[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n    te[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n    te[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n    te[12] = t14 * detInv;\n    te[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n    te[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n    te[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n    return this;\n  },\n  scale: function (v) {\n    var te = this.elements;\n    var x = v.x,\n        y = v.y,\n        z = v.z;\n    te[0] *= x;\n    te[4] *= y;\n    te[8] *= z;\n    te[1] *= x;\n    te[5] *= y;\n    te[9] *= z;\n    te[2] *= x;\n    te[6] *= y;\n    te[10] *= z;\n    te[3] *= x;\n    te[7] *= y;\n    te[11] *= z;\n    return this;\n  },\n  getMaxScaleOnAxis: function () {\n    var te = this.elements;\n    var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n    var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n    var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n    return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n  },\n  makeTranslation: function (x, y, z) {\n    this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationX: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationY: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationZ: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationAxis: function (axis, angle) {\n    // Based on http://www.gamedev.net/reference/articles/article1199.asp\n    var c = Math.cos(angle);\n    var s = Math.sin(angle);\n    var t = 1 - c;\n    var x = axis.x,\n        y = axis.y,\n        z = axis.z;\n    var tx = t * x,\n        ty = t * y;\n    this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeScale: function (x, y, z) {\n    this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeShear: function (x, y, z) {\n    this.set(1, y, z, 0, x, 1, z, 0, x, y, 1, 0, 0, 0, 0, 1);\n    return this;\n  },\n  compose: function (position, quaternion, scale) {\n    this.makeRotationFromQuaternion(quaternion);\n    this.scale(scale);\n    this.setPosition(position);\n    return this;\n  },\n  decompose: function () {\n    var vector = new Vector3();\n    var matrix = new Matrix4();\n    return function decompose(position, quaternion, scale) {\n      var te = this.elements;\n      var sx = vector.set(te[0], te[1], te[2]).length();\n      var sy = vector.set(te[4], te[5], te[6]).length();\n      var sz = vector.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n      var det = this.determinant();\n      if (det < 0) sx = -sx;\n      position.x = te[12];\n      position.y = te[13];\n      position.z = te[14]; // scale the rotation part\n\n      matrix.copy(this);\n      var invSX = 1 / sx;\n      var invSY = 1 / sy;\n      var invSZ = 1 / sz;\n      matrix.elements[0] *= invSX;\n      matrix.elements[1] *= invSX;\n      matrix.elements[2] *= invSX;\n      matrix.elements[4] *= invSY;\n      matrix.elements[5] *= invSY;\n      matrix.elements[6] *= invSY;\n      matrix.elements[8] *= invSZ;\n      matrix.elements[9] *= invSZ;\n      matrix.elements[10] *= invSZ;\n      quaternion.setFromRotationMatrix(matrix);\n      scale.x = sx;\n      scale.y = sy;\n      scale.z = sz;\n      return this;\n    };\n  }(),\n  makePerspective: function (left, right, top, bottom, near, far) {\n    if (far === undefined) {\n      console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\n    }\n\n    var te = this.elements;\n    var x = 2 * near / (right - left);\n    var y = 2 * near / (top - bottom);\n    var a = (right + left) / (right - left);\n    var b = (top + bottom) / (top - bottom);\n    var c = -(far + near) / (far - near);\n    var d = -2 * far * near / (far - near);\n    te[0] = x;\n    te[4] = 0;\n    te[8] = a;\n    te[12] = 0;\n    te[1] = 0;\n    te[5] = y;\n    te[9] = b;\n    te[13] = 0;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = c;\n    te[14] = d;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = -1;\n    te[15] = 0;\n    return this;\n  },\n  makeOrthographic: function (left, right, top, bottom, near, far) {\n    var te = this.elements;\n    var w = 1.0 / (right - left);\n    var h = 1.0 / (top - bottom);\n    var p = 1.0 / (far - near);\n    var x = (right + left) * w;\n    var y = (top + bottom) * h;\n    var z = (far + near) * p;\n    te[0] = 2 * w;\n    te[4] = 0;\n    te[8] = 0;\n    te[12] = -x;\n    te[1] = 0;\n    te[5] = 2 * h;\n    te[9] = 0;\n    te[13] = -y;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = -2 * p;\n    te[14] = -z;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n    te[15] = 1;\n    return this;\n  },\n  equals: function (matrix) {\n    var te = this.elements;\n    var me = matrix.elements;\n\n    for (var i = 0; i < 16; i++) {\n      if (te[i] !== me[i]) return false;\n    }\n\n    return true;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n\n    for (var i = 0; i < 16; i++) {\n      this.elements[i] = array[i + offset];\n    }\n\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    var te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    array[offset + 9] = te[9];\n    array[offset + 10] = te[10];\n    array[offset + 11] = te[11];\n    array[offset + 12] = te[12];\n    array[offset + 13] = te[13];\n    array[offset + 14] = te[14];\n    array[offset + 15] = te[15];\n    return array;\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture(data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n  Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n  this.image = {\n    data: data,\n    width: width,\n    height: height\n  };\n  this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n  this.generateMipmaps = false;\n  this.flipY = false;\n  this.unpackAlignment = 1;\n}\n\nDataTexture.prototype = Object.create(Texture.prototype);\nDataTexture.prototype.constructor = DataTexture;\nDataTexture.prototype.isDataTexture = true;\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n  images = images !== undefined ? images : [];\n  mapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n  Texture.call(this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n  this.flipY = false;\n}\n\nCubeTexture.prototype = Object.create(Texture.prototype);\nCubeTexture.prototype.constructor = CubeTexture;\nCubeTexture.prototype.isCubeTexture = true;\nObject.defineProperty(CubeTexture.prototype, 'images', {\n  get: function () {\n    return this.image;\n  },\n  set: function (value) {\n    this.image = value;\n  }\n});\n/**\n * @author tschw\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyCubeTexture = new CubeTexture(); // --- Base for inner nodes (including the root) ---\n\nfunction UniformContainer() {\n  this.seq = [];\n  this.map = {};\n} // --- Utilities ---\n// Array Caches (provide typed arrays for temporary by size)\n\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array(16);\nvar mat3array = new Float32Array(9); // Flattening for arrays of vectors and matrices\n\nfunction flatten(array, nBlocks, blockSize) {\n  var firstElem = array[0];\n  if (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n  // see http://jacksondunstan.com/articles/983\n\n  var n = nBlocks * blockSize,\n      r = arrayCacheF32[n];\n\n  if (r === undefined) {\n    r = new Float32Array(n);\n    arrayCacheF32[n] = r;\n  }\n\n  if (nBlocks !== 0) {\n    firstElem.toArray(r, 0);\n\n    for (var i = 1, offset = 0; i !== nBlocks; ++i) {\n      offset += blockSize;\n      array[i].toArray(r, offset);\n    }\n  }\n\n  return r;\n} // Texture unit allocation\n\n\nfunction allocTexUnits(renderer, n) {\n  var r = arrayCacheI32[n];\n\n  if (r === undefined) {\n    r = new Int32Array(n);\n    arrayCacheI32[n] = r;\n  }\n\n  for (var i = 0; i !== n; ++i) r[i] = renderer.allocTextureUnit();\n\n  return r;\n} // --- Setters ---\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n// Single scalar\n\n\nfunction setValue1f(gl, v) {\n  gl.uniform1f(this.addr, v);\n}\n\nfunction setValue1i(gl, v) {\n  gl.uniform1i(this.addr, v);\n} // Single float vector (from flat array or THREE.VectorN)\n\n\nfunction setValue2fv(gl, v) {\n  if (v.x === undefined) gl.uniform2fv(this.addr, v);else gl.uniform2f(this.addr, v.x, v.y);\n}\n\nfunction setValue3fv(gl, v) {\n  if (v.x !== undefined) gl.uniform3f(this.addr, v.x, v.y, v.z);else if (v.r !== undefined) gl.uniform3f(this.addr, v.r, v.g, v.b);else gl.uniform3fv(this.addr, v);\n}\n\nfunction setValue4fv(gl, v) {\n  if (v.x === undefined) gl.uniform4fv(this.addr, v);else gl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n} // Single matrix (from flat array or MatrixN)\n\n\nfunction setValue2fm(gl, v) {\n  gl.uniformMatrix2fv(this.addr, false, v.elements || v);\n}\n\nfunction setValue3fm(gl, v) {\n  if (v.elements === undefined) {\n    gl.uniformMatrix3fv(this.addr, false, v);\n  } else {\n    mat3array.set(v.elements);\n    gl.uniformMatrix3fv(this.addr, false, mat3array);\n  }\n}\n\nfunction setValue4fm(gl, v) {\n  if (v.elements === undefined) {\n    gl.uniformMatrix4fv(this.addr, false, v);\n  } else {\n    mat4array.set(v.elements);\n    gl.uniformMatrix4fv(this.addr, false, mat4array);\n  }\n} // Single texture (2D / Cube)\n\n\nfunction setValueT1(gl, v, renderer) {\n  var unit = renderer.allocTextureUnit();\n  gl.uniform1i(this.addr, unit);\n  renderer.setTexture2D(v || emptyTexture, unit);\n}\n\nfunction setValueT6(gl, v, renderer) {\n  var unit = renderer.allocTextureUnit();\n  gl.uniform1i(this.addr, unit);\n  renderer.setTextureCube(v || emptyCubeTexture, unit);\n} // Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\nfunction setValue2iv(gl, v) {\n  gl.uniform2iv(this.addr, v);\n}\n\nfunction setValue3iv(gl, v) {\n  gl.uniform3iv(this.addr, v);\n}\n\nfunction setValue4iv(gl, v) {\n  gl.uniform4iv(this.addr, v);\n} // Helper to pick the right setter for the singular case\n\n\nfunction getSingularSetter(type) {\n  switch (type) {\n    case 0x1406:\n      return setValue1f;\n    // FLOAT\n\n    case 0x8b50:\n      return setValue2fv;\n    // _VEC2\n\n    case 0x8b51:\n      return setValue3fv;\n    // _VEC3\n\n    case 0x8b52:\n      return setValue4fv;\n    // _VEC4\n\n    case 0x8b5a:\n      return setValue2fm;\n    // _MAT2\n\n    case 0x8b5b:\n      return setValue3fm;\n    // _MAT3\n\n    case 0x8b5c:\n      return setValue4fm;\n    // _MAT4\n\n    case 0x8b5e:\n    case 0x8d66:\n      return setValueT1;\n    // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\n    case 0x8b60:\n      return setValueT6;\n    // SAMPLER_CUBE\n\n    case 0x1404:\n    case 0x8b56:\n      return setValue1i;\n    // INT, BOOL\n\n    case 0x8b53:\n    case 0x8b57:\n      return setValue2iv;\n    // _VEC2\n\n    case 0x8b54:\n    case 0x8b58:\n      return setValue3iv;\n    // _VEC3\n\n    case 0x8b55:\n    case 0x8b59:\n      return setValue4iv;\n    // _VEC4\n  }\n} // Array of scalars\n\n\nfunction setValue1fv(gl, v) {\n  gl.uniform1fv(this.addr, v);\n}\n\nfunction setValue1iv(gl, v) {\n  gl.uniform1iv(this.addr, v);\n} // Array of vectors (flat or from THREE classes)\n\n\nfunction setValueV2a(gl, v) {\n  gl.uniform2fv(this.addr, flatten(v, this.size, 2));\n}\n\nfunction setValueV3a(gl, v) {\n  gl.uniform3fv(this.addr, flatten(v, this.size, 3));\n}\n\nfunction setValueV4a(gl, v) {\n  gl.uniform4fv(this.addr, flatten(v, this.size, 4));\n} // Array of matrices (flat or from THREE clases)\n\n\nfunction setValueM2a(gl, v) {\n  gl.uniformMatrix2fv(this.addr, false, flatten(v, this.size, 4));\n}\n\nfunction setValueM3a(gl, v) {\n  gl.uniformMatrix3fv(this.addr, false, flatten(v, this.size, 9));\n}\n\nfunction setValueM4a(gl, v) {\n  gl.uniformMatrix4fv(this.addr, false, flatten(v, this.size, 16));\n} // Array of textures (2D / Cube)\n\n\nfunction setValueT1a(gl, v, renderer) {\n  var n = v.length,\n      units = allocTexUnits(renderer, n);\n  gl.uniform1iv(this.addr, units);\n\n  for (var i = 0; i !== n; ++i) {\n    renderer.setTexture2D(v[i] || emptyTexture, units[i]);\n  }\n}\n\nfunction setValueT6a(gl, v, renderer) {\n  var n = v.length,\n      units = allocTexUnits(renderer, n);\n  gl.uniform1iv(this.addr, units);\n\n  for (var i = 0; i !== n; ++i) {\n    renderer.setTextureCube(v[i] || emptyCubeTexture, units[i]);\n  }\n} // Helper to pick the right setter for a pure (bottom-level) array\n\n\nfunction getPureArraySetter(type) {\n  switch (type) {\n    case 0x1406:\n      return setValue1fv;\n    // FLOAT\n\n    case 0x8b50:\n      return setValueV2a;\n    // _VEC2\n\n    case 0x8b51:\n      return setValueV3a;\n    // _VEC3\n\n    case 0x8b52:\n      return setValueV4a;\n    // _VEC4\n\n    case 0x8b5a:\n      return setValueM2a;\n    // _MAT2\n\n    case 0x8b5b:\n      return setValueM3a;\n    // _MAT3\n\n    case 0x8b5c:\n      return setValueM4a;\n    // _MAT4\n\n    case 0x8b5e:\n      return setValueT1a;\n    // SAMPLER_2D\n\n    case 0x8b60:\n      return setValueT6a;\n    // SAMPLER_CUBE\n\n    case 0x1404:\n    case 0x8b56:\n      return setValue1iv;\n    // INT, BOOL\n\n    case 0x8b53:\n    case 0x8b57:\n      return setValue2iv;\n    // _VEC2\n\n    case 0x8b54:\n    case 0x8b58:\n      return setValue3iv;\n    // _VEC3\n\n    case 0x8b55:\n    case 0x8b59:\n      return setValue4iv;\n    // _VEC4\n  }\n} // --- Uniform Classes ---\n\n\nfunction SingleUniform(id, activeInfo, addr) {\n  this.id = id;\n  this.addr = addr;\n  this.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n}\n\nfunction PureArrayUniform(id, activeInfo, addr) {\n  this.id = id;\n  this.addr = addr;\n  this.size = activeInfo.size;\n  this.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n}\n\nfunction StructuredUniform(id) {\n  this.id = id;\n  UniformContainer.call(this); // mix-in\n}\n\nStructuredUniform.prototype.setValue = function (gl, value) {\n  // Note: Don't need an extra 'renderer' parameter, since samplers\n  // are not allowed in structured uniforms.\n  var seq = this.seq;\n\n  for (var i = 0, n = seq.length; i !== n; ++i) {\n    var u = seq[i];\n    u.setValue(gl, value[u.id]);\n  }\n}; // --- Top-level ---\n// Parser - builds up the property tree from the path strings\n\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g; // extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform(container, uniformObject) {\n  container.seq.push(uniformObject);\n  container.map[uniformObject.id] = uniformObject;\n}\n\nfunction parseUniform(activeInfo, addr, container) {\n  var path = activeInfo.name,\n      pathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n  RePathPart.lastIndex = 0;\n\n  for (;;) {\n    var match = RePathPart.exec(path),\n        matchEnd = RePathPart.lastIndex,\n        id = match[1],\n        idIsIndex = match[2] === ']',\n        subscript = match[3];\n    if (idIsIndex) id = id | 0; // convert to integer\n\n    if (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n      // bare name or \"pure\" bottom-level array \"[0]\" suffix\n      addUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n      break;\n    } else {\n      // step into inner node / create it in case it doesn't exist\n      var map = container.map,\n          next = map[id];\n\n      if (next === undefined) {\n        next = new StructuredUniform(id);\n        addUniform(container, next);\n      }\n\n      container = next;\n    }\n  }\n} // Root Container\n\n\nfunction WebGLUniforms(gl, program, renderer) {\n  UniformContainer.call(this);\n  this.renderer = renderer;\n  var n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n  for (var i = 0; i < n; ++i) {\n    var info = gl.getActiveUniform(program, i),\n        path = info.name,\n        addr = gl.getUniformLocation(program, path);\n    parseUniform(info, addr, this);\n  }\n}\n\nWebGLUniforms.prototype.setValue = function (gl, name, value) {\n  var u = this.map[name];\n  if (u !== undefined) u.setValue(gl, value, this.renderer);\n};\n\nWebGLUniforms.prototype.setOptional = function (gl, object, name) {\n  var v = object[name];\n  if (v !== undefined) this.setValue(gl, name, v);\n}; // Static interface\n\n\nWebGLUniforms.upload = function (gl, seq, values, renderer) {\n  for (var i = 0, n = seq.length; i !== n; ++i) {\n    var u = seq[i],\n        v = values[u.id];\n\n    if (v.needsUpdate !== false) {\n      // note: always updating when .needsUpdate is undefined\n      u.setValue(gl, v.value, renderer);\n    }\n  }\n};\n\nWebGLUniforms.seqWithValue = function (seq, values) {\n  var r = [];\n\n  for (var i = 0, n = seq.length; i !== n; ++i) {\n    var u = seq[i];\n    if (u.id in values) r.push(u);\n  }\n\n  return r;\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nvar ColorKeywords = {\n  'aliceblue': 0xF0F8FF,\n  'antiquewhite': 0xFAEBD7,\n  'aqua': 0x00FFFF,\n  'aquamarine': 0x7FFFD4,\n  'azure': 0xF0FFFF,\n  'beige': 0xF5F5DC,\n  'bisque': 0xFFE4C4,\n  'black': 0x000000,\n  'blanchedalmond': 0xFFEBCD,\n  'blue': 0x0000FF,\n  'blueviolet': 0x8A2BE2,\n  'brown': 0xA52A2A,\n  'burlywood': 0xDEB887,\n  'cadetblue': 0x5F9EA0,\n  'chartreuse': 0x7FFF00,\n  'chocolate': 0xD2691E,\n  'coral': 0xFF7F50,\n  'cornflowerblue': 0x6495ED,\n  'cornsilk': 0xFFF8DC,\n  'crimson': 0xDC143C,\n  'cyan': 0x00FFFF,\n  'darkblue': 0x00008B,\n  'darkcyan': 0x008B8B,\n  'darkgoldenrod': 0xB8860B,\n  'darkgray': 0xA9A9A9,\n  'darkgreen': 0x006400,\n  'darkgrey': 0xA9A9A9,\n  'darkkhaki': 0xBDB76B,\n  'darkmagenta': 0x8B008B,\n  'darkolivegreen': 0x556B2F,\n  'darkorange': 0xFF8C00,\n  'darkorchid': 0x9932CC,\n  'darkred': 0x8B0000,\n  'darksalmon': 0xE9967A,\n  'darkseagreen': 0x8FBC8F,\n  'darkslateblue': 0x483D8B,\n  'darkslategray': 0x2F4F4F,\n  'darkslategrey': 0x2F4F4F,\n  'darkturquoise': 0x00CED1,\n  'darkviolet': 0x9400D3,\n  'deeppink': 0xFF1493,\n  'deepskyblue': 0x00BFFF,\n  'dimgray': 0x696969,\n  'dimgrey': 0x696969,\n  'dodgerblue': 0x1E90FF,\n  'firebrick': 0xB22222,\n  'floralwhite': 0xFFFAF0,\n  'forestgreen': 0x228B22,\n  'fuchsia': 0xFF00FF,\n  'gainsboro': 0xDCDCDC,\n  'ghostwhite': 0xF8F8FF,\n  'gold': 0xFFD700,\n  'goldenrod': 0xDAA520,\n  'gray': 0x808080,\n  'green': 0x008000,\n  'greenyellow': 0xADFF2F,\n  'grey': 0x808080,\n  'honeydew': 0xF0FFF0,\n  'hotpink': 0xFF69B4,\n  'indianred': 0xCD5C5C,\n  'indigo': 0x4B0082,\n  'ivory': 0xFFFFF0,\n  'khaki': 0xF0E68C,\n  'lavender': 0xE6E6FA,\n  'lavenderblush': 0xFFF0F5,\n  'lawngreen': 0x7CFC00,\n  'lemonchiffon': 0xFFFACD,\n  'lightblue': 0xADD8E6,\n  'lightcoral': 0xF08080,\n  'lightcyan': 0xE0FFFF,\n  'lightgoldenrodyellow': 0xFAFAD2,\n  'lightgray': 0xD3D3D3,\n  'lightgreen': 0x90EE90,\n  'lightgrey': 0xD3D3D3,\n  'lightpink': 0xFFB6C1,\n  'lightsalmon': 0xFFA07A,\n  'lightseagreen': 0x20B2AA,\n  'lightskyblue': 0x87CEFA,\n  'lightslategray': 0x778899,\n  'lightslategrey': 0x778899,\n  'lightsteelblue': 0xB0C4DE,\n  'lightyellow': 0xFFFFE0,\n  'lime': 0x00FF00,\n  'limegreen': 0x32CD32,\n  'linen': 0xFAF0E6,\n  'magenta': 0xFF00FF,\n  'maroon': 0x800000,\n  'mediumaquamarine': 0x66CDAA,\n  'mediumblue': 0x0000CD,\n  'mediumorchid': 0xBA55D3,\n  'mediumpurple': 0x9370DB,\n  'mediumseagreen': 0x3CB371,\n  'mediumslateblue': 0x7B68EE,\n  'mediumspringgreen': 0x00FA9A,\n  'mediumturquoise': 0x48D1CC,\n  'mediumvioletred': 0xC71585,\n  'midnightblue': 0x191970,\n  'mintcream': 0xF5FFFA,\n  'mistyrose': 0xFFE4E1,\n  'moccasin': 0xFFE4B5,\n  'navajowhite': 0xFFDEAD,\n  'navy': 0x000080,\n  'oldlace': 0xFDF5E6,\n  'olive': 0x808000,\n  'olivedrab': 0x6B8E23,\n  'orange': 0xFFA500,\n  'orangered': 0xFF4500,\n  'orchid': 0xDA70D6,\n  'palegoldenrod': 0xEEE8AA,\n  'palegreen': 0x98FB98,\n  'paleturquoise': 0xAFEEEE,\n  'palevioletred': 0xDB7093,\n  'papayawhip': 0xFFEFD5,\n  'peachpuff': 0xFFDAB9,\n  'peru': 0xCD853F,\n  'pink': 0xFFC0CB,\n  'plum': 0xDDA0DD,\n  'powderblue': 0xB0E0E6,\n  'purple': 0x800080,\n  'rebeccapurple': 0x663399,\n  'red': 0xFF0000,\n  'rosybrown': 0xBC8F8F,\n  'royalblue': 0x4169E1,\n  'saddlebrown': 0x8B4513,\n  'salmon': 0xFA8072,\n  'sandybrown': 0xF4A460,\n  'seagreen': 0x2E8B57,\n  'seashell': 0xFFF5EE,\n  'sienna': 0xA0522D,\n  'silver': 0xC0C0C0,\n  'skyblue': 0x87CEEB,\n  'slateblue': 0x6A5ACD,\n  'slategray': 0x708090,\n  'slategrey': 0x708090,\n  'snow': 0xFFFAFA,\n  'springgreen': 0x00FF7F,\n  'steelblue': 0x4682B4,\n  'tan': 0xD2B48C,\n  'teal': 0x008080,\n  'thistle': 0xD8BFD8,\n  'tomato': 0xFF6347,\n  'turquoise': 0x40E0D0,\n  'violet': 0xEE82EE,\n  'wheat': 0xF5DEB3,\n  'white': 0xFFFFFF,\n  'whitesmoke': 0xF5F5F5,\n  'yellow': 0xFFFF00,\n  'yellowgreen': 0x9ACD32\n};\n\nfunction Color(r, g, b) {\n  if (g === undefined && b === undefined) {\n    // r is THREE.Color, hex or string\n    return this.set(r);\n  }\n\n  return this.setRGB(r, g, b);\n}\n\nObject.assign(Color.prototype, {\n  isColor: true,\n  r: 1,\n  g: 1,\n  b: 1,\n  set: function (value) {\n    if (value && value.isColor) {\n      this.copy(value);\n    } else if (typeof value === 'number') {\n      this.setHex(value);\n    } else if (typeof value === 'string') {\n      this.setStyle(value);\n    }\n\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.r = scalar;\n    this.g = scalar;\n    this.b = scalar;\n    return this;\n  },\n  setHex: function (hex) {\n    hex = Math.floor(hex);\n    this.r = (hex >> 16 & 255) / 255;\n    this.g = (hex >> 8 & 255) / 255;\n    this.b = (hex & 255) / 255;\n    return this;\n  },\n  setRGB: function (r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    return this;\n  },\n  setHSL: function () {\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n      return p;\n    }\n\n    return function setHSL(h, s, l) {\n      // h,s,l ranges are in 0.0 - 1.0\n      h = _Math.euclideanModulo(h, 1);\n      s = _Math.clamp(s, 0, 1);\n      l = _Math.clamp(l, 0, 1);\n\n      if (s === 0) {\n        this.r = this.g = this.b = l;\n      } else {\n        var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n        var q = 2 * l - p;\n        this.r = hue2rgb(q, p, h + 1 / 3);\n        this.g = hue2rgb(q, p, h);\n        this.b = hue2rgb(q, p, h - 1 / 3);\n      }\n\n      return this;\n    };\n  }(),\n  setStyle: function (style) {\n    function handleAlpha(string) {\n      if (string === undefined) return;\n\n      if (parseFloat(string) < 1) {\n        console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n      }\n    }\n\n    var m;\n\n    if (m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(style)) {\n      // rgb / hsl\n      var color;\n      var name = m[1];\n      var components = m[2];\n\n      switch (name) {\n        case 'rgb':\n        case 'rgba':\n          if (color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // rgb(255,0,0) rgba(255,0,0,0.5)\n            this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n            this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n            this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n            handleAlpha(color[5]);\n            return this;\n          }\n\n          if (color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n            this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n            this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n            this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n            handleAlpha(color[5]);\n            return this;\n          }\n\n          break;\n\n        case 'hsl':\n        case 'hsla':\n          if (color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n            var h = parseFloat(color[1]) / 360;\n            var s = parseInt(color[2], 10) / 100;\n            var l = parseInt(color[3], 10) / 100;\n            handleAlpha(color[5]);\n            return this.setHSL(h, s, l);\n          }\n\n          break;\n      }\n    } else if (m = /^\\#([A-Fa-f0-9]+)$/.exec(style)) {\n      // hex color\n      var hex = m[1];\n      var size = hex.length;\n\n      if (size === 3) {\n        // #ff0\n        this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n        this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n        this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n        return this;\n      } else if (size === 6) {\n        // #ff0000\n        this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n        this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n        this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n        return this;\n      }\n    }\n\n    if (style && style.length > 0) {\n      // color keywords\n      var hex = ColorKeywords[style];\n\n      if (hex !== undefined) {\n        // red\n        this.setHex(hex);\n      } else {\n        // unknown color\n        console.warn('THREE.Color: Unknown color ' + style);\n      }\n    }\n\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this.r, this.g, this.b);\n  },\n  copy: function (color) {\n    this.r = color.r;\n    this.g = color.g;\n    this.b = color.b;\n    return this;\n  },\n  copyGammaToLinear: function (color, gammaFactor) {\n    if (gammaFactor === undefined) gammaFactor = 2.0;\n    this.r = Math.pow(color.r, gammaFactor);\n    this.g = Math.pow(color.g, gammaFactor);\n    this.b = Math.pow(color.b, gammaFactor);\n    return this;\n  },\n  copyLinearToGamma: function (color, gammaFactor) {\n    if (gammaFactor === undefined) gammaFactor = 2.0;\n    var safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n    this.r = Math.pow(color.r, safeInverse);\n    this.g = Math.pow(color.g, safeInverse);\n    this.b = Math.pow(color.b, safeInverse);\n    return this;\n  },\n  convertGammaToLinear: function () {\n    var r = this.r,\n        g = this.g,\n        b = this.b;\n    this.r = r * r;\n    this.g = g * g;\n    this.b = b * b;\n    return this;\n  },\n  convertLinearToGamma: function () {\n    this.r = Math.sqrt(this.r);\n    this.g = Math.sqrt(this.g);\n    this.b = Math.sqrt(this.b);\n    return this;\n  },\n  getHex: function () {\n    return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n  },\n  getHexString: function () {\n    return ('000000' + this.getHex().toString(16)).slice(-6);\n  },\n  getHSL: function (optionalTarget) {\n    // h,s,l ranges are in 0.0 - 1.0\n    var hsl = optionalTarget || {\n      h: 0,\n      s: 0,\n      l: 0\n    };\n    var r = this.r,\n        g = this.g,\n        b = this.b;\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var hue, saturation;\n    var lightness = (min + max) / 2.0;\n\n    if (min === max) {\n      hue = 0;\n      saturation = 0;\n    } else {\n      var delta = max - min;\n      saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n      switch (max) {\n        case r:\n          hue = (g - b) / delta + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          hue = (b - r) / delta + 2;\n          break;\n\n        case b:\n          hue = (r - g) / delta + 4;\n          break;\n      }\n\n      hue /= 6;\n    }\n\n    hsl.h = hue;\n    hsl.s = saturation;\n    hsl.l = lightness;\n    return hsl;\n  },\n  getStyle: function () {\n    return 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n  },\n  offsetHSL: function (h, s, l) {\n    var hsl = this.getHSL();\n    hsl.h += h;\n    hsl.s += s;\n    hsl.l += l;\n    this.setHSL(hsl.h, hsl.s, hsl.l);\n    return this;\n  },\n  add: function (color) {\n    this.r += color.r;\n    this.g += color.g;\n    this.b += color.b;\n    return this;\n  },\n  addColors: function (color1, color2) {\n    this.r = color1.r + color2.r;\n    this.g = color1.g + color2.g;\n    this.b = color1.b + color2.b;\n    return this;\n  },\n  addScalar: function (s) {\n    this.r += s;\n    this.g += s;\n    this.b += s;\n    return this;\n  },\n  sub: function (color) {\n    this.r = Math.max(0, this.r - color.r);\n    this.g = Math.max(0, this.g - color.g);\n    this.b = Math.max(0, this.b - color.b);\n    return this;\n  },\n  multiply: function (color) {\n    this.r *= color.r;\n    this.g *= color.g;\n    this.b *= color.b;\n    return this;\n  },\n  multiplyScalar: function (s) {\n    this.r *= s;\n    this.g *= s;\n    this.b *= s;\n    return this;\n  },\n  lerp: function (color, alpha) {\n    this.r += (color.r - this.r) * alpha;\n    this.g += (color.g - this.g) * alpha;\n    this.b += (color.b - this.b) * alpha;\n    return this;\n  },\n  equals: function (c) {\n    return c.r === this.r && c.g === this.g && c.b === this.b;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.r = array[offset];\n    this.g = array[offset + 1];\n    this.b = array[offset + 2];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.r;\n    array[offset + 1] = this.g;\n    array[offset + 2] = this.b;\n    return array;\n  },\n  toJSON: function () {\n    return this.getHex();\n  }\n});\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n  common: {\n    diffuse: {\n      value: new Color(0xeeeeee)\n    },\n    opacity: {\n      value: 1.0\n    },\n    map: {\n      value: null\n    },\n    offsetRepeat: {\n      value: new Vector4(0, 0, 1, 1)\n    },\n    alphaMap: {\n      value: null\n    }\n  },\n  specularmap: {\n    specularMap: {\n      value: null\n    }\n  },\n  envmap: {\n    envMap: {\n      value: null\n    },\n    flipEnvMap: {\n      value: -1\n    },\n    reflectivity: {\n      value: 1.0\n    },\n    refractionRatio: {\n      value: 0.98\n    }\n  },\n  aomap: {\n    aoMap: {\n      value: null\n    },\n    aoMapIntensity: {\n      value: 1\n    }\n  },\n  lightmap: {\n    lightMap: {\n      value: null\n    },\n    lightMapIntensity: {\n      value: 1\n    }\n  },\n  emissivemap: {\n    emissiveMap: {\n      value: null\n    }\n  },\n  bumpmap: {\n    bumpMap: {\n      value: null\n    },\n    bumpScale: {\n      value: 1\n    }\n  },\n  normalmap: {\n    normalMap: {\n      value: null\n    },\n    normalScale: {\n      value: new Vector2(1, 1)\n    }\n  },\n  displacementmap: {\n    displacementMap: {\n      value: null\n    },\n    displacementScale: {\n      value: 1\n    },\n    displacementBias: {\n      value: 0\n    }\n  },\n  roughnessmap: {\n    roughnessMap: {\n      value: null\n    }\n  },\n  metalnessmap: {\n    metalnessMap: {\n      value: null\n    }\n  },\n  gradientmap: {\n    gradientMap: {\n      value: null\n    }\n  },\n  fog: {\n    fogDensity: {\n      value: 0.00025\n    },\n    fogNear: {\n      value: 1\n    },\n    fogFar: {\n      value: 2000\n    },\n    fogColor: {\n      value: new Color(0xffffff)\n    }\n  },\n  lights: {\n    ambientLightColor: {\n      value: []\n    },\n    directionalLights: {\n      value: [],\n      properties: {\n        direction: {},\n        color: {},\n        shadow: {},\n        shadowBias: {},\n        shadowRadius: {},\n        shadowMapSize: {}\n      }\n    },\n    directionalShadowMap: {\n      value: []\n    },\n    directionalShadowMatrix: {\n      value: []\n    },\n    spotLights: {\n      value: [],\n      properties: {\n        color: {},\n        position: {},\n        direction: {},\n        distance: {},\n        coneCos: {},\n        penumbraCos: {},\n        decay: {},\n        shadow: {},\n        shadowBias: {},\n        shadowRadius: {},\n        shadowMapSize: {}\n      }\n    },\n    spotShadowMap: {\n      value: []\n    },\n    spotShadowMatrix: {\n      value: []\n    },\n    pointLights: {\n      value: [],\n      properties: {\n        color: {},\n        position: {},\n        decay: {},\n        distance: {},\n        shadow: {},\n        shadowBias: {},\n        shadowRadius: {},\n        shadowMapSize: {},\n        shadowCameraNear: {},\n        shadowCameraFar: {}\n      }\n    },\n    pointShadowMap: {\n      value: []\n    },\n    pointShadowMatrix: {\n      value: []\n    },\n    hemisphereLights: {\n      value: [],\n      properties: {\n        direction: {},\n        skyColor: {},\n        groundColor: {}\n      }\n    },\n    // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n    rectAreaLights: {\n      value: [],\n      properties: {\n        color: {},\n        position: {},\n        width: {},\n        height: {}\n      }\n    }\n  },\n  points: {\n    diffuse: {\n      value: new Color(0xeeeeee)\n    },\n    opacity: {\n      value: 1.0\n    },\n    size: {\n      value: 1.0\n    },\n    scale: {\n      value: 1.0\n    },\n    map: {\n      value: null\n    },\n    offsetRepeat: {\n      value: new Vector4(0, 0, 1, 1)\n    }\n  }\n};\n/**\n * Uniform Utilities\n */\n\nvar UniformsUtils = {\n  merge: function (uniforms) {\n    var merged = {};\n\n    for (var u = 0; u < uniforms.length; u++) {\n      var tmp = this.clone(uniforms[u]);\n\n      for (var p in tmp) {\n        merged[p] = tmp[p];\n      }\n    }\n\n    return merged;\n  },\n  clone: function (uniforms_src) {\n    var uniforms_dst = {};\n\n    for (var u in uniforms_src) {\n      uniforms_dst[u] = {};\n\n      for (var p in uniforms_src[u]) {\n        var parameter_src = uniforms_src[u][p];\n\n        if (parameter_src && (parameter_src.isColor || parameter_src.isMatrix3 || parameter_src.isMatrix4 || parameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 || parameter_src.isTexture)) {\n          uniforms_dst[u][p] = parameter_src.clone();\n        } else if (Array.isArray(parameter_src)) {\n          uniforms_dst[u][p] = parameter_src.slice();\n        } else {\n          uniforms_dst[u][p] = parameter_src;\n        }\n      }\n    }\n\n    return uniforms_dst;\n  }\n};\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\nvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\nvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat theta = acos( dot( N, V ) );\\n\\tvec2 uv = vec2(\\n\\t\\tsqrt( saturate( roughness ) ),\\n\\t\\tsaturate( theta / ( 0.5 * PI ) ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\\n\\tfloat b = 3.45068 + (4.18814 + y) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transpose( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\\n\\treturn result;\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n\";\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transpose( const in mat3 v ) {\\n\\tmat3 tmp;\\n\\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\\n\\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\\n\\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\\n\\treturn tmp;\\n}\\n\";\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\nvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\nvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\nvar lights_pars = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltcMat;\\tuniform sampler2D ltcMag;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tfloat norm = texture2D( ltcMag, uv ).a;\\n\\t\\tvec4 t = texture2D( ltcMat, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3(   1,   0, t.y ),\\n\\t\\t\\tvec3(   0, t.z,   0 ),\\n\\t\\t\\tvec3( t.w,   0, t.x )\\n\\t\\t);\\n\\t\\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\nvar lights_template = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\nvar logdepthbuf_fragment = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\nvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\";\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\";\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\nvar normal_fragment = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\nvar tonemapping_pars_fragment = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\";\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\nvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\nvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n}\\n\";\nvar shadow_vert = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\nvar ShaderChunk = {\n  alphamap_fragment: alphamap_fragment,\n  alphamap_pars_fragment: alphamap_pars_fragment,\n  alphatest_fragment: alphatest_fragment,\n  aomap_fragment: aomap_fragment,\n  aomap_pars_fragment: aomap_pars_fragment,\n  begin_vertex: begin_vertex,\n  beginnormal_vertex: beginnormal_vertex,\n  bsdfs: bsdfs,\n  bumpmap_pars_fragment: bumpmap_pars_fragment,\n  clipping_planes_fragment: clipping_planes_fragment,\n  clipping_planes_pars_fragment: clipping_planes_pars_fragment,\n  clipping_planes_pars_vertex: clipping_planes_pars_vertex,\n  clipping_planes_vertex: clipping_planes_vertex,\n  color_fragment: color_fragment,\n  color_pars_fragment: color_pars_fragment,\n  color_pars_vertex: color_pars_vertex,\n  color_vertex: color_vertex,\n  common: common,\n  cube_uv_reflection_fragment: cube_uv_reflection_fragment,\n  defaultnormal_vertex: defaultnormal_vertex,\n  displacementmap_pars_vertex: displacementmap_pars_vertex,\n  displacementmap_vertex: displacementmap_vertex,\n  emissivemap_fragment: emissivemap_fragment,\n  emissivemap_pars_fragment: emissivemap_pars_fragment,\n  encodings_fragment: encodings_fragment,\n  encodings_pars_fragment: encodings_pars_fragment,\n  envmap_fragment: envmap_fragment,\n  envmap_pars_fragment: envmap_pars_fragment,\n  envmap_pars_vertex: envmap_pars_vertex,\n  envmap_vertex: envmap_vertex,\n  fog_vertex: fog_vertex,\n  fog_pars_vertex: fog_pars_vertex,\n  fog_fragment: fog_fragment,\n  fog_pars_fragment: fog_pars_fragment,\n  gradientmap_pars_fragment: gradientmap_pars_fragment,\n  lightmap_fragment: lightmap_fragment,\n  lightmap_pars_fragment: lightmap_pars_fragment,\n  lights_lambert_vertex: lights_lambert_vertex,\n  lights_pars: lights_pars,\n  lights_phong_fragment: lights_phong_fragment,\n  lights_phong_pars_fragment: lights_phong_pars_fragment,\n  lights_physical_fragment: lights_physical_fragment,\n  lights_physical_pars_fragment: lights_physical_pars_fragment,\n  lights_template: lights_template,\n  logdepthbuf_fragment: logdepthbuf_fragment,\n  logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n  logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n  logdepthbuf_vertex: logdepthbuf_vertex,\n  map_fragment: map_fragment,\n  map_pars_fragment: map_pars_fragment,\n  map_particle_fragment: map_particle_fragment,\n  map_particle_pars_fragment: map_particle_pars_fragment,\n  metalnessmap_fragment: metalnessmap_fragment,\n  metalnessmap_pars_fragment: metalnessmap_pars_fragment,\n  morphnormal_vertex: morphnormal_vertex,\n  morphtarget_pars_vertex: morphtarget_pars_vertex,\n  morphtarget_vertex: morphtarget_vertex,\n  normal_fragment: normal_fragment,\n  normalmap_pars_fragment: normalmap_pars_fragment,\n  packing: packing,\n  premultiplied_alpha_fragment: premultiplied_alpha_fragment,\n  project_vertex: project_vertex,\n  dithering_fragment: dithering_fragment,\n  dithering_pars_fragment: dithering_pars_fragment,\n  roughnessmap_fragment: roughnessmap_fragment,\n  roughnessmap_pars_fragment: roughnessmap_pars_fragment,\n  shadowmap_pars_fragment: shadowmap_pars_fragment,\n  shadowmap_pars_vertex: shadowmap_pars_vertex,\n  shadowmap_vertex: shadowmap_vertex,\n  shadowmask_pars_fragment: shadowmask_pars_fragment,\n  skinbase_vertex: skinbase_vertex,\n  skinning_pars_vertex: skinning_pars_vertex,\n  skinning_vertex: skinning_vertex,\n  skinnormal_vertex: skinnormal_vertex,\n  specularmap_fragment: specularmap_fragment,\n  specularmap_pars_fragment: specularmap_pars_fragment,\n  tonemapping_fragment: tonemapping_fragment,\n  tonemapping_pars_fragment: tonemapping_pars_fragment,\n  uv_pars_fragment: uv_pars_fragment,\n  uv_pars_vertex: uv_pars_vertex,\n  uv_vertex: uv_vertex,\n  uv2_pars_fragment: uv2_pars_fragment,\n  uv2_pars_vertex: uv2_pars_vertex,\n  uv2_vertex: uv2_vertex,\n  worldpos_vertex: worldpos_vertex,\n  cube_frag: cube_frag,\n  cube_vert: cube_vert,\n  depth_frag: depth_frag,\n  depth_vert: depth_vert,\n  distanceRGBA_frag: distanceRGBA_frag,\n  distanceRGBA_vert: distanceRGBA_vert,\n  equirect_frag: equirect_frag,\n  equirect_vert: equirect_vert,\n  linedashed_frag: linedashed_frag,\n  linedashed_vert: linedashed_vert,\n  meshbasic_frag: meshbasic_frag,\n  meshbasic_vert: meshbasic_vert,\n  meshlambert_frag: meshlambert_frag,\n  meshlambert_vert: meshlambert_vert,\n  meshphong_frag: meshphong_frag,\n  meshphong_vert: meshphong_vert,\n  meshphysical_frag: meshphysical_frag,\n  meshphysical_vert: meshphysical_vert,\n  normal_frag: normal_frag,\n  normal_vert: normal_vert,\n  points_frag: points_frag,\n  points_vert: points_vert,\n  shadow_frag: shadow_frag,\n  shadow_vert: shadow_vert\n};\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n  basic: {\n    uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n    vertexShader: ShaderChunk.meshbasic_vert,\n    fragmentShader: ShaderChunk.meshbasic_frag\n  },\n  lambert: {\n    uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: new Color(0x000000)\n      }\n    }]),\n    vertexShader: ShaderChunk.meshlambert_vert,\n    fragmentShader: ShaderChunk.meshlambert_frag\n  },\n  phong: {\n    uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: new Color(0x000000)\n      },\n      specular: {\n        value: new Color(0x111111)\n      },\n      shininess: {\n        value: 30\n      }\n    }]),\n    vertexShader: ShaderChunk.meshphong_vert,\n    fragmentShader: ShaderChunk.meshphong_frag\n  },\n  standard: {\n    uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: new Color(0x000000)\n      },\n      roughness: {\n        value: 0.5\n      },\n      metalness: {\n        value: 0.5\n      },\n      envMapIntensity: {\n        value: 1\n      } // temporary\n\n    }]),\n    vertexShader: ShaderChunk.meshphysical_vert,\n    fragmentShader: ShaderChunk.meshphysical_frag\n  },\n  points: {\n    uniforms: UniformsUtils.merge([UniformsLib.points, UniformsLib.fog]),\n    vertexShader: ShaderChunk.points_vert,\n    fragmentShader: ShaderChunk.points_frag\n  },\n  dashed: {\n    uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.fog, {\n      scale: {\n        value: 1\n      },\n      dashSize: {\n        value: 1\n      },\n      totalSize: {\n        value: 2\n      }\n    }]),\n    vertexShader: ShaderChunk.linedashed_vert,\n    fragmentShader: ShaderChunk.linedashed_frag\n  },\n  depth: {\n    uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.displacementmap]),\n    vertexShader: ShaderChunk.depth_vert,\n    fragmentShader: ShaderChunk.depth_frag\n  },\n  normal: {\n    uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n      opacity: {\n        value: 1.0\n      }\n    }]),\n    vertexShader: ShaderChunk.normal_vert,\n    fragmentShader: ShaderChunk.normal_frag\n  },\n\n  /* -------------------------------------------------------------------------\n  //\tCube map shader\n   ------------------------------------------------------------------------- */\n  cube: {\n    uniforms: {\n      tCube: {\n        value: null\n      },\n      tFlip: {\n        value: -1\n      },\n      opacity: {\n        value: 1.0\n      }\n    },\n    vertexShader: ShaderChunk.cube_vert,\n    fragmentShader: ShaderChunk.cube_frag\n  },\n  equirect: {\n    uniforms: {\n      tEquirect: {\n        value: null\n      }\n    },\n    vertexShader: ShaderChunk.equirect_vert,\n    fragmentShader: ShaderChunk.equirect_frag\n  },\n  distanceRGBA: {\n    uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.displacementmap, {\n      referencePosition: {\n        value: new Vector3()\n      },\n      nearDistance: {\n        value: 1\n      },\n      farDistance: {\n        value: 1000\n      }\n    }]),\n    vertexShader: ShaderChunk.distanceRGBA_vert,\n    fragmentShader: ShaderChunk.distanceRGBA_frag\n  },\n  shadow: {\n    uniforms: UniformsUtils.merge([UniformsLib.lights, {\n      color: {\n        value: new Color(0x00000)\n      },\n      opacity: {\n        value: 1.0\n      }\n    }]),\n    vertexShader: ShaderChunk.shadow_vert,\n    fragmentShader: ShaderChunk.shadow_frag\n  }\n};\nShaderLib.physical = {\n  uniforms: UniformsUtils.merge([ShaderLib.standard.uniforms, {\n    clearCoat: {\n      value: 0\n    },\n    clearCoatRoughness: {\n      value: 0\n    }\n  }]),\n  vertexShader: ShaderChunk.meshphysical_vert,\n  fragmentShader: ShaderChunk.meshphysical_frag\n};\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2(min, max) {\n  this.min = min !== undefined ? min : new Vector2(+Infinity, +Infinity);\n  this.max = max !== undefined ? max : new Vector2(-Infinity, -Infinity);\n}\n\nObject.assign(Box2.prototype, {\n  set: function (min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  },\n  setFromPoints: function (points) {\n    this.makeEmpty();\n\n    for (var i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  },\n  setFromCenterAndSize: function () {\n    var v1 = new Vector2();\n    return function setFromCenterAndSize(center, size) {\n      var halfSize = v1.copy(size).multiplyScalar(0.5);\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  },\n  makeEmpty: function () {\n    this.min.x = this.min.y = +Infinity;\n    this.max.x = this.max.y = -Infinity;\n    return this;\n  },\n  isEmpty: function () {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n    return this.max.x < this.min.x || this.max.y < this.min.y;\n  },\n  getCenter: function (optionalTarget) {\n    var result = optionalTarget || new Vector2();\n    return this.isEmpty() ? result.set(0, 0) : result.addVectors(this.min, this.max).multiplyScalar(0.5);\n  },\n  getSize: function (optionalTarget) {\n    var result = optionalTarget || new Vector2();\n    return this.isEmpty() ? result.set(0, 0) : result.subVectors(this.max, this.min);\n  },\n  expandByPoint: function (point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  },\n  expandByVector: function (vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  },\n  expandByScalar: function (scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  },\n  containsPoint: function (point) {\n    return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n  },\n  containsBox: function (box) {\n    return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n  },\n  getParameter: function (point, optionalTarget) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    var result = optionalTarget || new Vector2();\n    return result.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n  },\n  intersectsBox: function (box) {\n    // using 4 splitting planes to rule out intersections\n    return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n  },\n  clampPoint: function (point, optionalTarget) {\n    var result = optionalTarget || new Vector2();\n    return result.copy(point).clamp(this.min, this.max);\n  },\n  distanceToPoint: function () {\n    var v1 = new Vector2();\n    return function distanceToPoint(point) {\n      var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n      return clampedPoint.sub(point).length();\n    };\n  }(),\n  intersect: function (box) {\n    this.min.max(box.min);\n    this.max.min(box.max);\n    return this;\n  },\n  union: function (box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  },\n  translate: function (offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  },\n  equals: function (box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n});\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction WebGLFlareRenderer(renderer, gl, state, textures, capabilities) {\n  var vertexBuffer, elementBuffer;\n  var shader, program, attributes, uniforms;\n  var tempTexture, occlusionTexture;\n\n  function init() {\n    var vertices = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1]);\n    var faces = new Uint16Array([0, 1, 2, 0, 2, 3]); // buffers\n\n    vertexBuffer = gl.createBuffer();\n    elementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW); // textures\n\n    tempTexture = gl.createTexture();\n    occlusionTexture = gl.createTexture();\n    state.bindTexture(gl.TEXTURE_2D, tempTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    state.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    shader = {\n      vertexShader: [\"uniform lowp int renderType;\", \"uniform vec3 screenPosition;\", \"uniform vec2 scale;\", \"uniform float rotation;\", \"uniform sampler2D occlusionMap;\", \"attribute vec2 position;\", \"attribute vec2 uv;\", \"varying vec2 vUV;\", \"varying float vVisibility;\", \"void main() {\", \"vUV = uv;\", \"vec2 pos = position;\", \"if ( renderType == 2 ) {\", \"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\", \"vVisibility =        visibility.r / 9.0;\", \"vVisibility *= 1.0 - visibility.g / 9.0;\", \"vVisibility *=       visibility.b / 9.0;\", \"vVisibility *= 1.0 - visibility.a / 9.0;\", \"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\", \"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\", \"}\", \"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\", \"}\"].join(\"\\n\"),\n      fragmentShader: [\"uniform lowp int renderType;\", \"uniform sampler2D map;\", \"uniform float opacity;\", \"uniform vec3 color;\", \"varying vec2 vUV;\", \"varying float vVisibility;\", \"void main() {\", // pink square\n      \"if ( renderType == 0 ) {\", \"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\", // restore\n      \"} else if ( renderType == 1 ) {\", \"gl_FragColor = texture2D( map, vUV );\", // flare\n      \"} else {\", \"vec4 texture = texture2D( map, vUV );\", \"texture.a *= opacity * vVisibility;\", \"gl_FragColor = texture;\", \"gl_FragColor.rgb *= color;\", \"}\", \"}\"].join(\"\\n\")\n    };\n    program = createProgram(shader);\n    attributes = {\n      vertex: gl.getAttribLocation(program, \"position\"),\n      uv: gl.getAttribLocation(program, \"uv\")\n    };\n    uniforms = {\n      renderType: gl.getUniformLocation(program, \"renderType\"),\n      map: gl.getUniformLocation(program, \"map\"),\n      occlusionMap: gl.getUniformLocation(program, \"occlusionMap\"),\n      opacity: gl.getUniformLocation(program, \"opacity\"),\n      color: gl.getUniformLocation(program, \"color\"),\n      scale: gl.getUniformLocation(program, \"scale\"),\n      rotation: gl.getUniformLocation(program, \"rotation\"),\n      screenPosition: gl.getUniformLocation(program, \"screenPosition\")\n    };\n  }\n  /*\n   * Render lens flares\n   * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n   *         reads these back and calculates occlusion.\n   */\n\n\n  this.render = function (flares, scene, camera, viewport) {\n    if (flares.length === 0) return;\n    var tempPosition = new Vector3();\n    var invAspect = viewport.w / viewport.z,\n        halfViewportWidth = viewport.z * 0.5,\n        halfViewportHeight = viewport.w * 0.5;\n    var size = 16 / viewport.w,\n        scale = new Vector2(size * invAspect, size);\n    var screenPosition = new Vector3(1, 1, 0),\n        screenPositionPixels = new Vector2(1, 1);\n    var validArea = new Box2();\n    validArea.min.set(viewport.x, viewport.y);\n    validArea.max.set(viewport.x + (viewport.z - 16), viewport.y + (viewport.w - 16));\n\n    if (program === undefined) {\n      init();\n    }\n\n    state.useProgram(program);\n    state.initAttributes();\n    state.enableAttribute(attributes.vertex);\n    state.enableAttribute(attributes.uv);\n    state.disableUnusedAttributes(); // loop through all lens flares to update their occlusion and positions\n    // setup gl and common used attribs/uniforms\n\n    gl.uniform1i(uniforms.occlusionMap, 0);\n    gl.uniform1i(uniforms.map, 1);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.vertexAttribPointer(attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0);\n    gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    state.disable(gl.CULL_FACE);\n    state.buffers.depth.setMask(false);\n\n    for (var i = 0, l = flares.length; i < l; i++) {\n      size = 16 / viewport.w;\n      scale.set(size * invAspect, size); // calc object screen position\n\n      var flare = flares[i];\n      tempPosition.set(flare.matrixWorld.elements[12], flare.matrixWorld.elements[13], flare.matrixWorld.elements[14]);\n      tempPosition.applyMatrix4(camera.matrixWorldInverse);\n      tempPosition.applyMatrix4(camera.projectionMatrix); // setup arrays for gl programs\n\n      screenPosition.copy(tempPosition); // horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n      screenPositionPixels.x = viewport.x + screenPosition.x * halfViewportWidth + halfViewportWidth - 8;\n      screenPositionPixels.y = viewport.y + screenPosition.y * halfViewportHeight + halfViewportHeight - 8; // screen cull\n\n      if (validArea.containsPoint(screenPositionPixels) === true) {\n        // save current RGB to temp texture\n        state.activeTexture(gl.TEXTURE0);\n        state.bindTexture(gl.TEXTURE_2D, null);\n        state.activeTexture(gl.TEXTURE1);\n        state.bindTexture(gl.TEXTURE_2D, tempTexture);\n        gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0); // render pink quad\n\n        gl.uniform1i(uniforms.renderType, 0);\n        gl.uniform2f(uniforms.scale, scale.x, scale.y);\n        gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n        state.disable(gl.BLEND);\n        state.enable(gl.DEPTH_TEST);\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); // copy result to occlusionMap\n\n        state.activeTexture(gl.TEXTURE0);\n        state.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n        gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0); // restore graphics\n\n        gl.uniform1i(uniforms.renderType, 1);\n        state.disable(gl.DEPTH_TEST);\n        state.activeTexture(gl.TEXTURE1);\n        state.bindTexture(gl.TEXTURE_2D, tempTexture);\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); // update object positions\n\n        flare.positionScreen.copy(screenPosition);\n\n        if (flare.customUpdateCallback) {\n          flare.customUpdateCallback(flare);\n        } else {\n          flare.updateLensFlares();\n        } // render flares\n\n\n        gl.uniform1i(uniforms.renderType, 2);\n        state.enable(gl.BLEND);\n\n        for (var j = 0, jl = flare.lensFlares.length; j < jl; j++) {\n          var sprite = flare.lensFlares[j];\n\n          if (sprite.opacity > 0.001 && sprite.scale > 0.001) {\n            screenPosition.x = sprite.x;\n            screenPosition.y = sprite.y;\n            screenPosition.z = sprite.z;\n            size = sprite.size * sprite.scale / viewport.w;\n            scale.x = size * invAspect;\n            scale.y = size;\n            gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n            gl.uniform2f(uniforms.scale, scale.x, scale.y);\n            gl.uniform1f(uniforms.rotation, sprite.rotation);\n            gl.uniform1f(uniforms.opacity, sprite.opacity);\n            gl.uniform3f(uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b);\n            state.setBlending(sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst);\n            textures.setTexture2D(sprite.texture, 1);\n            gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n          }\n        }\n      }\n    } // restore gl\n\n\n    state.enable(gl.CULL_FACE);\n    state.enable(gl.DEPTH_TEST);\n    state.buffers.depth.setMask(true);\n    state.reset();\n  };\n\n  function createProgram(shader) {\n    var program = gl.createProgram();\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    var prefix = \"precision \" + capabilities.precision + \" float;\\n\";\n    gl.shaderSource(fragmentShader, prefix + shader.fragmentShader);\n    gl.shaderSource(vertexShader, prefix + shader.vertexShader);\n    gl.compileShader(fragmentShader);\n    gl.compileShader(vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n    return program;\n  }\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CanvasTexture(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  Texture.call(this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.needsUpdate = true;\n}\n\nCanvasTexture.prototype = Object.create(Texture.prototype);\nCanvasTexture.prototype.constructor = CanvasTexture;\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction WebGLSpriteRenderer(renderer, gl, state, textures, capabilities) {\n  var vertexBuffer, elementBuffer;\n  var program, attributes, uniforms;\n  var texture; // decompose matrixWorld\n\n  var spritePosition = new Vector3();\n  var spriteRotation = new Quaternion();\n  var spriteScale = new Vector3();\n\n  function init() {\n    var vertices = new Float32Array([-0.5, -0.5, 0, 0, 0.5, -0.5, 1, 0, 0.5, 0.5, 1, 1, -0.5, 0.5, 0, 1]);\n    var faces = new Uint16Array([0, 1, 2, 0, 2, 3]);\n    vertexBuffer = gl.createBuffer();\n    elementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW);\n    program = createProgram();\n    attributes = {\n      position: gl.getAttribLocation(program, 'position'),\n      uv: gl.getAttribLocation(program, 'uv')\n    };\n    uniforms = {\n      uvOffset: gl.getUniformLocation(program, 'uvOffset'),\n      uvScale: gl.getUniformLocation(program, 'uvScale'),\n      rotation: gl.getUniformLocation(program, 'rotation'),\n      scale: gl.getUniformLocation(program, 'scale'),\n      color: gl.getUniformLocation(program, 'color'),\n      map: gl.getUniformLocation(program, 'map'),\n      opacity: gl.getUniformLocation(program, 'opacity'),\n      modelViewMatrix: gl.getUniformLocation(program, 'modelViewMatrix'),\n      projectionMatrix: gl.getUniformLocation(program, 'projectionMatrix'),\n      fogType: gl.getUniformLocation(program, 'fogType'),\n      fogDensity: gl.getUniformLocation(program, 'fogDensity'),\n      fogNear: gl.getUniformLocation(program, 'fogNear'),\n      fogFar: gl.getUniformLocation(program, 'fogFar'),\n      fogColor: gl.getUniformLocation(program, 'fogColor'),\n      alphaTest: gl.getUniformLocation(program, 'alphaTest')\n    };\n    var canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n    canvas.width = 8;\n    canvas.height = 8;\n    var context = canvas.getContext('2d');\n    context.fillStyle = 'white';\n    context.fillRect(0, 0, 8, 8);\n    texture = new CanvasTexture(canvas);\n  }\n\n  this.render = function (sprites, scene, camera) {\n    if (sprites.length === 0) return; // setup gl\n\n    if (program === undefined) {\n      init();\n    }\n\n    state.useProgram(program);\n    state.initAttributes();\n    state.enableAttribute(attributes.position);\n    state.enableAttribute(attributes.uv);\n    state.disableUnusedAttributes();\n    state.disable(gl.CULL_FACE);\n    state.enable(gl.BLEND);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.vertexAttribPointer(attributes.position, 2, gl.FLOAT, false, 2 * 8, 0);\n    gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.uniformMatrix4fv(uniforms.projectionMatrix, false, camera.projectionMatrix.elements);\n    state.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(uniforms.map, 0);\n    var oldFogType = 0;\n    var sceneFogType = 0;\n    var fog = scene.fog;\n\n    if (fog) {\n      gl.uniform3f(uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b);\n\n      if (fog.isFog) {\n        gl.uniform1f(uniforms.fogNear, fog.near);\n        gl.uniform1f(uniforms.fogFar, fog.far);\n        gl.uniform1i(uniforms.fogType, 1);\n        oldFogType = 1;\n        sceneFogType = 1;\n      } else if (fog.isFogExp2) {\n        gl.uniform1f(uniforms.fogDensity, fog.density);\n        gl.uniform1i(uniforms.fogType, 2);\n        oldFogType = 2;\n        sceneFogType = 2;\n      }\n    } else {\n      gl.uniform1i(uniforms.fogType, 0);\n      oldFogType = 0;\n      sceneFogType = 0;\n    } // update positions and sort\n\n\n    for (var i = 0, l = sprites.length; i < l; i++) {\n      var sprite = sprites[i];\n      sprite.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, sprite.matrixWorld);\n      sprite.z = -sprite.modelViewMatrix.elements[14];\n    }\n\n    sprites.sort(painterSortStable); // render all sprites\n\n    var scale = [];\n\n    for (var i = 0, l = sprites.length; i < l; i++) {\n      var sprite = sprites[i];\n      var material = sprite.material;\n      if (material.visible === false) continue;\n      sprite.onBeforeRender(renderer, scene, camera, undefined, material, undefined);\n      gl.uniform1f(uniforms.alphaTest, material.alphaTest);\n      gl.uniformMatrix4fv(uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements);\n      sprite.matrixWorld.decompose(spritePosition, spriteRotation, spriteScale);\n      scale[0] = spriteScale.x;\n      scale[1] = spriteScale.y;\n      var fogType = 0;\n\n      if (scene.fog && material.fog) {\n        fogType = sceneFogType;\n      }\n\n      if (oldFogType !== fogType) {\n        gl.uniform1i(uniforms.fogType, fogType);\n        oldFogType = fogType;\n      }\n\n      if (material.map !== null) {\n        gl.uniform2f(uniforms.uvOffset, material.map.offset.x, material.map.offset.y);\n        gl.uniform2f(uniforms.uvScale, material.map.repeat.x, material.map.repeat.y);\n      } else {\n        gl.uniform2f(uniforms.uvOffset, 0, 0);\n        gl.uniform2f(uniforms.uvScale, 1, 1);\n      }\n\n      gl.uniform1f(uniforms.opacity, material.opacity);\n      gl.uniform3f(uniforms.color, material.color.r, material.color.g, material.color.b);\n      gl.uniform1f(uniforms.rotation, material.rotation);\n      gl.uniform2fv(uniforms.scale, scale);\n      state.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n      state.buffers.depth.setTest(material.depthTest);\n      state.buffers.depth.setMask(material.depthWrite);\n      textures.setTexture2D(material.map || texture, 0);\n      gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n      sprite.onAfterRender(renderer, scene, camera, undefined, material, undefined);\n    } // restore gl\n\n\n    state.enable(gl.CULL_FACE);\n    state.reset();\n  };\n\n  function createProgram() {\n    var program = gl.createProgram();\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(vertexShader, ['precision ' + capabilities.precision + ' float;', '#define SHADER_NAME ' + 'SpriteMaterial', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform float rotation;', 'uniform vec2 scale;', 'uniform vec2 uvOffset;', 'uniform vec2 uvScale;', 'attribute vec2 position;', 'attribute vec2 uv;', 'varying vec2 vUV;', 'void main() {', 'vUV = uvOffset + uv * uvScale;', 'vec2 alignedPosition = position * scale;', 'vec2 rotatedPosition;', 'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;', 'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;', 'vec4 finalPosition;', 'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );', 'finalPosition.xy += rotatedPosition;', 'finalPosition = projectionMatrix * finalPosition;', 'gl_Position = finalPosition;', '}'].join('\\n'));\n    gl.shaderSource(fragmentShader, ['precision ' + capabilities.precision + ' float;', '#define SHADER_NAME ' + 'SpriteMaterial', 'uniform vec3 color;', 'uniform sampler2D map;', 'uniform float opacity;', 'uniform int fogType;', 'uniform vec3 fogColor;', 'uniform float fogDensity;', 'uniform float fogNear;', 'uniform float fogFar;', 'uniform float alphaTest;', 'varying vec2 vUV;', 'void main() {', 'vec4 texture = texture2D( map, vUV );', 'if ( texture.a < alphaTest ) discard;', 'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );', 'if ( fogType > 0 ) {', 'float depth = gl_FragCoord.z / gl_FragCoord.w;', 'float fogFactor = 0.0;', 'if ( fogType == 1 ) {', 'fogFactor = smoothstep( fogNear, fogFar, depth );', '} else {', 'const float LOG2 = 1.442695;', 'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );', 'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );', '}', 'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );', '}', '}'].join('\\n'));\n    gl.compileShader(vertexShader);\n    gl.compileShader(fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    return program;\n  }\n\n  function painterSortStable(a, b) {\n    if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    } else if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return b.id - a.id;\n    }\n  }\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nvar materialId = 0;\n\nfunction Material() {\n  Object.defineProperty(this, 'id', {\n    value: materialId++\n  });\n  this.uuid = _Math.generateUUID();\n  this.name = '';\n  this.type = 'Material';\n  this.fog = true;\n  this.lights = true;\n  this.blending = NormalBlending;\n  this.side = FrontSide;\n  this.flatShading = false;\n  this.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n  this.opacity = 1;\n  this.transparent = false;\n  this.blendSrc = SrcAlphaFactor;\n  this.blendDst = OneMinusSrcAlphaFactor;\n  this.blendEquation = AddEquation;\n  this.blendSrcAlpha = null;\n  this.blendDstAlpha = null;\n  this.blendEquationAlpha = null;\n  this.depthFunc = LessEqualDepth;\n  this.depthTest = true;\n  this.depthWrite = true;\n  this.clippingPlanes = null;\n  this.clipIntersection = false;\n  this.clipShadows = false;\n  this.colorWrite = true;\n  this.precision = null; // override the renderer's default precision for this material\n\n  this.polygonOffset = false;\n  this.polygonOffsetFactor = 0;\n  this.polygonOffsetUnits = 0;\n  this.dithering = false;\n  this.alphaTest = 0;\n  this.premultipliedAlpha = false;\n  this.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n  this.visible = true;\n  this.userData = {};\n  this.needsUpdate = true;\n}\n\nObject.assign(Material.prototype, EventDispatcher.prototype, {\n  isMaterial: true,\n  onBeforeCompile: function () {},\n  setValues: function (values) {\n    if (values === undefined) return;\n\n    for (var key in values) {\n      var newValue = values[key];\n\n      if (newValue === undefined) {\n        console.warn(\"THREE.Material: '\" + key + \"' parameter is undefined.\");\n        continue;\n      } // for backward compatability if shading is set in the constructor\n\n\n      if (key === 'shading') {\n        console.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n        this.flatShading = newValue === FlatShading ? true : false;\n        continue;\n      }\n\n      var currentValue = this[key];\n\n      if (currentValue === undefined) {\n        console.warn(\"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\");\n        continue;\n      }\n\n      if (currentValue && currentValue.isColor) {\n        currentValue.set(newValue);\n      } else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n        currentValue.copy(newValue);\n      } else if (key === 'overdraw') {\n        // ensure overdraw is backwards-compatible with legacy boolean type\n        this[key] = Number(newValue);\n      } else {\n        this[key] = newValue;\n      }\n    }\n  },\n  toJSON: function (meta) {\n    var isRoot = meta === undefined;\n\n    if (isRoot) {\n      meta = {\n        textures: {},\n        images: {}\n      };\n    }\n\n    var data = {\n      metadata: {\n        version: 4.5,\n        type: 'Material',\n        generator: 'Material.toJSON'\n      }\n    }; // standard Material serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if (this.color && this.color.isColor) data.color = this.color.getHex();\n    if (this.roughness !== undefined) data.roughness = this.roughness;\n    if (this.metalness !== undefined) data.metalness = this.metalness;\n    if (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n    if (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n    if (this.shininess !== undefined) data.shininess = this.shininess;\n    if (this.clearCoat !== undefined) data.clearCoat = this.clearCoat;\n    if (this.clearCoatRoughness !== undefined) data.clearCoatRoughness = this.clearCoatRoughness;\n    if (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n    if (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n    if (this.lightMap && this.lightMap.isTexture) data.lightMap = this.lightMap.toJSON(meta).uuid;\n\n    if (this.bumpMap && this.bumpMap.isTexture) {\n      data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n      data.bumpScale = this.bumpScale;\n    }\n\n    if (this.normalMap && this.normalMap.isTexture) {\n      data.normalMap = this.normalMap.toJSON(meta).uuid;\n      data.normalScale = this.normalScale.toArray();\n    }\n\n    if (this.displacementMap && this.displacementMap.isTexture) {\n      data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n      data.displacementScale = this.displacementScale;\n      data.displacementBias = this.displacementBias;\n    }\n\n    if (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n    if (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n    if (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n    if (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\n    if (this.envMap && this.envMap.isTexture) {\n      data.envMap = this.envMap.toJSON(meta).uuid;\n      data.reflectivity = this.reflectivity; // Scale behind envMap\n    }\n\n    if (this.gradientMap && this.gradientMap.isTexture) {\n      data.gradientMap = this.gradientMap.toJSON(meta).uuid;\n    }\n\n    if (this.size !== undefined) data.size = this.size;\n    if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n    if (this.blending !== NormalBlending) data.blending = this.blending;\n    if (this.flatShading === true) data.flatShading = this.flatShading;\n    if (this.side !== FrontSide) data.side = this.side;\n    if (this.vertexColors !== NoColors) data.vertexColors = this.vertexColors;\n    if (this.opacity < 1) data.opacity = this.opacity;\n    if (this.transparent === true) data.transparent = this.transparent;\n    data.depthFunc = this.depthFunc;\n    data.depthTest = this.depthTest;\n    data.depthWrite = this.depthWrite;\n    if (this.dithering === true) data.dithering = true;\n    if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n    if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n    if (this.wireframe === true) data.wireframe = this.wireframe;\n    if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n    if (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n    if (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n    if (this.morphTargets === true) data.morphTargets = true;\n    if (this.skinning === true) data.skinning = true;\n    if (this.visible === false) data.visible = false;\n    if (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\n\n    function extractFromCache(cache) {\n      var values = [];\n\n      for (var key in cache) {\n        var data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n\n    if (isRoot) {\n      var textures = extractFromCache(meta.textures);\n      var images = extractFromCache(meta.images);\n      if (textures.length > 0) data.textures = textures;\n      if (images.length > 0) data.images = images;\n    }\n\n    return data;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.name = source.name;\n    this.fog = source.fog;\n    this.lights = source.lights;\n    this.blending = source.blending;\n    this.side = source.side;\n    this.flatShading = source.flatShading;\n    this.vertexColors = source.vertexColors;\n    this.opacity = source.opacity;\n    this.transparent = source.transparent;\n    this.blendSrc = source.blendSrc;\n    this.blendDst = source.blendDst;\n    this.blendEquation = source.blendEquation;\n    this.blendSrcAlpha = source.blendSrcAlpha;\n    this.blendDstAlpha = source.blendDstAlpha;\n    this.blendEquationAlpha = source.blendEquationAlpha;\n    this.depthFunc = source.depthFunc;\n    this.depthTest = source.depthTest;\n    this.depthWrite = source.depthWrite;\n    this.colorWrite = source.colorWrite;\n    this.precision = source.precision;\n    this.polygonOffset = source.polygonOffset;\n    this.polygonOffsetFactor = source.polygonOffsetFactor;\n    this.polygonOffsetUnits = source.polygonOffsetUnits;\n    this.dithering = source.dithering;\n    this.alphaTest = source.alphaTest;\n    this.premultipliedAlpha = source.premultipliedAlpha;\n    this.overdraw = source.overdraw;\n    this.visible = source.visible;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n    this.clipShadows = source.clipShadows;\n    this.clipIntersection = source.clipIntersection;\n    var srcPlanes = source.clippingPlanes,\n        dstPlanes = null;\n\n    if (srcPlanes !== null) {\n      var n = srcPlanes.length;\n      dstPlanes = new Array(n);\n\n      for (var i = 0; i !== n; ++i) dstPlanes[i] = srcPlanes[i].clone();\n    }\n\n    this.clippingPlanes = dstPlanes;\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial(parameters) {\n  Material.call(this);\n  this.type = 'ShaderMaterial';\n  this.defines = {};\n  this.uniforms = {};\n  this.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n  this.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n  this.linewidth = 1;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.fog = false; // set to use scene fog\n\n  this.lights = false; // set to use scene lights\n\n  this.clipping = false; // set to use user-defined clipping planes\n\n  this.skinning = false; // set to use skinning attribute streams\n\n  this.morphTargets = false; // set to use morph targets\n\n  this.morphNormals = false; // set to use morph normals\n\n  this.extensions = {\n    derivatives: false,\n    // set to use derivatives\n    fragDepth: false,\n    // set to use fragment depth values\n    drawBuffers: false,\n    // set to use draw buffers\n    shaderTextureLOD: false // set to use shader texture LOD\n\n  }; // When rendered geometry doesn't include these attributes but the material does,\n  // use these default values in WebGL. This avoids errors when buffer data is missing.\n\n  this.defaultAttributeValues = {\n    'color': [1, 1, 1],\n    'uv': [0, 0],\n    'uv2': [0, 0]\n  };\n  this.index0AttributeName = undefined;\n\n  if (parameters !== undefined) {\n    if (parameters.attributes !== undefined) {\n      console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n    }\n\n    this.setValues(parameters);\n  }\n}\n\nShaderMaterial.prototype = Object.create(Material.prototype);\nShaderMaterial.prototype.constructor = ShaderMaterial;\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.fragmentShader = source.fragmentShader;\n  this.vertexShader = source.vertexShader;\n  this.uniforms = UniformsUtils.clone(source.uniforms);\n  this.defines = source.defines;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.lights = source.lights;\n  this.clipping = source.clipping;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  this.extensions = source.extensions;\n  return this;\n};\n\nShaderMaterial.prototype.toJSON = function (meta) {\n  var data = Material.prototype.toJSON.call(this, meta);\n  data.uniforms = this.uniforms;\n  data.vertexShader = this.vertexShader;\n  data.fragmentShader = this.fragmentShader;\n  return data;\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\n\nfunction MeshDepthMaterial(parameters) {\n  Material.call(this);\n  this.type = 'MeshDepthMaterial';\n  this.depthPacking = BasicDepthPacking;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.map = null;\n  this.alphaMap = null;\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.fog = false;\n  this.lights = false;\n  this.setValues(parameters);\n}\n\nMeshDepthMaterial.prototype = Object.create(Material.prototype);\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.depthPacking = source.depthPacking;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.map = source.map;\n  this.alphaMap = source.alphaMap;\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  return this;\n};\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\n\nfunction MeshDistanceMaterial(parameters) {\n  Material.call(this);\n  this.type = 'MeshDistanceMaterial';\n  this.referencePosition = new Vector3();\n  this.nearDistance = 1;\n  this.farDistance = 1000;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.map = null;\n  this.alphaMap = null;\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.fog = false;\n  this.lights = false;\n  this.setValues(parameters);\n}\n\nMeshDistanceMaterial.prototype = Object.create(Material.prototype);\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.referencePosition.copy(source.referencePosition);\n  this.nearDistance = source.nearDistance;\n  this.farDistance = source.farDistance;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.map = source.map;\n  this.alphaMap = source.alphaMap;\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  return this;\n};\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\n\nfunction Box3(min, max) {\n  this.min = min !== undefined ? min : new Vector3(+Infinity, +Infinity, +Infinity);\n  this.max = max !== undefined ? max : new Vector3(-Infinity, -Infinity, -Infinity);\n}\n\nObject.assign(Box3.prototype, {\n  isBox3: true,\n  set: function (min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  },\n  setFromArray: function (array) {\n    var minX = +Infinity;\n    var minY = +Infinity;\n    var minZ = +Infinity;\n    var maxX = -Infinity;\n    var maxY = -Infinity;\n    var maxZ = -Infinity;\n\n    for (var i = 0, l = array.length; i < l; i += 3) {\n      var x = array[i];\n      var y = array[i + 1];\n      var z = array[i + 2];\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (z < minZ) minZ = z;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      if (z > maxZ) maxZ = z;\n    }\n\n    this.min.set(minX, minY, minZ);\n    this.max.set(maxX, maxY, maxZ);\n    return this;\n  },\n  setFromBufferAttribute: function (attribute) {\n    var minX = +Infinity;\n    var minY = +Infinity;\n    var minZ = +Infinity;\n    var maxX = -Infinity;\n    var maxY = -Infinity;\n    var maxZ = -Infinity;\n\n    for (var i = 0, l = attribute.count; i < l; i++) {\n      var x = attribute.getX(i);\n      var y = attribute.getY(i);\n      var z = attribute.getZ(i);\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (z < minZ) minZ = z;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      if (z > maxZ) maxZ = z;\n    }\n\n    this.min.set(minX, minY, minZ);\n    this.max.set(maxX, maxY, maxZ);\n    return this;\n  },\n  setFromPoints: function (points) {\n    this.makeEmpty();\n\n    for (var i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  },\n  setFromCenterAndSize: function () {\n    var v1 = new Vector3();\n    return function setFromCenterAndSize(center, size) {\n      var halfSize = v1.copy(size).multiplyScalar(0.5);\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    };\n  }(),\n  setFromObject: function (object) {\n    this.makeEmpty();\n    return this.expandByObject(object);\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  },\n  makeEmpty: function () {\n    this.min.x = this.min.y = this.min.z = +Infinity;\n    this.max.x = this.max.y = this.max.z = -Infinity;\n    return this;\n  },\n  isEmpty: function () {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n  },\n  getCenter: function (optionalTarget) {\n    var result = optionalTarget || new Vector3();\n    return this.isEmpty() ? result.set(0, 0, 0) : result.addVectors(this.min, this.max).multiplyScalar(0.5);\n  },\n  getSize: function (optionalTarget) {\n    var result = optionalTarget || new Vector3();\n    return this.isEmpty() ? result.set(0, 0, 0) : result.subVectors(this.max, this.min);\n  },\n  expandByPoint: function (point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  },\n  expandByVector: function (vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  },\n  expandByScalar: function (scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  },\n  expandByObject: function () {\n    // Computes the world-axis-aligned bounding box of an object (including its children),\n    // accounting for both the object's, and children's, world transforms\n    var v1 = new Vector3();\n    return function expandByObject(object) {\n      var scope = this;\n      object.updateMatrixWorld(true);\n      object.traverse(function (node) {\n        var i, l;\n        var geometry = node.geometry;\n\n        if (geometry !== undefined) {\n          if (geometry.isGeometry) {\n            var vertices = geometry.vertices;\n\n            for (i = 0, l = vertices.length; i < l; i++) {\n              v1.copy(vertices[i]);\n              v1.applyMatrix4(node.matrixWorld);\n              scope.expandByPoint(v1);\n            }\n          } else if (geometry.isBufferGeometry) {\n            var attribute = geometry.attributes.position;\n\n            if (attribute !== undefined) {\n              for (i = 0, l = attribute.count; i < l; i++) {\n                v1.fromBufferAttribute(attribute, i).applyMatrix4(node.matrixWorld);\n                scope.expandByPoint(v1);\n              }\n            }\n          }\n        }\n      });\n      return this;\n    };\n  }(),\n  containsPoint: function (point) {\n    return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\n  },\n  containsBox: function (box) {\n    return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n  },\n  getParameter: function (point, optionalTarget) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    var result = optionalTarget || new Vector3();\n    return result.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n  },\n  intersectsBox: function (box) {\n    // using 6 splitting planes to rule out intersections.\n    return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n  },\n  intersectsSphere: function () {\n    var closestPoint = new Vector3();\n    return function intersectsSphere(sphere) {\n      // Find the point on the AABB closest to the sphere center.\n      this.clampPoint(sphere.center, closestPoint); // If that point is inside the sphere, the AABB and sphere intersect.\n\n      return closestPoint.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n    };\n  }(),\n  intersectsPlane: function (plane) {\n    // We compute the minimum and maximum dot product values. If those values\n    // are on the same side (back or front) of the plane, then there is no intersection.\n    var min, max;\n\n    if (plane.normal.x > 0) {\n      min = plane.normal.x * this.min.x;\n      max = plane.normal.x * this.max.x;\n    } else {\n      min = plane.normal.x * this.max.x;\n      max = plane.normal.x * this.min.x;\n    }\n\n    if (plane.normal.y > 0) {\n      min += plane.normal.y * this.min.y;\n      max += plane.normal.y * this.max.y;\n    } else {\n      min += plane.normal.y * this.max.y;\n      max += plane.normal.y * this.min.y;\n    }\n\n    if (plane.normal.z > 0) {\n      min += plane.normal.z * this.min.z;\n      max += plane.normal.z * this.max.z;\n    } else {\n      min += plane.normal.z * this.max.z;\n      max += plane.normal.z * this.min.z;\n    }\n\n    return min <= plane.constant && max >= plane.constant;\n  },\n  clampPoint: function (point, optionalTarget) {\n    var result = optionalTarget || new Vector3();\n    return result.copy(point).clamp(this.min, this.max);\n  },\n  distanceToPoint: function () {\n    var v1 = new Vector3();\n    return function distanceToPoint(point) {\n      var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n      return clampedPoint.sub(point).length();\n    };\n  }(),\n  getBoundingSphere: function () {\n    var v1 = new Vector3();\n    return function getBoundingSphere(optionalTarget) {\n      var result = optionalTarget || new Sphere();\n      this.getCenter(result.center);\n      result.radius = this.getSize(v1).length() * 0.5;\n      return result;\n    };\n  }(),\n  intersect: function (box) {\n    this.min.max(box.min);\n    this.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n    if (this.isEmpty()) this.makeEmpty();\n    return this;\n  },\n  union: function (box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  },\n  applyMatrix4: function () {\n    var points = [new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3()];\n    return function applyMatrix4(matrix) {\n      // transform of empty box is an empty box.\n      if (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n      points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n      points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n      points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n      points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n      points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n      points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n      points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n      points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n      this.setFromPoints(points);\n      return this;\n    };\n  }(),\n  translate: function (offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  },\n  equals: function (box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n});\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere(center, radius) {\n  this.center = center !== undefined ? center : new Vector3();\n  this.radius = radius !== undefined ? radius : 0;\n}\n\nObject.assign(Sphere.prototype, {\n  set: function (center, radius) {\n    this.center.copy(center);\n    this.radius = radius;\n    return this;\n  },\n  setFromPoints: function () {\n    var box = new Box3();\n    return function setFromPoints(points, optionalCenter) {\n      var center = this.center;\n\n      if (optionalCenter !== undefined) {\n        center.copy(optionalCenter);\n      } else {\n        box.setFromPoints(points).getCenter(center);\n      }\n\n      var maxRadiusSq = 0;\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n      }\n\n      this.radius = Math.sqrt(maxRadiusSq);\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (sphere) {\n    this.center.copy(sphere.center);\n    this.radius = sphere.radius;\n    return this;\n  },\n  empty: function () {\n    return this.radius <= 0;\n  },\n  containsPoint: function (point) {\n    return point.distanceToSquared(this.center) <= this.radius * this.radius;\n  },\n  distanceToPoint: function (point) {\n    return point.distanceTo(this.center) - this.radius;\n  },\n  intersectsSphere: function (sphere) {\n    var radiusSum = this.radius + sphere.radius;\n    return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n  },\n  intersectsBox: function (box) {\n    return box.intersectsSphere(this);\n  },\n  intersectsPlane: function (plane) {\n    return Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\n  },\n  clampPoint: function (point, optionalTarget) {\n    var deltaLengthSq = this.center.distanceToSquared(point);\n    var result = optionalTarget || new Vector3();\n    result.copy(point);\n\n    if (deltaLengthSq > this.radius * this.radius) {\n      result.sub(this.center).normalize();\n      result.multiplyScalar(this.radius).add(this.center);\n    }\n\n    return result;\n  },\n  getBoundingBox: function (optionalTarget) {\n    var box = optionalTarget || new Box3();\n    box.set(this.center, this.center);\n    box.expandByScalar(this.radius);\n    return box;\n  },\n  applyMatrix4: function (matrix) {\n    this.center.applyMatrix4(matrix);\n    this.radius = this.radius * matrix.getMaxScaleOnAxis();\n    return this;\n  },\n  translate: function (offset) {\n    this.center.add(offset);\n    return this;\n  },\n  equals: function (sphere) {\n    return sphere.center.equals(this.center) && sphere.radius === this.radius;\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n  this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n  if (arguments.length > 0) {\n    console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n  }\n}\n\nObject.assign(Matrix3.prototype, {\n  isMatrix3: true,\n  set: function (n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n    var te = this.elements;\n    te[0] = n11;\n    te[1] = n21;\n    te[2] = n31;\n    te[3] = n12;\n    te[4] = n22;\n    te[5] = n32;\n    te[6] = n13;\n    te[7] = n23;\n    te[8] = n33;\n    return this;\n  },\n  identity: function () {\n    this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().fromArray(this.elements);\n  },\n  copy: function (m) {\n    var te = this.elements;\n    var me = m.elements;\n    te[0] = me[0];\n    te[1] = me[1];\n    te[2] = me[2];\n    te[3] = me[3];\n    te[4] = me[4];\n    te[5] = me[5];\n    te[6] = me[6];\n    te[7] = me[7];\n    te[8] = me[8];\n    return this;\n  },\n  setFromMatrix4: function (m) {\n    var me = m.elements;\n    this.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n    return this;\n  },\n  applyToBufferAttribute: function () {\n    var v1 = new Vector3();\n    return function applyToBufferAttribute(attribute) {\n      for (var i = 0, l = attribute.count; i < l; i++) {\n        v1.x = attribute.getX(i);\n        v1.y = attribute.getY(i);\n        v1.z = attribute.getZ(i);\n        v1.applyMatrix3(this);\n        attribute.setXYZ(i, v1.x, v1.y, v1.z);\n      }\n\n      return attribute;\n    };\n  }(),\n  multiply: function (m) {\n    return this.multiplyMatrices(this, m);\n  },\n  premultiply: function (m) {\n    return this.multiplyMatrices(m, this);\n  },\n  multiplyMatrices: function (a, b) {\n    var ae = a.elements;\n    var be = b.elements;\n    var te = this.elements;\n    var a11 = ae[0],\n        a12 = ae[3],\n        a13 = ae[6];\n    var a21 = ae[1],\n        a22 = ae[4],\n        a23 = ae[7];\n    var a31 = ae[2],\n        a32 = ae[5],\n        a33 = ae[8];\n    var b11 = be[0],\n        b12 = be[3],\n        b13 = be[6];\n    var b21 = be[1],\n        b22 = be[4],\n        b23 = be[7];\n    var b31 = be[2],\n        b32 = be[5],\n        b33 = be[8];\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31;\n    te[3] = a11 * b12 + a12 * b22 + a13 * b32;\n    te[6] = a11 * b13 + a12 * b23 + a13 * b33;\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31;\n    te[4] = a21 * b12 + a22 * b22 + a23 * b32;\n    te[7] = a21 * b13 + a22 * b23 + a23 * b33;\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31;\n    te[5] = a31 * b12 + a32 * b22 + a33 * b32;\n    te[8] = a31 * b13 + a32 * b23 + a33 * b33;\n    return this;\n  },\n  multiplyScalar: function (s) {\n    var te = this.elements;\n    te[0] *= s;\n    te[3] *= s;\n    te[6] *= s;\n    te[1] *= s;\n    te[4] *= s;\n    te[7] *= s;\n    te[2] *= s;\n    te[5] *= s;\n    te[8] *= s;\n    return this;\n  },\n  determinant: function () {\n    var te = this.elements;\n    var a = te[0],\n        b = te[1],\n        c = te[2],\n        d = te[3],\n        e = te[4],\n        f = te[5],\n        g = te[6],\n        h = te[7],\n        i = te[8];\n    return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n  },\n  getInverse: function (matrix, throwOnDegenerate) {\n    if (matrix && matrix.isMatrix4) {\n      console.error(\"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\");\n    }\n\n    var me = matrix.elements,\n        te = this.elements,\n        n11 = me[0],\n        n21 = me[1],\n        n31 = me[2],\n        n12 = me[3],\n        n22 = me[4],\n        n32 = me[5],\n        n13 = me[6],\n        n23 = me[7],\n        n33 = me[8],\n        t11 = n33 * n22 - n32 * n23,\n        t12 = n32 * n13 - n33 * n12,\n        t13 = n23 * n12 - n22 * n13,\n        det = n11 * t11 + n21 * t12 + n31 * t13;\n\n    if (det === 0) {\n      var msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n      if (throwOnDegenerate === true) {\n        throw new Error(msg);\n      } else {\n        console.warn(msg);\n      }\n\n      return this.identity();\n    }\n\n    var detInv = 1 / det;\n    te[0] = t11 * detInv;\n    te[1] = (n31 * n23 - n33 * n21) * detInv;\n    te[2] = (n32 * n21 - n31 * n22) * detInv;\n    te[3] = t12 * detInv;\n    te[4] = (n33 * n11 - n31 * n13) * detInv;\n    te[5] = (n31 * n12 - n32 * n11) * detInv;\n    te[6] = t13 * detInv;\n    te[7] = (n21 * n13 - n23 * n11) * detInv;\n    te[8] = (n22 * n11 - n21 * n12) * detInv;\n    return this;\n  },\n  transpose: function () {\n    var tmp,\n        m = this.elements;\n    tmp = m[1];\n    m[1] = m[3];\n    m[3] = tmp;\n    tmp = m[2];\n    m[2] = m[6];\n    m[6] = tmp;\n    tmp = m[5];\n    m[5] = m[7];\n    m[7] = tmp;\n    return this;\n  },\n  getNormalMatrix: function (matrix4) {\n    return this.setFromMatrix4(matrix4).getInverse(this).transpose();\n  },\n  transposeIntoArray: function (r) {\n    var m = this.elements;\n    r[0] = m[0];\n    r[1] = m[3];\n    r[2] = m[6];\n    r[3] = m[1];\n    r[4] = m[4];\n    r[5] = m[7];\n    r[6] = m[2];\n    r[7] = m[5];\n    r[8] = m[8];\n    return this;\n  },\n  equals: function (matrix) {\n    var te = this.elements;\n    var me = matrix.elements;\n\n    for (var i = 0; i < 9; i++) {\n      if (te[i] !== me[i]) return false;\n    }\n\n    return true;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n\n    for (var i = 0; i < 9; i++) {\n      this.elements[i] = array[i + offset];\n    }\n\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    var te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    return array;\n  }\n});\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane(normal, constant) {\n  // normal is assumed to be normalized\n  this.normal = normal !== undefined ? normal : new Vector3(1, 0, 0);\n  this.constant = constant !== undefined ? constant : 0;\n}\n\nObject.assign(Plane.prototype, {\n  set: function (normal, constant) {\n    this.normal.copy(normal);\n    this.constant = constant;\n    return this;\n  },\n  setComponents: function (x, y, z, w) {\n    this.normal.set(x, y, z);\n    this.constant = w;\n    return this;\n  },\n  setFromNormalAndCoplanarPoint: function (normal, point) {\n    this.normal.copy(normal);\n    this.constant = -point.dot(this.normal);\n    return this;\n  },\n  setFromCoplanarPoints: function () {\n    var v1 = new Vector3();\n    var v2 = new Vector3();\n    return function setFromCoplanarPoints(a, b, c) {\n      var normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n      this.setFromNormalAndCoplanarPoint(normal, a);\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (plane) {\n    this.normal.copy(plane.normal);\n    this.constant = plane.constant;\n    return this;\n  },\n  normalize: function () {\n    // Note: will lead to a divide by zero if the plane is invalid.\n    var inverseNormalLength = 1.0 / this.normal.length();\n    this.normal.multiplyScalar(inverseNormalLength);\n    this.constant *= inverseNormalLength;\n    return this;\n  },\n  negate: function () {\n    this.constant *= -1;\n    this.normal.negate();\n    return this;\n  },\n  distanceToPoint: function (point) {\n    return this.normal.dot(point) + this.constant;\n  },\n  distanceToSphere: function (sphere) {\n    return this.distanceToPoint(sphere.center) - sphere.radius;\n  },\n  projectPoint: function (point, optionalTarget) {\n    var result = optionalTarget || new Vector3();\n    return result.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);\n  },\n  intersectLine: function () {\n    var v1 = new Vector3();\n    return function intersectLine(line, optionalTarget) {\n      var result = optionalTarget || new Vector3();\n      var direction = line.delta(v1);\n      var denominator = this.normal.dot(direction);\n\n      if (denominator === 0) {\n        // line is coplanar, return origin\n        if (this.distanceToPoint(line.start) === 0) {\n          return result.copy(line.start);\n        } // Unsure if this is the correct method to handle this case.\n\n\n        return undefined;\n      }\n\n      var t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n      if (t < 0 || t > 1) {\n        return undefined;\n      }\n\n      return result.copy(direction).multiplyScalar(t).add(line.start);\n    };\n  }(),\n  intersectsLine: function (line) {\n    // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n    var startSign = this.distanceToPoint(line.start);\n    var endSign = this.distanceToPoint(line.end);\n    return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n  },\n  intersectsBox: function (box) {\n    return box.intersectsPlane(this);\n  },\n  intersectsSphere: function (sphere) {\n    return sphere.intersectsPlane(this);\n  },\n  coplanarPoint: function (optionalTarget) {\n    var result = optionalTarget || new Vector3();\n    return result.copy(this.normal).multiplyScalar(-this.constant);\n  },\n  applyMatrix4: function () {\n    var v1 = new Vector3();\n    var m1 = new Matrix3();\n    return function applyMatrix4(matrix, optionalNormalMatrix) {\n      var normalMatrix = optionalNormalMatrix || m1.getNormalMatrix(matrix);\n      var referencePoint = this.coplanarPoint(v1).applyMatrix4(matrix);\n      var normal = this.normal.applyMatrix3(normalMatrix).normalize();\n      this.constant = -referencePoint.dot(normal);\n      return this;\n    };\n  }(),\n  translate: function (offset) {\n    this.constant -= offset.dot(this.normal);\n    return this;\n  },\n  equals: function (plane) {\n    return plane.normal.equals(this.normal) && plane.constant === this.constant;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum(p0, p1, p2, p3, p4, p5) {\n  this.planes = [p0 !== undefined ? p0 : new Plane(), p1 !== undefined ? p1 : new Plane(), p2 !== undefined ? p2 : new Plane(), p3 !== undefined ? p3 : new Plane(), p4 !== undefined ? p4 : new Plane(), p5 !== undefined ? p5 : new Plane()];\n}\n\nObject.assign(Frustum.prototype, {\n  set: function (p0, p1, p2, p3, p4, p5) {\n    var planes = this.planes;\n    planes[0].copy(p0);\n    planes[1].copy(p1);\n    planes[2].copy(p2);\n    planes[3].copy(p3);\n    planes[4].copy(p4);\n    planes[5].copy(p5);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (frustum) {\n    var planes = this.planes;\n\n    for (var i = 0; i < 6; i++) {\n      planes[i].copy(frustum.planes[i]);\n    }\n\n    return this;\n  },\n  setFromMatrix: function (m) {\n    var planes = this.planes;\n    var me = m.elements;\n    var me0 = me[0],\n        me1 = me[1],\n        me2 = me[2],\n        me3 = me[3];\n    var me4 = me[4],\n        me5 = me[5],\n        me6 = me[6],\n        me7 = me[7];\n    var me8 = me[8],\n        me9 = me[9],\n        me10 = me[10],\n        me11 = me[11];\n    var me12 = me[12],\n        me13 = me[13],\n        me14 = me[14],\n        me15 = me[15];\n    planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n    planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n    planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n    planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n    planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n    planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n    return this;\n  },\n  intersectsObject: function () {\n    var sphere = new Sphere();\n    return function intersectsObject(object) {\n      var geometry = object.geometry;\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n      return this.intersectsSphere(sphere);\n    };\n  }(),\n  intersectsSprite: function () {\n    var sphere = new Sphere();\n    return function intersectsSprite(sprite) {\n      sphere.center.set(0, 0, 0);\n      sphere.radius = 0.7071067811865476;\n      sphere.applyMatrix4(sprite.matrixWorld);\n      return this.intersectsSphere(sphere);\n    };\n  }(),\n  intersectsSphere: function (sphere) {\n    var planes = this.planes;\n    var center = sphere.center;\n    var negRadius = -sphere.radius;\n\n    for (var i = 0; i < 6; i++) {\n      var distance = planes[i].distanceToPoint(center);\n\n      if (distance < negRadius) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n  intersectsBox: function () {\n    var p1 = new Vector3(),\n        p2 = new Vector3();\n    return function intersectsBox(box) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        var plane = planes[i];\n        p1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n        p2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n        p1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n        p2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n        p1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n        p2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n        var d1 = plane.distanceToPoint(p1);\n        var d2 = plane.distanceToPoint(p2); // if both outside plane, no intersection\n\n        if (d1 < 0 && d2 < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n  }(),\n  containsPoint: function (point) {\n    var planes = this.planes;\n\n    for (var i = 0; i < 6; i++) {\n      if (planes[i].distanceToPoint(point) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap(_renderer, _objects, maxTextureSize) {\n  var _frustum = new Frustum(),\n      _projScreenMatrix = new Matrix4(),\n      _shadowMapSize = new Vector2(),\n      _maxShadowMapSize = new Vector2(maxTextureSize, maxTextureSize),\n      _lookTarget = new Vector3(),\n      _lightPositionWorld = new Vector3(),\n      _MorphingFlag = 1,\n      _SkinningFlag = 2,\n      _NumberOfMaterialVariants = (_MorphingFlag | _SkinningFlag) + 1,\n      _depthMaterials = new Array(_NumberOfMaterialVariants),\n      _distanceMaterials = new Array(_NumberOfMaterialVariants),\n      _materialCache = {};\n\n  var cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\n  var cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\n  var cube2DViewPorts = [new Vector4(), new Vector4(), new Vector4(), new Vector4(), new Vector4(), new Vector4()]; // init\n\n  for (var i = 0; i !== _NumberOfMaterialVariants; ++i) {\n    var useMorphing = (i & _MorphingFlag) !== 0;\n    var useSkinning = (i & _SkinningFlag) !== 0;\n    var depthMaterial = new MeshDepthMaterial({\n      depthPacking: RGBADepthPacking,\n      morphTargets: useMorphing,\n      skinning: useSkinning\n    });\n    _depthMaterials[i] = depthMaterial; //\n\n    var distanceMaterial = new MeshDistanceMaterial({\n      morphTargets: useMorphing,\n      skinning: useSkinning\n    });\n    _distanceMaterials[i] = distanceMaterial;\n  } //\n\n\n  var scope = this;\n  this.enabled = false;\n  this.autoUpdate = true;\n  this.needsUpdate = false;\n  this.type = PCFShadowMap;\n  this.renderReverseSided = true;\n  this.renderSingleSided = true;\n\n  this.render = function (lights, scene, camera) {\n    if (scope.enabled === false) return;\n    if (scope.autoUpdate === false && scope.needsUpdate === false) return;\n    if (lights.length === 0) return; // TODO Clean up (needed in case of contextlost)\n\n    var _gl = _renderer.context;\n    var _state = _renderer.state; // Set GL state for depth map.\n\n    _state.disable(_gl.BLEND);\n\n    _state.buffers.color.setClear(1, 1, 1, 1);\n\n    _state.buffers.depth.setTest(true);\n\n    _state.setScissorTest(false); // render depth map\n\n\n    var faceCount;\n\n    for (var i = 0, il = lights.length; i < il; i++) {\n      var light = lights[i];\n      var shadow = light.shadow;\n      var isPointLight = light && light.isPointLight;\n\n      if (shadow === undefined) {\n        console.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n        continue;\n      }\n\n      var shadowCamera = shadow.camera;\n\n      _shadowMapSize.copy(shadow.mapSize);\n\n      _shadowMapSize.min(_maxShadowMapSize);\n\n      if (isPointLight) {\n        var vpWidth = _shadowMapSize.x;\n        var vpHeight = _shadowMapSize.y; // These viewports map a cube-map onto a 2D texture with the\n        // following orientation:\n        //\n        //  xzXZ\n        //   y Y\n        //\n        // X - Positive x direction\n        // x - Negative x direction\n        // Y - Positive y direction\n        // y - Negative y direction\n        // Z - Positive z direction\n        // z - Negative z direction\n        // positive X\n\n        cube2DViewPorts[0].set(vpWidth * 2, vpHeight, vpWidth, vpHeight); // negative X\n\n        cube2DViewPorts[1].set(0, vpHeight, vpWidth, vpHeight); // positive Z\n\n        cube2DViewPorts[2].set(vpWidth * 3, vpHeight, vpWidth, vpHeight); // negative Z\n\n        cube2DViewPorts[3].set(vpWidth, vpHeight, vpWidth, vpHeight); // positive Y\n\n        cube2DViewPorts[4].set(vpWidth * 3, 0, vpWidth, vpHeight); // negative Y\n\n        cube2DViewPorts[5].set(vpWidth, 0, vpWidth, vpHeight);\n        _shadowMapSize.x *= 4.0;\n        _shadowMapSize.y *= 2.0;\n      }\n\n      if (shadow.map === null) {\n        var pars = {\n          minFilter: NearestFilter,\n          magFilter: NearestFilter,\n          format: RGBAFormat\n        };\n        shadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n        shadow.map.texture.name = light.name + \".shadowMap\";\n        shadowCamera.updateProjectionMatrix();\n      }\n\n      if (shadow.isSpotLightShadow) {\n        shadow.update(light);\n      }\n\n      var shadowMap = shadow.map;\n      var shadowMatrix = shadow.matrix;\n\n      _lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n      shadowCamera.position.copy(_lightPositionWorld);\n\n      if (isPointLight) {\n        faceCount = 6; // for point lights we set the shadow matrix to be a translation-only matrix\n        // equal to inverse of the light's position\n\n        shadowMatrix.makeTranslation(-_lightPositionWorld.x, -_lightPositionWorld.y, -_lightPositionWorld.z);\n      } else {\n        faceCount = 1;\n\n        _lookTarget.setFromMatrixPosition(light.target.matrixWorld);\n\n        shadowCamera.lookAt(_lookTarget);\n        shadowCamera.updateMatrixWorld(); // compute shadow matrix\n\n        shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n        shadowMatrix.multiply(shadowCamera.projectionMatrix);\n        shadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n      }\n\n      _renderer.setRenderTarget(shadowMap);\n\n      _renderer.clear(); // render shadow map for each cube face (if omni-directional) or\n      // run a single pass if not\n\n\n      for (var face = 0; face < faceCount; face++) {\n        if (isPointLight) {\n          _lookTarget.copy(shadowCamera.position);\n\n          _lookTarget.add(cubeDirections[face]);\n\n          shadowCamera.up.copy(cubeUps[face]);\n          shadowCamera.lookAt(_lookTarget);\n          shadowCamera.updateMatrixWorld();\n          var vpDimensions = cube2DViewPorts[face];\n\n          _state.viewport(vpDimensions);\n        } // update camera matrices and frustum\n\n\n        _projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n        _frustum.setFromMatrix(_projScreenMatrix); // set object matrices & frustum culling\n\n\n        renderObject(scene, camera, shadowCamera, isPointLight);\n      }\n    }\n\n    scope.needsUpdate = false;\n  };\n\n  function getDepthMaterial(object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar) {\n    var geometry = object.geometry;\n    var result = null;\n    var materialVariants = _depthMaterials;\n    var customMaterial = object.customDepthMaterial;\n\n    if (isPointLight) {\n      materialVariants = _distanceMaterials;\n      customMaterial = object.customDistanceMaterial;\n    }\n\n    if (!customMaterial) {\n      var useMorphing = false;\n\n      if (material.morphTargets) {\n        if (geometry && geometry.isBufferGeometry) {\n          useMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n        } else if (geometry && geometry.isGeometry) {\n          useMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n        }\n      }\n\n      if (object.isSkinnedMesh && material.skinning === false) {\n        console.warn('THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object);\n      }\n\n      var useSkinning = object.isSkinnedMesh && material.skinning;\n      var variantIndex = 0;\n      if (useMorphing) variantIndex |= _MorphingFlag;\n      if (useSkinning) variantIndex |= _SkinningFlag;\n      result = materialVariants[variantIndex];\n    } else {\n      result = customMaterial;\n    }\n\n    if (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0) {\n      // in this case we need a unique material instance reflecting the\n      // appropriate state\n      var keyA = result.uuid,\n          keyB = material.uuid;\n      var materialsForVariant = _materialCache[keyA];\n\n      if (materialsForVariant === undefined) {\n        materialsForVariant = {};\n        _materialCache[keyA] = materialsForVariant;\n      }\n\n      var cachedMaterial = materialsForVariant[keyB];\n\n      if (cachedMaterial === undefined) {\n        cachedMaterial = result.clone();\n        materialsForVariant[keyB] = cachedMaterial;\n      }\n\n      result = cachedMaterial;\n    }\n\n    result.visible = material.visible;\n    result.wireframe = material.wireframe;\n    var side = material.side;\n\n    if (scope.renderSingleSided && side == DoubleSide) {\n      side = FrontSide;\n    }\n\n    if (scope.renderReverseSided) {\n      if (side === FrontSide) side = BackSide;else if (side === BackSide) side = FrontSide;\n    }\n\n    result.side = side;\n    result.clipShadows = material.clipShadows;\n    result.clippingPlanes = material.clippingPlanes;\n    result.clipIntersection = material.clipIntersection;\n    result.wireframeLinewidth = material.wireframeLinewidth;\n    result.linewidth = material.linewidth;\n\n    if (isPointLight && result.isMeshDistanceMaterial) {\n      result.referencePosition.copy(lightPositionWorld);\n      result.nearDistance = shadowCameraNear;\n      result.farDistance = shadowCameraFar;\n    }\n\n    return result;\n  }\n\n  function renderObject(object, camera, shadowCamera, isPointLight) {\n    if (object.visible === false) return;\n    var visible = object.layers.test(camera.layers);\n\n    if (visible && (object.isMesh || object.isLine || object.isPoints)) {\n      if (object.castShadow && (!object.frustumCulled || _frustum.intersectsObject(object))) {\n        object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n        var geometry = _objects.update(object);\n\n        var material = object.material;\n\n        if (Array.isArray(material)) {\n          var groups = geometry.groups;\n\n          for (var k = 0, kl = groups.length; k < kl; k++) {\n            var group = groups[k];\n            var groupMaterial = material[group.materialIndex];\n\n            if (groupMaterial && groupMaterial.visible) {\n              var depthMaterial = getDepthMaterial(object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far);\n\n              _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n            }\n          }\n        } else if (material.visible) {\n          var depthMaterial = getDepthMaterial(object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far);\n\n          _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n        }\n      }\n    }\n\n    var children = object.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      renderObject(children[i], camera, shadowCamera, isPointLight);\n    }\n  }\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLAttributes(gl) {\n  var buffers = {};\n\n  function createBuffer(attribute, bufferType) {\n    var array = attribute.array;\n    var usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(bufferType, buffer);\n    gl.bufferData(bufferType, array, usage);\n    attribute.onUploadCallback();\n    var type = gl.FLOAT;\n\n    if (array instanceof Float32Array) {\n      type = gl.FLOAT;\n    } else if (array instanceof Float64Array) {\n      console.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');\n    } else if (array instanceof Uint16Array) {\n      type = gl.UNSIGNED_SHORT;\n    } else if (array instanceof Int16Array) {\n      type = gl.SHORT;\n    } else if (array instanceof Uint32Array) {\n      type = gl.UNSIGNED_INT;\n    } else if (array instanceof Int32Array) {\n      type = gl.INT;\n    } else if (array instanceof Int8Array) {\n      type = gl.BYTE;\n    } else if (array instanceof Uint8Array) {\n      type = gl.UNSIGNED_BYTE;\n    }\n\n    return {\n      buffer: buffer,\n      type: type,\n      bytesPerElement: array.BYTES_PER_ELEMENT,\n      version: attribute.version\n    };\n  }\n\n  function updateBuffer(buffer, attribute, bufferType) {\n    var array = attribute.array;\n    var updateRange = attribute.updateRange;\n    gl.bindBuffer(bufferType, buffer);\n\n    if (attribute.dynamic === false) {\n      gl.bufferData(bufferType, array, gl.STATIC_DRAW);\n    } else if (updateRange.count === -1) {\n      // Not using update ranges\n      gl.bufferSubData(bufferType, 0, array);\n    } else if (updateRange.count === 0) {\n      console.error('THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.');\n    } else {\n      gl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\n      updateRange.count = -1; // reset range\n    }\n  } //\n\n\n  function get(attribute) {\n    if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n    return buffers[attribute.uuid];\n  }\n\n  function remove(attribute) {\n    if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n    var data = buffers[attribute.uuid];\n\n    if (data) {\n      gl.deleteBuffer(data.buffer);\n      delete buffers[attribute.uuid];\n    }\n  }\n\n  function update(attribute, bufferType) {\n    if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n    var data = buffers[attribute.uuid];\n\n    if (data === undefined) {\n      buffers[attribute.uuid] = createBuffer(attribute, bufferType);\n    } else if (data.version < attribute.version) {\n      updateBuffer(data.buffer, attribute, bufferType);\n      data.version = attribute.version;\n    }\n  }\n\n  return {\n    get: get,\n    remove: remove,\n    update: update\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\n\nfunction Euler(x, y, z, order) {\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._order = order || Euler.DefaultOrder;\n}\n\nEuler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\nEuler.DefaultOrder = 'XYZ';\nObject.defineProperties(Euler.prototype, {\n  x: {\n    get: function () {\n      return this._x;\n    },\n    set: function (value) {\n      this._x = value;\n      this.onChangeCallback();\n    }\n  },\n  y: {\n    get: function () {\n      return this._y;\n    },\n    set: function (value) {\n      this._y = value;\n      this.onChangeCallback();\n    }\n  },\n  z: {\n    get: function () {\n      return this._z;\n    },\n    set: function (value) {\n      this._z = value;\n      this.onChangeCallback();\n    }\n  },\n  order: {\n    get: function () {\n      return this._order;\n    },\n    set: function (value) {\n      this._order = value;\n      this.onChangeCallback();\n    }\n  }\n});\nObject.assign(Euler.prototype, {\n  isEuler: true,\n  set: function (x, y, z, order) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order || this._order;\n    this.onChangeCallback();\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this._x, this._y, this._z, this._order);\n  },\n  copy: function (euler) {\n    this._x = euler._x;\n    this._y = euler._y;\n    this._z = euler._z;\n    this._order = euler._order;\n    this.onChangeCallback();\n    return this;\n  },\n  setFromRotationMatrix: function (m, order, update) {\n    var clamp = _Math.clamp; // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    var te = m.elements;\n    var m11 = te[0],\n        m12 = te[4],\n        m13 = te[8];\n    var m21 = te[1],\n        m22 = te[5],\n        m23 = te[9];\n    var m31 = te[2],\n        m32 = te[6],\n        m33 = te[10];\n    order = order || this._order;\n\n    if (order === 'XYZ') {\n      this._y = Math.asin(clamp(m13, -1, 1));\n\n      if (Math.abs(m13) < 0.99999) {\n        this._x = Math.atan2(-m23, m33);\n        this._z = Math.atan2(-m12, m11);\n      } else {\n        this._x = Math.atan2(m32, m22);\n        this._z = 0;\n      }\n    } else if (order === 'YXZ') {\n      this._x = Math.asin(-clamp(m23, -1, 1));\n\n      if (Math.abs(m23) < 0.99999) {\n        this._y = Math.atan2(m13, m33);\n        this._z = Math.atan2(m21, m22);\n      } else {\n        this._y = Math.atan2(-m31, m11);\n        this._z = 0;\n      }\n    } else if (order === 'ZXY') {\n      this._x = Math.asin(clamp(m32, -1, 1));\n\n      if (Math.abs(m32) < 0.99999) {\n        this._y = Math.atan2(-m31, m33);\n        this._z = Math.atan2(-m12, m22);\n      } else {\n        this._y = 0;\n        this._z = Math.atan2(m21, m11);\n      }\n    } else if (order === 'ZYX') {\n      this._y = Math.asin(-clamp(m31, -1, 1));\n\n      if (Math.abs(m31) < 0.99999) {\n        this._x = Math.atan2(m32, m33);\n        this._z = Math.atan2(m21, m11);\n      } else {\n        this._x = 0;\n        this._z = Math.atan2(-m12, m22);\n      }\n    } else if (order === 'YZX') {\n      this._z = Math.asin(clamp(m21, -1, 1));\n\n      if (Math.abs(m21) < 0.99999) {\n        this._x = Math.atan2(-m23, m22);\n        this._y = Math.atan2(-m31, m11);\n      } else {\n        this._x = 0;\n        this._y = Math.atan2(m13, m33);\n      }\n    } else if (order === 'XZY') {\n      this._z = Math.asin(-clamp(m12, -1, 1));\n\n      if (Math.abs(m12) < 0.99999) {\n        this._x = Math.atan2(m32, m22);\n        this._y = Math.atan2(m13, m11);\n      } else {\n        this._x = Math.atan2(-m23, m33);\n        this._y = 0;\n      }\n    } else {\n      console.warn('THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order);\n    }\n\n    this._order = order;\n    if (update !== false) this.onChangeCallback();\n    return this;\n  },\n  setFromQuaternion: function () {\n    var matrix = new Matrix4();\n    return function setFromQuaternion(q, order, update) {\n      matrix.makeRotationFromQuaternion(q);\n      return this.setFromRotationMatrix(matrix, order, update);\n    };\n  }(),\n  setFromVector3: function (v, order) {\n    return this.set(v.x, v.y, v.z, order || this._order);\n  },\n  reorder: function () {\n    // WARNING: this discards revolution information -bhouston\n    var q = new Quaternion();\n    return function reorder(newOrder) {\n      q.setFromEuler(this);\n      return this.setFromQuaternion(q, newOrder);\n    };\n  }(),\n  equals: function (euler) {\n    return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n  },\n  fromArray: function (array) {\n    this._x = array[0];\n    this._y = array[1];\n    this._z = array[2];\n    if (array[3] !== undefined) this._order = array[3];\n    this.onChangeCallback();\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._order;\n    return array;\n  },\n  toVector3: function (optionalResult) {\n    if (optionalResult) {\n      return optionalResult.set(this._x, this._y, this._z);\n    } else {\n      return new Vector3(this._x, this._y, this._z);\n    }\n  },\n  onChange: function (callback) {\n    this.onChangeCallback = callback;\n    return this;\n  },\n  onChangeCallback: function () {}\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n  this.mask = 1 | 0;\n}\n\nObject.assign(Layers.prototype, {\n  set: function (channel) {\n    this.mask = 1 << channel | 0;\n  },\n  enable: function (channel) {\n    this.mask |= 1 << channel | 0;\n  },\n  toggle: function (channel) {\n    this.mask ^= 1 << channel | 0;\n  },\n  disable: function (channel) {\n    this.mask &= ~(1 << channel | 0);\n  },\n  test: function (layers) {\n    return (this.mask & layers.mask) !== 0;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n  Object.defineProperty(this, 'id', {\n    value: object3DId++\n  });\n  this.uuid = _Math.generateUUID();\n  this.name = '';\n  this.type = 'Object3D';\n  this.parent = null;\n  this.children = [];\n  this.up = Object3D.DefaultUp.clone();\n  var position = new Vector3();\n  var rotation = new Euler();\n  var quaternion = new Quaternion();\n  var scale = new Vector3(1, 1, 1);\n\n  function onRotationChange() {\n    quaternion.setFromEuler(rotation, false);\n  }\n\n  function onQuaternionChange() {\n    rotation.setFromQuaternion(quaternion, undefined, false);\n  }\n\n  rotation.onChange(onRotationChange);\n  quaternion.onChange(onQuaternionChange);\n  Object.defineProperties(this, {\n    position: {\n      enumerable: true,\n      value: position\n    },\n    rotation: {\n      enumerable: true,\n      value: rotation\n    },\n    quaternion: {\n      enumerable: true,\n      value: quaternion\n    },\n    scale: {\n      enumerable: true,\n      value: scale\n    },\n    modelViewMatrix: {\n      value: new Matrix4()\n    },\n    normalMatrix: {\n      value: new Matrix3()\n    }\n  });\n  this.matrix = new Matrix4();\n  this.matrixWorld = new Matrix4();\n  this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n  this.matrixWorldNeedsUpdate = false;\n  this.layers = new Layers();\n  this.visible = true;\n  this.castShadow = false;\n  this.receiveShadow = false;\n  this.frustumCulled = true;\n  this.renderOrder = 0;\n  this.userData = {};\n}\n\nObject3D.DefaultUp = new Vector3(0, 1, 0);\nObject3D.DefaultMatrixAutoUpdate = true;\nObject.assign(Object3D.prototype, EventDispatcher.prototype, {\n  isObject3D: true,\n  onBeforeRender: function () {},\n  onAfterRender: function () {},\n  applyMatrix: function (matrix) {\n    this.matrix.multiplyMatrices(matrix, this.matrix);\n    this.matrix.decompose(this.position, this.quaternion, this.scale);\n  },\n  applyQuaternion: function (q) {\n    this.quaternion.premultiply(q);\n    return this;\n  },\n  setRotationFromAxisAngle: function (axis, angle) {\n    // assumes axis is normalized\n    this.quaternion.setFromAxisAngle(axis, angle);\n  },\n  setRotationFromEuler: function (euler) {\n    this.quaternion.setFromEuler(euler, true);\n  },\n  setRotationFromMatrix: function (m) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    this.quaternion.setFromRotationMatrix(m);\n  },\n  setRotationFromQuaternion: function (q) {\n    // assumes q is normalized\n    this.quaternion.copy(q);\n  },\n  rotateOnAxis: function () {\n    // rotate object on axis in object space\n    // axis is assumed to be normalized\n    var q1 = new Quaternion();\n    return function rotateOnAxis(axis, angle) {\n      q1.setFromAxisAngle(axis, angle);\n      this.quaternion.multiply(q1);\n      return this;\n    };\n  }(),\n  rotateX: function () {\n    var v1 = new Vector3(1, 0, 0);\n    return function rotateX(angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  rotateY: function () {\n    var v1 = new Vector3(0, 1, 0);\n    return function rotateY(angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  rotateZ: function () {\n    var v1 = new Vector3(0, 0, 1);\n    return function rotateZ(angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  translateOnAxis: function () {\n    // translate object by distance along axis in object space\n    // axis is assumed to be normalized\n    var v1 = new Vector3();\n    return function translateOnAxis(axis, distance) {\n      v1.copy(axis).applyQuaternion(this.quaternion);\n      this.position.add(v1.multiplyScalar(distance));\n      return this;\n    };\n  }(),\n  translateX: function () {\n    var v1 = new Vector3(1, 0, 0);\n    return function translateX(distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  translateY: function () {\n    var v1 = new Vector3(0, 1, 0);\n    return function translateY(distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  translateZ: function () {\n    var v1 = new Vector3(0, 0, 1);\n    return function translateZ(distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  localToWorld: function (vector) {\n    return vector.applyMatrix4(this.matrixWorld);\n  },\n  worldToLocal: function () {\n    var m1 = new Matrix4();\n    return function worldToLocal(vector) {\n      return vector.applyMatrix4(m1.getInverse(this.matrixWorld));\n    };\n  }(),\n  lookAt: function () {\n    // This method does not support objects with rotated and/or translated parent(s)\n    var m1 = new Matrix4();\n    return function lookAt(vector) {\n      if (this.isCamera) {\n        m1.lookAt(this.position, vector, this.up);\n      } else {\n        m1.lookAt(vector, this.position, this.up);\n      }\n\n      this.quaternion.setFromRotationMatrix(m1);\n    };\n  }(),\n  add: function (object) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.add(arguments[i]);\n      }\n\n      return this;\n    }\n\n    if (object === this) {\n      console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\", object);\n      return this;\n    }\n\n    if (object && object.isObject3D) {\n      if (object.parent !== null) {\n        object.parent.remove(object);\n      }\n\n      object.parent = this;\n      object.dispatchEvent({\n        type: 'added'\n      });\n      this.children.push(object);\n    } else {\n      console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object);\n    }\n\n    return this;\n  },\n  remove: function (object) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.remove(arguments[i]);\n      }\n\n      return this;\n    }\n\n    var index = this.children.indexOf(object);\n\n    if (index !== -1) {\n      object.parent = null;\n      object.dispatchEvent({\n        type: 'removed'\n      });\n      this.children.splice(index, 1);\n    }\n\n    return this;\n  },\n  getObjectById: function (id) {\n    return this.getObjectByProperty('id', id);\n  },\n  getObjectByName: function (name) {\n    return this.getObjectByProperty('name', name);\n  },\n  getObjectByProperty: function (name, value) {\n    if (this[name] === value) return this;\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      var child = this.children[i];\n      var object = child.getObjectByProperty(name, value);\n\n      if (object !== undefined) {\n        return object;\n      }\n    }\n\n    return undefined;\n  },\n  getWorldPosition: function (optionalTarget) {\n    var result = optionalTarget || new Vector3();\n    this.updateMatrixWorld(true);\n    return result.setFromMatrixPosition(this.matrixWorld);\n  },\n  getWorldQuaternion: function () {\n    var position = new Vector3();\n    var scale = new Vector3();\n    return function getWorldQuaternion(optionalTarget) {\n      var result = optionalTarget || new Quaternion();\n      this.updateMatrixWorld(true);\n      this.matrixWorld.decompose(position, result, scale);\n      return result;\n    };\n  }(),\n  getWorldRotation: function () {\n    var quaternion = new Quaternion();\n    return function getWorldRotation(optionalTarget) {\n      var result = optionalTarget || new Euler();\n      this.getWorldQuaternion(quaternion);\n      return result.setFromQuaternion(quaternion, this.rotation.order, false);\n    };\n  }(),\n  getWorldScale: function () {\n    var position = new Vector3();\n    var quaternion = new Quaternion();\n    return function getWorldScale(optionalTarget) {\n      var result = optionalTarget || new Vector3();\n      this.updateMatrixWorld(true);\n      this.matrixWorld.decompose(position, quaternion, result);\n      return result;\n    };\n  }(),\n  getWorldDirection: function () {\n    var quaternion = new Quaternion();\n    return function getWorldDirection(optionalTarget) {\n      var result = optionalTarget || new Vector3();\n      this.getWorldQuaternion(quaternion);\n      return result.set(0, 0, 1).applyQuaternion(quaternion);\n    };\n  }(),\n  raycast: function () {},\n  traverse: function (callback) {\n    callback(this);\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].traverse(callback);\n    }\n  },\n  traverseVisible: function (callback) {\n    if (this.visible === false) return;\n    callback(this);\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].traverseVisible(callback);\n    }\n  },\n  traverseAncestors: function (callback) {\n    var parent = this.parent;\n\n    if (parent !== null) {\n      callback(parent);\n      parent.traverseAncestors(callback);\n    }\n  },\n  updateMatrix: function () {\n    this.matrix.compose(this.position, this.quaternion, this.scale);\n    this.matrixWorldNeedsUpdate = true;\n  },\n  updateMatrixWorld: function (force) {\n    if (this.matrixAutoUpdate) this.updateMatrix();\n\n    if (this.matrixWorldNeedsUpdate || force) {\n      if (this.parent === null) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      }\n\n      this.matrixWorldNeedsUpdate = false;\n      force = true;\n    } // update children\n\n\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].updateMatrixWorld(force);\n    }\n  },\n  toJSON: function (meta) {\n    // meta is '' when called from JSON.stringify\n    var isRootObject = meta === undefined || meta === '';\n    var output = {}; // meta is a hash used to collect geometries, materials.\n    // not providing it implies that this is the root object\n    // being serialized.\n\n    if (isRootObject) {\n      // initialize meta obj\n      meta = {\n        geometries: {},\n        materials: {},\n        textures: {},\n        images: {}\n      };\n      output.metadata = {\n        version: 4.5,\n        type: 'Object',\n        generator: 'Object3D.toJSON'\n      };\n    } // standard Object3D serialization\n\n\n    var object = {};\n    object.uuid = this.uuid;\n    object.type = this.type;\n    if (this.name !== '') object.name = this.name;\n    if (this.castShadow === true) object.castShadow = true;\n    if (this.receiveShadow === true) object.receiveShadow = true;\n    if (this.visible === false) object.visible = false;\n    if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n    object.matrix = this.matrix.toArray(); //\n\n    function serialize(library, element) {\n      if (library[element.uuid] === undefined) {\n        library[element.uuid] = element.toJSON(meta);\n      }\n\n      return element.uuid;\n    }\n\n    if (this.geometry !== undefined) {\n      object.geometry = serialize(meta.geometries, this.geometry);\n    }\n\n    if (this.material !== undefined) {\n      if (Array.isArray(this.material)) {\n        var uuids = [];\n\n        for (var i = 0, l = this.material.length; i < l; i++) {\n          uuids.push(serialize(meta.materials, this.material[i]));\n        }\n\n        object.material = uuids;\n      } else {\n        object.material = serialize(meta.materials, this.material);\n      }\n    } //\n\n\n    if (this.children.length > 0) {\n      object.children = [];\n\n      for (var i = 0; i < this.children.length; i++) {\n        object.children.push(this.children[i].toJSON(meta).object);\n      }\n    }\n\n    if (isRootObject) {\n      var geometries = extractFromCache(meta.geometries);\n      var materials = extractFromCache(meta.materials);\n      var textures = extractFromCache(meta.textures);\n      var images = extractFromCache(meta.images);\n      if (geometries.length > 0) output.geometries = geometries;\n      if (materials.length > 0) output.materials = materials;\n      if (textures.length > 0) output.textures = textures;\n      if (images.length > 0) output.images = images;\n    }\n\n    output.object = object;\n    return output; // extract data from the cache hash\n    // remove metadata on each item\n    // and return as array\n\n    function extractFromCache(cache) {\n      var values = [];\n\n      for (var key in cache) {\n        var data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n  },\n  clone: function (recursive) {\n    return new this.constructor().copy(this, recursive);\n  },\n  copy: function (source, recursive) {\n    if (recursive === undefined) recursive = true;\n    this.name = source.name;\n    this.up.copy(source.up);\n    this.position.copy(source.position);\n    this.quaternion.copy(source.quaternion);\n    this.scale.copy(source.scale);\n    this.matrix.copy(source.matrix);\n    this.matrixWorld.copy(source.matrixWorld);\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n    this.layers.mask = source.layers.mask;\n    this.visible = source.visible;\n    this.castShadow = source.castShadow;\n    this.receiveShadow = source.receiveShadow;\n    this.frustumCulled = source.frustumCulled;\n    this.renderOrder = source.renderOrder;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n\n    if (recursive === true) {\n      for (var i = 0; i < source.children.length; i++) {\n        var child = source.children[i];\n        this.add(child.clone());\n      }\n    }\n\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n  Object3D.call(this);\n  this.type = 'Camera';\n  this.matrixWorldInverse = new Matrix4();\n  this.projectionMatrix = new Matrix4();\n}\n\nCamera.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Camera,\n  isCamera: true,\n  copy: function (source, recursive) {\n    Object3D.prototype.copy.call(this, source, recursive);\n    this.matrixWorldInverse.copy(source.matrixWorldInverse);\n    this.projectionMatrix.copy(source.projectionMatrix);\n    return this;\n  },\n  getWorldDirection: function () {\n    var quaternion = new Quaternion();\n    return function getWorldDirection(optionalTarget) {\n      var result = optionalTarget || new Vector3();\n      this.getWorldQuaternion(quaternion);\n      return result.set(0, 0, -1).applyQuaternion(quaternion);\n    };\n  }(),\n  updateMatrixWorld: function (force) {\n    Object3D.prototype.updateMatrixWorld.call(this, force);\n    this.matrixWorldInverse.getInverse(this.matrixWorld);\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera(left, right, top, bottom, near, far) {\n  Camera.call(this);\n  this.type = 'OrthographicCamera';\n  this.zoom = 1;\n  this.view = null;\n  this.left = left;\n  this.right = right;\n  this.top = top;\n  this.bottom = bottom;\n  this.near = near !== undefined ? near : 0.1;\n  this.far = far !== undefined ? far : 2000;\n  this.updateProjectionMatrix();\n}\n\nOrthographicCamera.prototype = Object.assign(Object.create(Camera.prototype), {\n  constructor: OrthographicCamera,\n  isOrthographicCamera: true,\n  copy: function (source, recursive) {\n    Camera.prototype.copy.call(this, source, recursive);\n    this.left = source.left;\n    this.right = source.right;\n    this.top = source.top;\n    this.bottom = source.bottom;\n    this.near = source.near;\n    this.far = source.far;\n    this.zoom = source.zoom;\n    this.view = source.view === null ? null : Object.assign({}, source.view);\n    return this;\n  },\n  setViewOffset: function (fullWidth, fullHeight, x, y, width, height) {\n    this.view = {\n      fullWidth: fullWidth,\n      fullHeight: fullHeight,\n      offsetX: x,\n      offsetY: y,\n      width: width,\n      height: height\n    };\n    this.updateProjectionMatrix();\n  },\n  clearViewOffset: function () {\n    this.view = null;\n    this.updateProjectionMatrix();\n  },\n  updateProjectionMatrix: function () {\n    var dx = (this.right - this.left) / (2 * this.zoom);\n    var dy = (this.top - this.bottom) / (2 * this.zoom);\n    var cx = (this.right + this.left) / 2;\n    var cy = (this.top + this.bottom) / 2;\n    var left = cx - dx;\n    var right = cx + dx;\n    var top = cy + dy;\n    var bottom = cy - dy;\n\n    if (this.view !== null) {\n      var zoomW = this.zoom / (this.view.width / this.view.fullWidth);\n      var zoomH = this.zoom / (this.view.height / this.view.fullHeight);\n      var scaleW = (this.right - this.left) / this.view.width;\n      var scaleH = (this.top - this.bottom) / this.view.height;\n      left += scaleW * (this.view.offsetX / zoomW);\n      right = left + scaleW * (this.view.width / zoomW);\n      top -= scaleH * (this.view.offsetY / zoomH);\n      bottom = top - scaleH * (this.view.height / zoomH);\n    }\n\n    this.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n  },\n  toJSON: function (meta) {\n    var data = Object3D.prototype.toJSON.call(this, meta);\n    data.object.zoom = this.zoom;\n    data.object.left = this.left;\n    data.object.right = this.right;\n    data.object.top = this.top;\n    data.object.bottom = this.bottom;\n    data.object.near = this.near;\n    data.object.far = this.far;\n    if (this.view !== null) data.object.view = Object.assign({}, this.view);\n    return data;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera(fov, aspect, near, far) {\n  Camera.call(this);\n  this.type = 'PerspectiveCamera';\n  this.fov = fov !== undefined ? fov : 50;\n  this.zoom = 1;\n  this.near = near !== undefined ? near : 0.1;\n  this.far = far !== undefined ? far : 2000;\n  this.focus = 10;\n  this.aspect = aspect !== undefined ? aspect : 1;\n  this.view = null;\n  this.filmGauge = 35; // width of the film (default in millimeters)\n\n  this.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n  this.updateProjectionMatrix();\n}\n\nPerspectiveCamera.prototype = Object.assign(Object.create(Camera.prototype), {\n  constructor: PerspectiveCamera,\n  isPerspectiveCamera: true,\n  copy: function (source, recursive) {\n    Camera.prototype.copy.call(this, source, recursive);\n    this.fov = source.fov;\n    this.zoom = source.zoom;\n    this.near = source.near;\n    this.far = source.far;\n    this.focus = source.focus;\n    this.aspect = source.aspect;\n    this.view = source.view === null ? null : Object.assign({}, source.view);\n    this.filmGauge = source.filmGauge;\n    this.filmOffset = source.filmOffset;\n    return this;\n  },\n\n  /**\n   * Sets the FOV by focal length in respect to the current .filmGauge.\n   *\n   * The default film gauge is 35, so that the focal length can be specified for\n   * a 35mm (full frame) camera.\n   *\n   * Values for focal length and film gauge must have the same unit.\n   */\n  setFocalLength: function (focalLength) {\n    // see http://www.bobatkins.com/photography/technical/field_of_view.html\n    var vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n    this.fov = _Math.RAD2DEG * 2 * Math.atan(vExtentSlope);\n    this.updateProjectionMatrix();\n  },\n\n  /**\n   * Calculates the focal length from the current .fov and .filmGauge.\n   */\n  getFocalLength: function () {\n    var vExtentSlope = Math.tan(_Math.DEG2RAD * 0.5 * this.fov);\n    return 0.5 * this.getFilmHeight() / vExtentSlope;\n  },\n  getEffectiveFOV: function () {\n    return _Math.RAD2DEG * 2 * Math.atan(Math.tan(_Math.DEG2RAD * 0.5 * this.fov) / this.zoom);\n  },\n  getFilmWidth: function () {\n    // film not completely covered in portrait format (aspect < 1)\n    return this.filmGauge * Math.min(this.aspect, 1);\n  },\n  getFilmHeight: function () {\n    // film not completely covered in landscape format (aspect > 1)\n    return this.filmGauge / Math.max(this.aspect, 1);\n  },\n\n  /**\n   * Sets an offset in a larger frustum. This is useful for multi-window or\n   * multi-monitor/multi-machine setups.\n   *\n   * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n   * the monitors are in grid like this\n   *\n   *   +---+---+---+\n   *   | A | B | C |\n   *   +---+---+---+\n   *   | D | E | F |\n   *   +---+---+---+\n   *\n   * then for each monitor you would call it like this\n   *\n   *   var w = 1920;\n   *   var h = 1080;\n   *   var fullWidth = w * 3;\n   *   var fullHeight = h * 2;\n   *\n   *   --A--\n   *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n   *   --B--\n   *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n   *   --C--\n   *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n   *   --D--\n   *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n   *   --E--\n   *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n   *   --F--\n   *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n   *\n   *   Note there is no reason monitors have to be the same size or in a grid.\n   */\n  setViewOffset: function (fullWidth, fullHeight, x, y, width, height) {\n    this.aspect = fullWidth / fullHeight;\n    this.view = {\n      fullWidth: fullWidth,\n      fullHeight: fullHeight,\n      offsetX: x,\n      offsetY: y,\n      width: width,\n      height: height\n    };\n    this.updateProjectionMatrix();\n  },\n  clearViewOffset: function () {\n    this.view = null;\n    this.updateProjectionMatrix();\n  },\n  updateProjectionMatrix: function () {\n    var near = this.near,\n        top = near * Math.tan(_Math.DEG2RAD * 0.5 * this.fov) / this.zoom,\n        height = 2 * top,\n        width = this.aspect * height,\n        left = -0.5 * width,\n        view = this.view;\n\n    if (view !== null) {\n      var fullWidth = view.fullWidth,\n          fullHeight = view.fullHeight;\n      left += view.offsetX * width / fullWidth;\n      top -= view.offsetY * height / fullHeight;\n      width *= view.width / fullWidth;\n      height *= view.height / fullHeight;\n    }\n\n    var skew = this.filmOffset;\n    if (skew !== 0) left += near * skew / this.getFilmWidth();\n    this.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\n  },\n  toJSON: function (meta) {\n    var data = Object3D.prototype.toJSON.call(this, meta);\n    data.object.fov = this.fov;\n    data.object.zoom = this.zoom;\n    data.object.near = this.near;\n    data.object.far = this.far;\n    data.object.focus = this.focus;\n    data.object.aspect = this.aspect;\n    if (this.view !== null) data.object.view = Object.assign({}, this.view);\n    data.object.filmGauge = this.filmGauge;\n    data.object.filmOffset = this.filmOffset;\n    return data;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3(a, b, c, normal, color, materialIndex) {\n  this.a = a;\n  this.b = b;\n  this.c = c;\n  this.normal = normal && normal.isVector3 ? normal : new Vector3();\n  this.vertexNormals = Array.isArray(normal) ? normal : [];\n  this.color = color && color.isColor ? color : new Color();\n  this.vertexColors = Array.isArray(color) ? color : [];\n  this.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n}\n\nObject.assign(Face3.prototype, {\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.a = source.a;\n    this.b = source.b;\n    this.c = source.c;\n    this.normal.copy(source.normal);\n    this.color.copy(source.color);\n    this.materialIndex = source.materialIndex;\n\n    for (var i = 0, il = source.vertexNormals.length; i < il; i++) {\n      this.vertexNormals[i] = source.vertexNormals[i].clone();\n    }\n\n    for (var i = 0, il = source.vertexColors.length; i < il; i++) {\n      this.vertexColors[i] = source.vertexColors[i].clone();\n    }\n\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar count = 0;\n\nfunction GeometryIdCount() {\n  return count++;\n}\n\nfunction Geometry() {\n  Object.defineProperty(this, 'id', {\n    value: GeometryIdCount()\n  });\n  this.uuid = _Math.generateUUID();\n  this.name = '';\n  this.type = 'Geometry';\n  this.vertices = [];\n  this.colors = [];\n  this.faces = [];\n  this.faceVertexUvs = [[]];\n  this.morphTargets = [];\n  this.morphNormals = [];\n  this.skinWeights = [];\n  this.skinIndices = [];\n  this.lineDistances = [];\n  this.boundingBox = null;\n  this.boundingSphere = null; // update flags\n\n  this.elementsNeedUpdate = false;\n  this.verticesNeedUpdate = false;\n  this.uvsNeedUpdate = false;\n  this.normalsNeedUpdate = false;\n  this.colorsNeedUpdate = false;\n  this.lineDistancesNeedUpdate = false;\n  this.groupsNeedUpdate = false;\n}\n\nObject.assign(Geometry.prototype, EventDispatcher.prototype, {\n  isGeometry: true,\n  applyMatrix: function (matrix) {\n    var normalMatrix = new Matrix3().getNormalMatrix(matrix);\n\n    for (var i = 0, il = this.vertices.length; i < il; i++) {\n      var vertex = this.vertices[i];\n      vertex.applyMatrix4(matrix);\n    }\n\n    for (var i = 0, il = this.faces.length; i < il; i++) {\n      var face = this.faces[i];\n      face.normal.applyMatrix3(normalMatrix).normalize();\n\n      for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n        face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();\n      }\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    this.verticesNeedUpdate = true;\n    this.normalsNeedUpdate = true;\n    return this;\n  },\n  rotateX: function () {\n    // rotate geometry around world x-axis\n    var m1 = new Matrix4();\n    return function rotateX(angle) {\n      m1.makeRotationX(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateY: function () {\n    // rotate geometry around world y-axis\n    var m1 = new Matrix4();\n    return function rotateY(angle) {\n      m1.makeRotationY(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateZ: function () {\n    // rotate geometry around world z-axis\n    var m1 = new Matrix4();\n    return function rotateZ(angle) {\n      m1.makeRotationZ(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  translate: function () {\n    // translate geometry\n    var m1 = new Matrix4();\n    return function translate(x, y, z) {\n      m1.makeTranslation(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  scale: function () {\n    // scale geometry\n    var m1 = new Matrix4();\n    return function scale(x, y, z) {\n      m1.makeScale(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  lookAt: function () {\n    var obj = new Object3D();\n    return function lookAt(vector) {\n      obj.lookAt(vector);\n      obj.updateMatrix();\n      this.applyMatrix(obj.matrix);\n    };\n  }(),\n  fromBufferGeometry: function (geometry) {\n    var scope = this;\n    var indices = geometry.index !== null ? geometry.index.array : undefined;\n    var attributes = geometry.attributes;\n    var positions = attributes.position.array;\n    var normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n    var colors = attributes.color !== undefined ? attributes.color.array : undefined;\n    var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n    var uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n    if (uvs2 !== undefined) this.faceVertexUvs[1] = [];\n    var tempNormals = [];\n    var tempUVs = [];\n    var tempUVs2 = [];\n\n    for (var i = 0, j = 0; i < positions.length; i += 3, j += 2) {\n      scope.vertices.push(new Vector3(positions[i], positions[i + 1], positions[i + 2]));\n\n      if (normals !== undefined) {\n        tempNormals.push(new Vector3(normals[i], normals[i + 1], normals[i + 2]));\n      }\n\n      if (colors !== undefined) {\n        scope.colors.push(new Color(colors[i], colors[i + 1], colors[i + 2]));\n      }\n\n      if (uvs !== undefined) {\n        tempUVs.push(new Vector2(uvs[j], uvs[j + 1]));\n      }\n\n      if (uvs2 !== undefined) {\n        tempUVs2.push(new Vector2(uvs2[j], uvs2[j + 1]));\n      }\n    }\n\n    function addFace(a, b, c, materialIndex) {\n      var vertexNormals = normals !== undefined ? [tempNormals[a].clone(), tempNormals[b].clone(), tempNormals[c].clone()] : [];\n      var vertexColors = colors !== undefined ? [scope.colors[a].clone(), scope.colors[b].clone(), scope.colors[c].clone()] : [];\n      var face = new Face3(a, b, c, vertexNormals, vertexColors, materialIndex);\n      scope.faces.push(face);\n\n      if (uvs !== undefined) {\n        scope.faceVertexUvs[0].push([tempUVs[a].clone(), tempUVs[b].clone(), tempUVs[c].clone()]);\n      }\n\n      if (uvs2 !== undefined) {\n        scope.faceVertexUvs[1].push([tempUVs2[a].clone(), tempUVs2[b].clone(), tempUVs2[c].clone()]);\n      }\n    }\n\n    var groups = geometry.groups;\n\n    if (groups.length > 0) {\n      for (var i = 0; i < groups.length; i++) {\n        var group = groups[i];\n        var start = group.start;\n        var count = group.count;\n\n        for (var j = start, jl = start + count; j < jl; j += 3) {\n          if (indices !== undefined) {\n            addFace(indices[j], indices[j + 1], indices[j + 2], group.materialIndex);\n          } else {\n            addFace(j, j + 1, j + 2, group.materialIndex);\n          }\n        }\n      }\n    } else {\n      if (indices !== undefined) {\n        for (var i = 0; i < indices.length; i += 3) {\n          addFace(indices[i], indices[i + 1], indices[i + 2]);\n        }\n      } else {\n        for (var i = 0; i < positions.length / 3; i += 3) {\n          addFace(i, i + 1, i + 2);\n        }\n      }\n    }\n\n    this.computeFaceNormals();\n\n    if (geometry.boundingBox !== null) {\n      this.boundingBox = geometry.boundingBox.clone();\n    }\n\n    if (geometry.boundingSphere !== null) {\n      this.boundingSphere = geometry.boundingSphere.clone();\n    }\n\n    return this;\n  },\n  center: function () {\n    this.computeBoundingBox();\n    var offset = this.boundingBox.getCenter().negate();\n    this.translate(offset.x, offset.y, offset.z);\n    return offset;\n  },\n  normalize: function () {\n    this.computeBoundingSphere();\n    var center = this.boundingSphere.center;\n    var radius = this.boundingSphere.radius;\n    var s = radius === 0 ? 1 : 1.0 / radius;\n    var matrix = new Matrix4();\n    matrix.set(s, 0, 0, -s * center.x, 0, s, 0, -s * center.y, 0, 0, s, -s * center.z, 0, 0, 0, 1);\n    this.applyMatrix(matrix);\n    return this;\n  },\n  computeFaceNormals: function () {\n    var cb = new Vector3(),\n        ab = new Vector3();\n\n    for (var f = 0, fl = this.faces.length; f < fl; f++) {\n      var face = this.faces[f];\n      var vA = this.vertices[face.a];\n      var vB = this.vertices[face.b];\n      var vC = this.vertices[face.c];\n      cb.subVectors(vC, vB);\n      ab.subVectors(vA, vB);\n      cb.cross(ab);\n      cb.normalize();\n      face.normal.copy(cb);\n    }\n  },\n  computeVertexNormals: function (areaWeighted) {\n    if (areaWeighted === undefined) areaWeighted = true;\n    var v, vl, f, fl, face, vertices;\n    vertices = new Array(this.vertices.length);\n\n    for (v = 0, vl = this.vertices.length; v < vl; v++) {\n      vertices[v] = new Vector3();\n    }\n\n    if (areaWeighted) {\n      // vertex normals weighted by triangle areas\n      // http://www.iquilezles.org/www/articles/normals/normals.htm\n      var vA, vB, vC;\n      var cb = new Vector3(),\n          ab = new Vector3();\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        vA = this.vertices[face.a];\n        vB = this.vertices[face.b];\n        vC = this.vertices[face.c];\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        vertices[face.a].add(cb);\n        vertices[face.b].add(cb);\n        vertices[face.c].add(cb);\n      }\n    } else {\n      this.computeFaceNormals();\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        vertices[face.a].add(face.normal);\n        vertices[face.b].add(face.normal);\n        vertices[face.c].add(face.normal);\n      }\n    }\n\n    for (v = 0, vl = this.vertices.length; v < vl; v++) {\n      vertices[v].normalize();\n    }\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      var vertexNormals = face.vertexNormals;\n\n      if (vertexNormals.length === 3) {\n        vertexNormals[0].copy(vertices[face.a]);\n        vertexNormals[1].copy(vertices[face.b]);\n        vertexNormals[2].copy(vertices[face.c]);\n      } else {\n        vertexNormals[0] = vertices[face.a].clone();\n        vertexNormals[1] = vertices[face.b].clone();\n        vertexNormals[2] = vertices[face.c].clone();\n      }\n    }\n\n    if (this.faces.length > 0) {\n      this.normalsNeedUpdate = true;\n    }\n  },\n  computeFlatVertexNormals: function () {\n    var f, fl, face;\n    this.computeFaceNormals();\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      var vertexNormals = face.vertexNormals;\n\n      if (vertexNormals.length === 3) {\n        vertexNormals[0].copy(face.normal);\n        vertexNormals[1].copy(face.normal);\n        vertexNormals[2].copy(face.normal);\n      } else {\n        vertexNormals[0] = face.normal.clone();\n        vertexNormals[1] = face.normal.clone();\n        vertexNormals[2] = face.normal.clone();\n      }\n    }\n\n    if (this.faces.length > 0) {\n      this.normalsNeedUpdate = true;\n    }\n  },\n  computeMorphNormals: function () {\n    var i, il, f, fl, face; // save original normals\n    // - create temp variables on first access\n    //   otherwise just copy (for faster repeated calls)\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n\n      if (!face.__originalFaceNormal) {\n        face.__originalFaceNormal = face.normal.clone();\n      } else {\n        face.__originalFaceNormal.copy(face.normal);\n      }\n\n      if (!face.__originalVertexNormals) face.__originalVertexNormals = [];\n\n      for (i = 0, il = face.vertexNormals.length; i < il; i++) {\n        if (!face.__originalVertexNormals[i]) {\n          face.__originalVertexNormals[i] = face.vertexNormals[i].clone();\n        } else {\n          face.__originalVertexNormals[i].copy(face.vertexNormals[i]);\n        }\n      }\n    } // use temp geometry to compute face and vertex normals for each morph\n\n\n    var tmpGeo = new Geometry();\n    tmpGeo.faces = this.faces;\n\n    for (i = 0, il = this.morphTargets.length; i < il; i++) {\n      // create on first access\n      if (!this.morphNormals[i]) {\n        this.morphNormals[i] = {};\n        this.morphNormals[i].faceNormals = [];\n        this.morphNormals[i].vertexNormals = [];\n        var dstNormalsFace = this.morphNormals[i].faceNormals;\n        var dstNormalsVertex = this.morphNormals[i].vertexNormals;\n        var faceNormal, vertexNormals;\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          faceNormal = new Vector3();\n          vertexNormals = {\n            a: new Vector3(),\n            b: new Vector3(),\n            c: new Vector3()\n          };\n          dstNormalsFace.push(faceNormal);\n          dstNormalsVertex.push(vertexNormals);\n        }\n      }\n\n      var morphNormals = this.morphNormals[i]; // set vertices to morph target\n\n      tmpGeo.vertices = this.morphTargets[i].vertices; // compute morph normals\n\n      tmpGeo.computeFaceNormals();\n      tmpGeo.computeVertexNormals(); // store morph normals\n\n      var faceNormal, vertexNormals;\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        faceNormal = morphNormals.faceNormals[f];\n        vertexNormals = morphNormals.vertexNormals[f];\n        faceNormal.copy(face.normal);\n        vertexNormals.a.copy(face.vertexNormals[0]);\n        vertexNormals.b.copy(face.vertexNormals[1]);\n        vertexNormals.c.copy(face.vertexNormals[2]);\n      }\n    } // restore original normals\n\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      face.normal = face.__originalFaceNormal;\n      face.vertexNormals = face.__originalVertexNormals;\n    }\n  },\n  computeLineDistances: function () {\n    var d = 0;\n    var vertices = this.vertices;\n\n    for (var i = 0, il = vertices.length; i < il; i++) {\n      if (i > 0) {\n        d += vertices[i].distanceTo(vertices[i - 1]);\n      }\n\n      this.lineDistances[i] = d;\n    }\n  },\n  computeBoundingBox: function () {\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3();\n    }\n\n    this.boundingBox.setFromPoints(this.vertices);\n  },\n  computeBoundingSphere: function () {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new Sphere();\n    }\n\n    this.boundingSphere.setFromPoints(this.vertices);\n  },\n  merge: function (geometry, matrix, materialIndexOffset) {\n    if (!(geometry && geometry.isGeometry)) {\n      console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry);\n      return;\n    }\n\n    var normalMatrix,\n        vertexOffset = this.vertices.length,\n        vertices1 = this.vertices,\n        vertices2 = geometry.vertices,\n        faces1 = this.faces,\n        faces2 = geometry.faces,\n        uvs1 = this.faceVertexUvs[0],\n        uvs2 = geometry.faceVertexUvs[0],\n        colors1 = this.colors,\n        colors2 = geometry.colors;\n    if (materialIndexOffset === undefined) materialIndexOffset = 0;\n\n    if (matrix !== undefined) {\n      normalMatrix = new Matrix3().getNormalMatrix(matrix);\n    } // vertices\n\n\n    for (var i = 0, il = vertices2.length; i < il; i++) {\n      var vertex = vertices2[i];\n      var vertexCopy = vertex.clone();\n      if (matrix !== undefined) vertexCopy.applyMatrix4(matrix);\n      vertices1.push(vertexCopy);\n    } // colors\n\n\n    for (var i = 0, il = colors2.length; i < il; i++) {\n      colors1.push(colors2[i].clone());\n    } // faces\n\n\n    for (i = 0, il = faces2.length; i < il; i++) {\n      var face = faces2[i],\n          faceCopy,\n          normal,\n          color,\n          faceVertexNormals = face.vertexNormals,\n          faceVertexColors = face.vertexColors;\n      faceCopy = new Face3(face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset);\n      faceCopy.normal.copy(face.normal);\n\n      if (normalMatrix !== undefined) {\n        faceCopy.normal.applyMatrix3(normalMatrix).normalize();\n      }\n\n      for (var j = 0, jl = faceVertexNormals.length; j < jl; j++) {\n        normal = faceVertexNormals[j].clone();\n\n        if (normalMatrix !== undefined) {\n          normal.applyMatrix3(normalMatrix).normalize();\n        }\n\n        faceCopy.vertexNormals.push(normal);\n      }\n\n      faceCopy.color.copy(face.color);\n\n      for (var j = 0, jl = faceVertexColors.length; j < jl; j++) {\n        color = faceVertexColors[j];\n        faceCopy.vertexColors.push(color.clone());\n      }\n\n      faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n      faces1.push(faceCopy);\n    } // uvs\n\n\n    for (i = 0, il = uvs2.length; i < il; i++) {\n      var uv = uvs2[i],\n          uvCopy = [];\n\n      if (uv === undefined) {\n        continue;\n      }\n\n      for (var j = 0, jl = uv.length; j < jl; j++) {\n        uvCopy.push(uv[j].clone());\n      }\n\n      uvs1.push(uvCopy);\n    }\n  },\n  mergeMesh: function (mesh) {\n    if (!(mesh && mesh.isMesh)) {\n      console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh);\n      return;\n    }\n\n    mesh.matrixAutoUpdate && mesh.updateMatrix();\n    this.merge(mesh.geometry, mesh.matrix);\n  },\n\n  /*\n   * Checks for duplicate vertices with hashmap.\n   * Duplicated vertices are removed\n   * and faces' vertices are updated.\n   */\n  mergeVertices: function () {\n    var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\n    var unique = [],\n        changes = [];\n    var v, key;\n    var precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\n    var precision = Math.pow(10, precisionPoints);\n    var i, il, face;\n    var indices, j, jl;\n\n    for (i = 0, il = this.vertices.length; i < il; i++) {\n      v = this.vertices[i];\n      key = Math.round(v.x * precision) + '_' + Math.round(v.y * precision) + '_' + Math.round(v.z * precision);\n\n      if (verticesMap[key] === undefined) {\n        verticesMap[key] = i;\n        unique.push(this.vertices[i]);\n        changes[i] = unique.length - 1;\n      } else {\n        //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n        changes[i] = changes[verticesMap[key]];\n      }\n    } // if faces are completely degenerate after merging vertices, we\n    // have to remove them from the geometry.\n\n\n    var faceIndicesToRemove = [];\n\n    for (i = 0, il = this.faces.length; i < il; i++) {\n      face = this.faces[i];\n      face.a = changes[face.a];\n      face.b = changes[face.b];\n      face.c = changes[face.c];\n      indices = [face.a, face.b, face.c]; // if any duplicate vertices are found in a Face3\n      // we have to remove the face as nothing can be saved\n\n      for (var n = 0; n < 3; n++) {\n        if (indices[n] === indices[(n + 1) % 3]) {\n          faceIndicesToRemove.push(i);\n          break;\n        }\n      }\n    }\n\n    for (i = faceIndicesToRemove.length - 1; i >= 0; i--) {\n      var idx = faceIndicesToRemove[i];\n      this.faces.splice(idx, 1);\n\n      for (j = 0, jl = this.faceVertexUvs.length; j < jl; j++) {\n        this.faceVertexUvs[j].splice(idx, 1);\n      }\n    } // Use unique set of vertices\n\n\n    var diff = this.vertices.length - unique.length;\n    this.vertices = unique;\n    return diff;\n  },\n  sortFacesByMaterialIndex: function () {\n    var faces = this.faces;\n    var length = faces.length; // tag faces\n\n    for (var i = 0; i < length; i++) {\n      faces[i]._id = i;\n    } // sort faces\n\n\n    function materialIndexSort(a, b) {\n      return a.materialIndex - b.materialIndex;\n    }\n\n    faces.sort(materialIndexSort); // sort uvs\n\n    var uvs1 = this.faceVertexUvs[0];\n    var uvs2 = this.faceVertexUvs[1];\n    var newUvs1, newUvs2;\n    if (uvs1 && uvs1.length === length) newUvs1 = [];\n    if (uvs2 && uvs2.length === length) newUvs2 = [];\n\n    for (var i = 0; i < length; i++) {\n      var id = faces[i]._id;\n      if (newUvs1) newUvs1.push(uvs1[id]);\n      if (newUvs2) newUvs2.push(uvs2[id]);\n    }\n\n    if (newUvs1) this.faceVertexUvs[0] = newUvs1;\n    if (newUvs2) this.faceVertexUvs[1] = newUvs2;\n  },\n  toJSON: function () {\n    var data = {\n      metadata: {\n        version: 4.5,\n        type: 'Geometry',\n        generator: 'Geometry.toJSON'\n      }\n    }; // standard Geometry serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n\n    if (this.parameters !== undefined) {\n      var parameters = this.parameters;\n\n      for (var key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n\n      return data;\n    }\n\n    var vertices = [];\n\n    for (var i = 0; i < this.vertices.length; i++) {\n      var vertex = this.vertices[i];\n      vertices.push(vertex.x, vertex.y, vertex.z);\n    }\n\n    var faces = [];\n    var normals = [];\n    var normalsHash = {};\n    var colors = [];\n    var colorsHash = {};\n    var uvs = [];\n    var uvsHash = {};\n\n    for (var i = 0; i < this.faces.length; i++) {\n      var face = this.faces[i];\n      var hasMaterial = true;\n      var hasFaceUv = false; // deprecated\n\n      var hasFaceVertexUv = this.faceVertexUvs[0][i] !== undefined;\n      var hasFaceNormal = face.normal.length() > 0;\n      var hasFaceVertexNormal = face.vertexNormals.length > 0;\n      var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n      var hasFaceVertexColor = face.vertexColors.length > 0;\n      var faceType = 0;\n      faceType = setBit(faceType, 0, 0); // isQuad\n\n      faceType = setBit(faceType, 1, hasMaterial);\n      faceType = setBit(faceType, 2, hasFaceUv);\n      faceType = setBit(faceType, 3, hasFaceVertexUv);\n      faceType = setBit(faceType, 4, hasFaceNormal);\n      faceType = setBit(faceType, 5, hasFaceVertexNormal);\n      faceType = setBit(faceType, 6, hasFaceColor);\n      faceType = setBit(faceType, 7, hasFaceVertexColor);\n      faces.push(faceType);\n      faces.push(face.a, face.b, face.c);\n      faces.push(face.materialIndex);\n\n      if (hasFaceVertexUv) {\n        var faceVertexUvs = this.faceVertexUvs[0][i];\n        faces.push(getUvIndex(faceVertexUvs[0]), getUvIndex(faceVertexUvs[1]), getUvIndex(faceVertexUvs[2]));\n      }\n\n      if (hasFaceNormal) {\n        faces.push(getNormalIndex(face.normal));\n      }\n\n      if (hasFaceVertexNormal) {\n        var vertexNormals = face.vertexNormals;\n        faces.push(getNormalIndex(vertexNormals[0]), getNormalIndex(vertexNormals[1]), getNormalIndex(vertexNormals[2]));\n      }\n\n      if (hasFaceColor) {\n        faces.push(getColorIndex(face.color));\n      }\n\n      if (hasFaceVertexColor) {\n        var vertexColors = face.vertexColors;\n        faces.push(getColorIndex(vertexColors[0]), getColorIndex(vertexColors[1]), getColorIndex(vertexColors[2]));\n      }\n    }\n\n    function setBit(value, position, enabled) {\n      return enabled ? value | 1 << position : value & ~(1 << position);\n    }\n\n    function getNormalIndex(normal) {\n      var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n      if (normalsHash[hash] !== undefined) {\n        return normalsHash[hash];\n      }\n\n      normalsHash[hash] = normals.length / 3;\n      normals.push(normal.x, normal.y, normal.z);\n      return normalsHash[hash];\n    }\n\n    function getColorIndex(color) {\n      var hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n      if (colorsHash[hash] !== undefined) {\n        return colorsHash[hash];\n      }\n\n      colorsHash[hash] = colors.length;\n      colors.push(color.getHex());\n      return colorsHash[hash];\n    }\n\n    function getUvIndex(uv) {\n      var hash = uv.x.toString() + uv.y.toString();\n\n      if (uvsHash[hash] !== undefined) {\n        return uvsHash[hash];\n      }\n\n      uvsHash[hash] = uvs.length / 2;\n      uvs.push(uv.x, uv.y);\n      return uvsHash[hash];\n    }\n\n    data.data = {};\n    data.data.vertices = vertices;\n    data.data.normals = normals;\n    if (colors.length > 0) data.data.colors = colors;\n    if (uvs.length > 0) data.data.uvs = [uvs]; // temporal backward compatibility\n\n    data.data.faces = faces;\n    return data;\n  },\n  clone: function () {\n    /*\n     // Handle primitives\n    \t var parameters = this.parameters;\n    \t if ( parameters !== undefined ) {\n    \t var values = [];\n    \t for ( var key in parameters ) {\n    \t values.push( parameters[ key ] );\n    \t }\n    \t var geometry = Object.create( this.constructor.prototype );\n     this.constructor.apply( geometry, values );\n     return geometry;\n    \t }\n    \t return new this.constructor().copy( this );\n     */\n    return new Geometry().copy(this);\n  },\n  copy: function (source) {\n    var i, il, j, jl, k, kl; // reset\n\n    this.vertices = [];\n    this.colors = [];\n    this.faces = [];\n    this.faceVertexUvs = [[]];\n    this.morphTargets = [];\n    this.morphNormals = [];\n    this.skinWeights = [];\n    this.skinIndices = [];\n    this.lineDistances = [];\n    this.boundingBox = null;\n    this.boundingSphere = null; // name\n\n    this.name = source.name; // vertices\n\n    var vertices = source.vertices;\n\n    for (i = 0, il = vertices.length; i < il; i++) {\n      this.vertices.push(vertices[i].clone());\n    } // colors\n\n\n    var colors = source.colors;\n\n    for (i = 0, il = colors.length; i < il; i++) {\n      this.colors.push(colors[i].clone());\n    } // faces\n\n\n    var faces = source.faces;\n\n    for (i = 0, il = faces.length; i < il; i++) {\n      this.faces.push(faces[i].clone());\n    } // face vertex uvs\n\n\n    for (i = 0, il = source.faceVertexUvs.length; i < il; i++) {\n      var faceVertexUvs = source.faceVertexUvs[i];\n\n      if (this.faceVertexUvs[i] === undefined) {\n        this.faceVertexUvs[i] = [];\n      }\n\n      for (j = 0, jl = faceVertexUvs.length; j < jl; j++) {\n        var uvs = faceVertexUvs[j],\n            uvsCopy = [];\n\n        for (k = 0, kl = uvs.length; k < kl; k++) {\n          var uv = uvs[k];\n          uvsCopy.push(uv.clone());\n        }\n\n        this.faceVertexUvs[i].push(uvsCopy);\n      }\n    } // morph targets\n\n\n    var morphTargets = source.morphTargets;\n\n    for (i = 0, il = morphTargets.length; i < il; i++) {\n      var morphTarget = {};\n      morphTarget.name = morphTargets[i].name; // vertices\n\n      if (morphTargets[i].vertices !== undefined) {\n        morphTarget.vertices = [];\n\n        for (j = 0, jl = morphTargets[i].vertices.length; j < jl; j++) {\n          morphTarget.vertices.push(morphTargets[i].vertices[j].clone());\n        }\n      } // normals\n\n\n      if (morphTargets[i].normals !== undefined) {\n        morphTarget.normals = [];\n\n        for (j = 0, jl = morphTargets[i].normals.length; j < jl; j++) {\n          morphTarget.normals.push(morphTargets[i].normals[j].clone());\n        }\n      }\n\n      this.morphTargets.push(morphTarget);\n    } // morph normals\n\n\n    var morphNormals = source.morphNormals;\n\n    for (i = 0, il = morphNormals.length; i < il; i++) {\n      var morphNormal = {}; // vertex normals\n\n      if (morphNormals[i].vertexNormals !== undefined) {\n        morphNormal.vertexNormals = [];\n\n        for (j = 0, jl = morphNormals[i].vertexNormals.length; j < jl; j++) {\n          var srcVertexNormal = morphNormals[i].vertexNormals[j];\n          var destVertexNormal = {};\n          destVertexNormal.a = srcVertexNormal.a.clone();\n          destVertexNormal.b = srcVertexNormal.b.clone();\n          destVertexNormal.c = srcVertexNormal.c.clone();\n          morphNormal.vertexNormals.push(destVertexNormal);\n        }\n      } // face normals\n\n\n      if (morphNormals[i].faceNormals !== undefined) {\n        morphNormal.faceNormals = [];\n\n        for (j = 0, jl = morphNormals[i].faceNormals.length; j < jl; j++) {\n          morphNormal.faceNormals.push(morphNormals[i].faceNormals[j].clone());\n        }\n      }\n\n      this.morphNormals.push(morphNormal);\n    } // skin weights\n\n\n    var skinWeights = source.skinWeights;\n\n    for (i = 0, il = skinWeights.length; i < il; i++) {\n      this.skinWeights.push(skinWeights[i].clone());\n    } // skin indices\n\n\n    var skinIndices = source.skinIndices;\n\n    for (i = 0, il = skinIndices.length; i < il; i++) {\n      this.skinIndices.push(skinIndices[i].clone());\n    } // line distances\n\n\n    var lineDistances = source.lineDistances;\n\n    for (i = 0, il = lineDistances.length; i < il; i++) {\n      this.lineDistances.push(lineDistances[i]);\n    } // bounding box\n\n\n    var boundingBox = source.boundingBox;\n\n    if (boundingBox !== null) {\n      this.boundingBox = boundingBox.clone();\n    } // bounding sphere\n\n\n    var boundingSphere = source.boundingSphere;\n\n    if (boundingSphere !== null) {\n      this.boundingSphere = boundingSphere.clone();\n    } // update flags\n\n\n    this.elementsNeedUpdate = source.elementsNeedUpdate;\n    this.verticesNeedUpdate = source.verticesNeedUpdate;\n    this.uvsNeedUpdate = source.uvsNeedUpdate;\n    this.normalsNeedUpdate = source.normalsNeedUpdate;\n    this.colorsNeedUpdate = source.colorsNeedUpdate;\n    this.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n    this.groupsNeedUpdate = source.groupsNeedUpdate;\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute(array, itemSize, normalized) {\n  if (Array.isArray(array)) {\n    throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n  }\n\n  this.uuid = _Math.generateUUID();\n  this.name = '';\n  this.array = array;\n  this.itemSize = itemSize;\n  this.count = array !== undefined ? array.length / itemSize : 0;\n  this.normalized = normalized === true;\n  this.dynamic = false;\n  this.updateRange = {\n    offset: 0,\n    count: -1\n  };\n\n  this.onUploadCallback = function () {};\n\n  this.version = 0;\n}\n\nObject.defineProperty(BufferAttribute.prototype, 'needsUpdate', {\n  set: function (value) {\n    if (value === true) this.version++;\n  }\n});\nObject.assign(BufferAttribute.prototype, {\n  isBufferAttribute: true,\n  setArray: function (array) {\n    if (Array.isArray(array)) {\n      throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n    }\n\n    this.count = array !== undefined ? array.length / this.itemSize : 0;\n    this.array = array;\n  },\n  setDynamic: function (value) {\n    this.dynamic = value;\n    return this;\n  },\n  copy: function (source) {\n    this.array = new source.array.constructor(source.array);\n    this.itemSize = source.itemSize;\n    this.count = source.count;\n    this.normalized = source.normalized;\n    this.dynamic = source.dynamic;\n    return this;\n  },\n  copyAt: function (index1, attribute, index2) {\n    index1 *= this.itemSize;\n    index2 *= attribute.itemSize;\n\n    for (var i = 0, l = this.itemSize; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n\n    return this;\n  },\n  copyArray: function (array) {\n    this.array.set(array);\n    return this;\n  },\n  copyColorsArray: function (colors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = colors.length; i < l; i++) {\n      var color = colors[i];\n\n      if (color === undefined) {\n        console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n        color = new Color();\n      }\n\n      array[offset++] = color.r;\n      array[offset++] = color.g;\n      array[offset++] = color.b;\n    }\n\n    return this;\n  },\n  copyIndicesArray: function (indices) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = indices.length; i < l; i++) {\n      var index = indices[i];\n      array[offset++] = index.a;\n      array[offset++] = index.b;\n      array[offset++] = index.c;\n    }\n\n    return this;\n  },\n  copyVector2sArray: function (vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n        vector = new Vector2();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n    }\n\n    return this;\n  },\n  copyVector3sArray: function (vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n        vector = new Vector3();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n      array[offset++] = vector.z;\n    }\n\n    return this;\n  },\n  copyVector4sArray: function (vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n        vector = new Vector4();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n      array[offset++] = vector.z;\n      array[offset++] = vector.w;\n    }\n\n    return this;\n  },\n  set: function (value, offset) {\n    if (offset === undefined) offset = 0;\n    this.array.set(value, offset);\n    return this;\n  },\n  getX: function (index) {\n    return this.array[index * this.itemSize];\n  },\n  setX: function (index, x) {\n    this.array[index * this.itemSize] = x;\n    return this;\n  },\n  getY: function (index) {\n    return this.array[index * this.itemSize + 1];\n  },\n  setY: function (index, y) {\n    this.array[index * this.itemSize + 1] = y;\n    return this;\n  },\n  getZ: function (index) {\n    return this.array[index * this.itemSize + 2];\n  },\n  setZ: function (index, z) {\n    this.array[index * this.itemSize + 2] = z;\n    return this;\n  },\n  getW: function (index) {\n    return this.array[index * this.itemSize + 3];\n  },\n  setW: function (index, w) {\n    this.array[index * this.itemSize + 3] = w;\n    return this;\n  },\n  setXY: function (index, x, y) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    return this;\n  },\n  setXYZ: function (index, x, y, z) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    return this;\n  },\n  setXYZW: function (index, x, y, z, w) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    this.array[index + 3] = w;\n    return this;\n  },\n  onUpload: function (callback) {\n    this.onUploadCallback = callback;\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this.array, this.itemSize).copy(this);\n  }\n}); //\n\nfunction Int8BufferAttribute(array, itemSize) {\n  BufferAttribute.call(this, new Int8Array(array), itemSize);\n}\n\nInt8BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\nfunction Uint8BufferAttribute(array, itemSize) {\n  BufferAttribute.call(this, new Uint8Array(array), itemSize);\n}\n\nUint8BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\nfunction Uint8ClampedBufferAttribute(array, itemSize) {\n  BufferAttribute.call(this, new Uint8ClampedArray(array), itemSize);\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create(BufferAttribute.prototype);\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\nfunction Int16BufferAttribute(array, itemSize) {\n  BufferAttribute.call(this, new Int16Array(array), itemSize);\n}\n\nInt16BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\nfunction Uint16BufferAttribute(array, itemSize) {\n  BufferAttribute.call(this, new Uint16Array(array), itemSize);\n}\n\nUint16BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\nfunction Int32BufferAttribute(array, itemSize) {\n  BufferAttribute.call(this, new Int32Array(array), itemSize);\n}\n\nInt32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\nfunction Uint32BufferAttribute(array, itemSize) {\n  BufferAttribute.call(this, new Uint32Array(array), itemSize);\n}\n\nUint32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\nfunction Float32BufferAttribute(array, itemSize) {\n  BufferAttribute.call(this, new Float32Array(array), itemSize);\n}\n\nFloat32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\nfunction Float64BufferAttribute(array, itemSize) {\n  BufferAttribute.call(this, new Float64Array(array), itemSize);\n}\n\nFloat64BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n  this.indices = [];\n  this.vertices = [];\n  this.normals = [];\n  this.colors = [];\n  this.uvs = [];\n  this.uvs2 = [];\n  this.groups = [];\n  this.morphTargets = {};\n  this.skinWeights = [];\n  this.skinIndices = []; // this.lineDistances = [];\n\n  this.boundingBox = null;\n  this.boundingSphere = null; // update flags\n\n  this.verticesNeedUpdate = false;\n  this.normalsNeedUpdate = false;\n  this.colorsNeedUpdate = false;\n  this.uvsNeedUpdate = false;\n  this.groupsNeedUpdate = false;\n}\n\nObject.assign(DirectGeometry.prototype, {\n  computeGroups: function (geometry) {\n    var group;\n    var groups = [];\n    var materialIndex = undefined;\n    var faces = geometry.faces;\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i]; // materials\n\n      if (face.materialIndex !== materialIndex) {\n        materialIndex = face.materialIndex;\n\n        if (group !== undefined) {\n          group.count = i * 3 - group.start;\n          groups.push(group);\n        }\n\n        group = {\n          start: i * 3,\n          materialIndex: materialIndex\n        };\n      }\n    }\n\n    if (group !== undefined) {\n      group.count = i * 3 - group.start;\n      groups.push(group);\n    }\n\n    this.groups = groups;\n  },\n  fromGeometry: function (geometry) {\n    var faces = geometry.faces;\n    var vertices = geometry.vertices;\n    var faceVertexUvs = geometry.faceVertexUvs;\n    var hasFaceVertexUv = faceVertexUvs[0] && faceVertexUvs[0].length > 0;\n    var hasFaceVertexUv2 = faceVertexUvs[1] && faceVertexUvs[1].length > 0; // morphs\n\n    var morphTargets = geometry.morphTargets;\n    var morphTargetsLength = morphTargets.length;\n    var morphTargetsPosition;\n\n    if (morphTargetsLength > 0) {\n      morphTargetsPosition = [];\n\n      for (var i = 0; i < morphTargetsLength; i++) {\n        morphTargetsPosition[i] = [];\n      }\n\n      this.morphTargets.position = morphTargetsPosition;\n    }\n\n    var morphNormals = geometry.morphNormals;\n    var morphNormalsLength = morphNormals.length;\n    var morphTargetsNormal;\n\n    if (morphNormalsLength > 0) {\n      morphTargetsNormal = [];\n\n      for (var i = 0; i < morphNormalsLength; i++) {\n        morphTargetsNormal[i] = [];\n      }\n\n      this.morphTargets.normal = morphTargetsNormal;\n    } // skins\n\n\n    var skinIndices = geometry.skinIndices;\n    var skinWeights = geometry.skinWeights;\n    var hasSkinIndices = skinIndices.length === vertices.length;\n    var hasSkinWeights = skinWeights.length === vertices.length; //\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i];\n      this.vertices.push(vertices[face.a], vertices[face.b], vertices[face.c]);\n      var vertexNormals = face.vertexNormals;\n\n      if (vertexNormals.length === 3) {\n        this.normals.push(vertexNormals[0], vertexNormals[1], vertexNormals[2]);\n      } else {\n        var normal = face.normal;\n        this.normals.push(normal, normal, normal);\n      }\n\n      var vertexColors = face.vertexColors;\n\n      if (vertexColors.length === 3) {\n        this.colors.push(vertexColors[0], vertexColors[1], vertexColors[2]);\n      } else {\n        var color = face.color;\n        this.colors.push(color, color, color);\n      }\n\n      if (hasFaceVertexUv === true) {\n        var vertexUvs = faceVertexUvs[0][i];\n\n        if (vertexUvs !== undefined) {\n          this.uvs.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n        } else {\n          console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i);\n          this.uvs.push(new Vector2(), new Vector2(), new Vector2());\n        }\n      }\n\n      if (hasFaceVertexUv2 === true) {\n        var vertexUvs = faceVertexUvs[1][i];\n\n        if (vertexUvs !== undefined) {\n          this.uvs2.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n        } else {\n          console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i);\n          this.uvs2.push(new Vector2(), new Vector2(), new Vector2());\n        }\n      } // morphs\n\n\n      for (var j = 0; j < morphTargetsLength; j++) {\n        var morphTarget = morphTargets[j].vertices;\n        morphTargetsPosition[j].push(morphTarget[face.a], morphTarget[face.b], morphTarget[face.c]);\n      }\n\n      for (var j = 0; j < morphNormalsLength; j++) {\n        var morphNormal = morphNormals[j].vertexNormals[i];\n        morphTargetsNormal[j].push(morphNormal.a, morphNormal.b, morphNormal.c);\n      } // skins\n\n\n      if (hasSkinIndices) {\n        this.skinIndices.push(skinIndices[face.a], skinIndices[face.b], skinIndices[face.c]);\n      }\n\n      if (hasSkinWeights) {\n        this.skinWeights.push(skinWeights[face.a], skinWeights[face.b], skinWeights[face.c]);\n      }\n    }\n\n    this.computeGroups(geometry);\n    this.verticesNeedUpdate = geometry.verticesNeedUpdate;\n    this.normalsNeedUpdate = geometry.normalsNeedUpdate;\n    this.colorsNeedUpdate = geometry.colorsNeedUpdate;\n    this.uvsNeedUpdate = geometry.uvsNeedUpdate;\n    this.groupsNeedUpdate = geometry.groupsNeedUpdate;\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax(array) {\n  if (array.length === 0) return -Infinity;\n  var max = array[0];\n\n  for (var i = 1, l = array.length; i < l; ++i) {\n    if (array[i] > max) max = array[i];\n  }\n\n  return max;\n}\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction BufferGeometry() {\n  Object.defineProperty(this, 'id', {\n    value: GeometryIdCount()\n  });\n  this.uuid = _Math.generateUUID();\n  this.name = '';\n  this.type = 'BufferGeometry';\n  this.index = null;\n  this.attributes = {};\n  this.morphAttributes = {};\n  this.groups = [];\n  this.boundingBox = null;\n  this.boundingSphere = null;\n  this.drawRange = {\n    start: 0,\n    count: Infinity\n  };\n}\n\nBufferGeometry.MaxIndex = 65535;\nObject.assign(BufferGeometry.prototype, EventDispatcher.prototype, {\n  isBufferGeometry: true,\n  getIndex: function () {\n    return this.index;\n  },\n  setIndex: function (index) {\n    if (Array.isArray(index)) {\n      this.index = new (arrayMax(index) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\n    } else {\n      this.index = index;\n    }\n  },\n  addAttribute: function (name, attribute) {\n    if (!(attribute && attribute.isBufferAttribute) && !(attribute && attribute.isInterleavedBufferAttribute)) {\n      console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n      this.addAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\n      return;\n    }\n\n    if (name === 'index') {\n      console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n      this.setIndex(attribute);\n      return;\n    }\n\n    this.attributes[name] = attribute;\n    return this;\n  },\n  getAttribute: function (name) {\n    return this.attributes[name];\n  },\n  removeAttribute: function (name) {\n    delete this.attributes[name];\n    return this;\n  },\n  addGroup: function (start, count, materialIndex) {\n    this.groups.push({\n      start: start,\n      count: count,\n      materialIndex: materialIndex !== undefined ? materialIndex : 0\n    });\n  },\n  clearGroups: function () {\n    this.groups = [];\n  },\n  setDrawRange: function (start, count) {\n    this.drawRange.start = start;\n    this.drawRange.count = count;\n  },\n  applyMatrix: function (matrix) {\n    var position = this.attributes.position;\n\n    if (position !== undefined) {\n      matrix.applyToBufferAttribute(position);\n      position.needsUpdate = true;\n    }\n\n    var normal = this.attributes.normal;\n\n    if (normal !== undefined) {\n      var normalMatrix = new Matrix3().getNormalMatrix(matrix);\n      normalMatrix.applyToBufferAttribute(normal);\n      normal.needsUpdate = true;\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    return this;\n  },\n  rotateX: function () {\n    // rotate geometry around world x-axis\n    var m1 = new Matrix4();\n    return function rotateX(angle) {\n      m1.makeRotationX(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateY: function () {\n    // rotate geometry around world y-axis\n    var m1 = new Matrix4();\n    return function rotateY(angle) {\n      m1.makeRotationY(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateZ: function () {\n    // rotate geometry around world z-axis\n    var m1 = new Matrix4();\n    return function rotateZ(angle) {\n      m1.makeRotationZ(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  translate: function () {\n    // translate geometry\n    var m1 = new Matrix4();\n    return function translate(x, y, z) {\n      m1.makeTranslation(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  scale: function () {\n    // scale geometry\n    var m1 = new Matrix4();\n    return function scale(x, y, z) {\n      m1.makeScale(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  lookAt: function () {\n    var obj = new Object3D();\n    return function lookAt(vector) {\n      obj.lookAt(vector);\n      obj.updateMatrix();\n      this.applyMatrix(obj.matrix);\n    };\n  }(),\n  center: function () {\n    this.computeBoundingBox();\n    var offset = this.boundingBox.getCenter().negate();\n    this.translate(offset.x, offset.y, offset.z);\n    return offset;\n  },\n  setFromObject: function (object) {\n    // console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n    var geometry = object.geometry;\n\n    if (object.isPoints || object.isLine) {\n      var positions = new Float32BufferAttribute(geometry.vertices.length * 3, 3);\n      var colors = new Float32BufferAttribute(geometry.colors.length * 3, 3);\n      this.addAttribute('position', positions.copyVector3sArray(geometry.vertices));\n      this.addAttribute('color', colors.copyColorsArray(geometry.colors));\n\n      if (geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length) {\n        var lineDistances = new Float32BufferAttribute(geometry.lineDistances.length, 1);\n        this.addAttribute('lineDistance', lineDistances.copyArray(geometry.lineDistances));\n      }\n\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n    } else if (object.isMesh) {\n      if (geometry && geometry.isGeometry) {\n        this.fromGeometry(geometry);\n      }\n    }\n\n    return this;\n  },\n  updateFromObject: function (object) {\n    var geometry = object.geometry;\n\n    if (object.isMesh) {\n      var direct = geometry.__directGeometry;\n\n      if (geometry.elementsNeedUpdate === true) {\n        direct = undefined;\n        geometry.elementsNeedUpdate = false;\n      }\n\n      if (direct === undefined) {\n        return this.fromGeometry(geometry);\n      }\n\n      direct.verticesNeedUpdate = geometry.verticesNeedUpdate;\n      direct.normalsNeedUpdate = geometry.normalsNeedUpdate;\n      direct.colorsNeedUpdate = geometry.colorsNeedUpdate;\n      direct.uvsNeedUpdate = geometry.uvsNeedUpdate;\n      direct.groupsNeedUpdate = geometry.groupsNeedUpdate;\n      geometry.verticesNeedUpdate = false;\n      geometry.normalsNeedUpdate = false;\n      geometry.colorsNeedUpdate = false;\n      geometry.uvsNeedUpdate = false;\n      geometry.groupsNeedUpdate = false;\n      geometry = direct;\n    }\n\n    var attribute;\n\n    if (geometry.verticesNeedUpdate === true) {\n      attribute = this.attributes.position;\n\n      if (attribute !== undefined) {\n        attribute.copyVector3sArray(geometry.vertices);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.verticesNeedUpdate = false;\n    }\n\n    if (geometry.normalsNeedUpdate === true) {\n      attribute = this.attributes.normal;\n\n      if (attribute !== undefined) {\n        attribute.copyVector3sArray(geometry.normals);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.normalsNeedUpdate = false;\n    }\n\n    if (geometry.colorsNeedUpdate === true) {\n      attribute = this.attributes.color;\n\n      if (attribute !== undefined) {\n        attribute.copyColorsArray(geometry.colors);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.colorsNeedUpdate = false;\n    }\n\n    if (geometry.uvsNeedUpdate) {\n      attribute = this.attributes.uv;\n\n      if (attribute !== undefined) {\n        attribute.copyVector2sArray(geometry.uvs);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.uvsNeedUpdate = false;\n    }\n\n    if (geometry.lineDistancesNeedUpdate) {\n      attribute = this.attributes.lineDistance;\n\n      if (attribute !== undefined) {\n        attribute.copyArray(geometry.lineDistances);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.lineDistancesNeedUpdate = false;\n    }\n\n    if (geometry.groupsNeedUpdate) {\n      geometry.computeGroups(object.geometry);\n      this.groups = geometry.groups;\n      geometry.groupsNeedUpdate = false;\n    }\n\n    return this;\n  },\n  fromGeometry: function (geometry) {\n    geometry.__directGeometry = new DirectGeometry().fromGeometry(geometry);\n    return this.fromDirectGeometry(geometry.__directGeometry);\n  },\n  fromDirectGeometry: function (geometry) {\n    var positions = new Float32Array(geometry.vertices.length * 3);\n    this.addAttribute('position', new BufferAttribute(positions, 3).copyVector3sArray(geometry.vertices));\n\n    if (geometry.normals.length > 0) {\n      var normals = new Float32Array(geometry.normals.length * 3);\n      this.addAttribute('normal', new BufferAttribute(normals, 3).copyVector3sArray(geometry.normals));\n    }\n\n    if (geometry.colors.length > 0) {\n      var colors = new Float32Array(geometry.colors.length * 3);\n      this.addAttribute('color', new BufferAttribute(colors, 3).copyColorsArray(geometry.colors));\n    }\n\n    if (geometry.uvs.length > 0) {\n      var uvs = new Float32Array(geometry.uvs.length * 2);\n      this.addAttribute('uv', new BufferAttribute(uvs, 2).copyVector2sArray(geometry.uvs));\n    }\n\n    if (geometry.uvs2.length > 0) {\n      var uvs2 = new Float32Array(geometry.uvs2.length * 2);\n      this.addAttribute('uv2', new BufferAttribute(uvs2, 2).copyVector2sArray(geometry.uvs2));\n    }\n\n    if (geometry.indices.length > 0) {\n      var TypeArray = arrayMax(geometry.indices) > 65535 ? Uint32Array : Uint16Array;\n      var indices = new TypeArray(geometry.indices.length * 3);\n      this.setIndex(new BufferAttribute(indices, 1).copyIndicesArray(geometry.indices));\n    } // groups\n\n\n    this.groups = geometry.groups; // morphs\n\n    for (var name in geometry.morphTargets) {\n      var array = [];\n      var morphTargets = geometry.morphTargets[name];\n\n      for (var i = 0, l = morphTargets.length; i < l; i++) {\n        var morphTarget = morphTargets[i];\n        var attribute = new Float32BufferAttribute(morphTarget.length * 3, 3);\n        array.push(attribute.copyVector3sArray(morphTarget));\n      }\n\n      this.morphAttributes[name] = array;\n    } // skinning\n\n\n    if (geometry.skinIndices.length > 0) {\n      var skinIndices = new Float32BufferAttribute(geometry.skinIndices.length * 4, 4);\n      this.addAttribute('skinIndex', skinIndices.copyVector4sArray(geometry.skinIndices));\n    }\n\n    if (geometry.skinWeights.length > 0) {\n      var skinWeights = new Float32BufferAttribute(geometry.skinWeights.length * 4, 4);\n      this.addAttribute('skinWeight', skinWeights.copyVector4sArray(geometry.skinWeights));\n    } //\n\n\n    if (geometry.boundingSphere !== null) {\n      this.boundingSphere = geometry.boundingSphere.clone();\n    }\n\n    if (geometry.boundingBox !== null) {\n      this.boundingBox = geometry.boundingBox.clone();\n    }\n\n    return this;\n  },\n  computeBoundingBox: function () {\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3();\n    }\n\n    var position = this.attributes.position;\n\n    if (position !== undefined) {\n      this.boundingBox.setFromBufferAttribute(position);\n    } else {\n      this.boundingBox.makeEmpty();\n    }\n\n    if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n      console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n    }\n  },\n  computeBoundingSphere: function () {\n    var box = new Box3();\n    var vector = new Vector3();\n    return function computeBoundingSphere() {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new Sphere();\n      }\n\n      var position = this.attributes.position;\n\n      if (position) {\n        var center = this.boundingSphere.center;\n        box.setFromBufferAttribute(position);\n        box.getCenter(center); // hoping to find a boundingSphere with a radius smaller than the\n        // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n        var maxRadiusSq = 0;\n\n        for (var i = 0, il = position.count; i < il; i++) {\n          vector.x = position.getX(i);\n          vector.y = position.getY(i);\n          vector.z = position.getZ(i);\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(vector));\n        }\n\n        this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n        if (isNaN(this.boundingSphere.radius)) {\n          console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n        }\n      }\n    };\n  }(),\n  computeFaceNormals: function () {// backwards compatibility\n  },\n  computeVertexNormals: function () {\n    var index = this.index;\n    var attributes = this.attributes;\n    var groups = this.groups;\n\n    if (attributes.position) {\n      var positions = attributes.position.array;\n\n      if (attributes.normal === undefined) {\n        this.addAttribute('normal', new BufferAttribute(new Float32Array(positions.length), 3));\n      } else {\n        // reset existing normals to zero\n        var array = attributes.normal.array;\n\n        for (var i = 0, il = array.length; i < il; i++) {\n          array[i] = 0;\n        }\n      }\n\n      var normals = attributes.normal.array;\n      var vA, vB, vC;\n      var pA = new Vector3(),\n          pB = new Vector3(),\n          pC = new Vector3();\n      var cb = new Vector3(),\n          ab = new Vector3(); // indexed elements\n\n      if (index) {\n        var indices = index.array;\n\n        if (groups.length === 0) {\n          this.addGroup(0, indices.length);\n        }\n\n        for (var j = 0, jl = groups.length; j < jl; ++j) {\n          var group = groups[j];\n          var start = group.start;\n          var count = group.count;\n\n          for (var i = start, il = start + count; i < il; i += 3) {\n            vA = indices[i + 0] * 3;\n            vB = indices[i + 1] * 3;\n            vC = indices[i + 2] * 3;\n            pA.fromArray(positions, vA);\n            pB.fromArray(positions, vB);\n            pC.fromArray(positions, vC);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normals[vA] += cb.x;\n            normals[vA + 1] += cb.y;\n            normals[vA + 2] += cb.z;\n            normals[vB] += cb.x;\n            normals[vB + 1] += cb.y;\n            normals[vB + 2] += cb.z;\n            normals[vC] += cb.x;\n            normals[vC + 1] += cb.y;\n            normals[vC + 2] += cb.z;\n          }\n        }\n      } else {\n        // non-indexed elements (unconnected triangle soup)\n        for (var i = 0, il = positions.length; i < il; i += 9) {\n          pA.fromArray(positions, i);\n          pB.fromArray(positions, i + 3);\n          pC.fromArray(positions, i + 6);\n          cb.subVectors(pC, pB);\n          ab.subVectors(pA, pB);\n          cb.cross(ab);\n          normals[i] = cb.x;\n          normals[i + 1] = cb.y;\n          normals[i + 2] = cb.z;\n          normals[i + 3] = cb.x;\n          normals[i + 4] = cb.y;\n          normals[i + 5] = cb.z;\n          normals[i + 6] = cb.x;\n          normals[i + 7] = cb.y;\n          normals[i + 8] = cb.z;\n        }\n      }\n\n      this.normalizeNormals();\n      attributes.normal.needsUpdate = true;\n    }\n  },\n  merge: function (geometry, offset) {\n    if (!(geometry && geometry.isBufferGeometry)) {\n      console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n      return;\n    }\n\n    if (offset === undefined) offset = 0;\n    var attributes = this.attributes;\n\n    for (var key in attributes) {\n      if (geometry.attributes[key] === undefined) continue;\n      var attribute1 = attributes[key];\n      var attributeArray1 = attribute1.array;\n      var attribute2 = geometry.attributes[key];\n      var attributeArray2 = attribute2.array;\n      var attributeSize = attribute2.itemSize;\n\n      for (var i = 0, j = attributeSize * offset; i < attributeArray2.length; i++, j++) {\n        attributeArray1[j] = attributeArray2[i];\n      }\n    }\n\n    return this;\n  },\n  normalizeNormals: function () {\n    var vector = new Vector3();\n    return function normalizeNormals() {\n      var normals = this.attributes.normal;\n\n      for (var i = 0, il = normals.count; i < il; i++) {\n        vector.x = normals.getX(i);\n        vector.y = normals.getY(i);\n        vector.z = normals.getZ(i);\n        vector.normalize();\n        normals.setXYZ(i, vector.x, vector.y, vector.z);\n      }\n    };\n  }(),\n  toNonIndexed: function () {\n    if (this.index === null) {\n      console.warn('THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.');\n      return this;\n    }\n\n    var geometry2 = new BufferGeometry();\n    var indices = this.index.array;\n    var attributes = this.attributes;\n\n    for (var name in attributes) {\n      var attribute = attributes[name];\n      var array = attribute.array;\n      var itemSize = attribute.itemSize;\n      var array2 = new array.constructor(indices.length * itemSize);\n      var index = 0,\n          index2 = 0;\n\n      for (var i = 0, l = indices.length; i < l; i++) {\n        index = indices[i] * itemSize;\n\n        for (var j = 0; j < itemSize; j++) {\n          array2[index2++] = array[index++];\n        }\n      }\n\n      geometry2.addAttribute(name, new BufferAttribute(array2, itemSize));\n    }\n\n    return geometry2;\n  },\n  toJSON: function () {\n    var data = {\n      metadata: {\n        version: 4.5,\n        type: 'BufferGeometry',\n        generator: 'BufferGeometry.toJSON'\n      }\n    }; // standard BufferGeometry serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n\n    if (this.parameters !== undefined) {\n      var parameters = this.parameters;\n\n      for (var key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n\n      return data;\n    }\n\n    data.data = {\n      attributes: {}\n    };\n    var index = this.index;\n\n    if (index !== null) {\n      var array = Array.prototype.slice.call(index.array);\n      data.data.index = {\n        type: index.array.constructor.name,\n        array: array\n      };\n    }\n\n    var attributes = this.attributes;\n\n    for (var key in attributes) {\n      var attribute = attributes[key];\n      var array = Array.prototype.slice.call(attribute.array);\n      data.data.attributes[key] = {\n        itemSize: attribute.itemSize,\n        type: attribute.array.constructor.name,\n        array: array,\n        normalized: attribute.normalized\n      };\n    }\n\n    var groups = this.groups;\n\n    if (groups.length > 0) {\n      data.data.groups = JSON.parse(JSON.stringify(groups));\n    }\n\n    var boundingSphere = this.boundingSphere;\n\n    if (boundingSphere !== null) {\n      data.data.boundingSphere = {\n        center: boundingSphere.center.toArray(),\n        radius: boundingSphere.radius\n      };\n    }\n\n    return data;\n  },\n  clone: function () {\n    /*\n     // Handle primitives\n    \t var parameters = this.parameters;\n    \t if ( parameters !== undefined ) {\n    \t var values = [];\n    \t for ( var key in parameters ) {\n    \t values.push( parameters[ key ] );\n    \t }\n    \t var geometry = Object.create( this.constructor.prototype );\n     this.constructor.apply( geometry, values );\n     return geometry;\n    \t }\n    \t return new this.constructor().copy( this );\n     */\n    return new BufferGeometry().copy(this);\n  },\n  copy: function (source) {\n    var name, i, l; // reset\n\n    this.index = null;\n    this.attributes = {};\n    this.morphAttributes = {};\n    this.groups = [];\n    this.boundingBox = null;\n    this.boundingSphere = null; // name\n\n    this.name = source.name; // index\n\n    var index = source.index;\n\n    if (index !== null) {\n      this.setIndex(index.clone());\n    } // attributes\n\n\n    var attributes = source.attributes;\n\n    for (name in attributes) {\n      var attribute = attributes[name];\n      this.addAttribute(name, attribute.clone());\n    } // morph attributes\n\n\n    var morphAttributes = source.morphAttributes;\n\n    for (name in morphAttributes) {\n      var array = [];\n      var morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n      for (i = 0, l = morphAttribute.length; i < l; i++) {\n        array.push(morphAttribute[i].clone());\n      }\n\n      this.morphAttributes[name] = array;\n    } // groups\n\n\n    var groups = source.groups;\n\n    for (i = 0, l = groups.length; i < l; i++) {\n      var group = groups[i];\n      this.addGroup(group.start, group.count, group.materialIndex);\n    } // bounding box\n\n\n    var boundingBox = source.boundingBox;\n\n    if (boundingBox !== null) {\n      this.boundingBox = boundingBox.clone();\n    } // bounding sphere\n\n\n    var boundingSphere = source.boundingSphere;\n\n    if (boundingSphere !== null) {\n      this.boundingSphere = boundingSphere.clone();\n    } // draw range\n\n\n    this.drawRange.start = source.drawRange.start;\n    this.drawRange.count = source.drawRange.count;\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n// BoxGeometry\n\nfunction BoxGeometry(width, height, depth, widthSegments, heightSegments, depthSegments) {\n  Geometry.call(this);\n  this.type = 'BoxGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    depth: depth,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    depthSegments: depthSegments\n  };\n  this.fromBufferGeometry(new BoxBufferGeometry(width, height, depth, widthSegments, heightSegments, depthSegments));\n  this.mergeVertices();\n}\n\nBoxGeometry.prototype = Object.create(Geometry.prototype);\nBoxGeometry.prototype.constructor = BoxGeometry; // BoxBufferGeometry\n\nfunction BoxBufferGeometry(width, height, depth, widthSegments, heightSegments, depthSegments) {\n  BufferGeometry.call(this);\n  this.type = 'BoxBufferGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    depth: depth,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    depthSegments: depthSegments\n  };\n  var scope = this; // segments\n\n  widthSegments = Math.floor(widthSegments) || 1;\n  heightSegments = Math.floor(heightSegments) || 1;\n  depthSegments = Math.floor(depthSegments) || 1; // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = []; // helper variables\n\n  var numberOfVertices = 0;\n  var groupStart = 0; // build each side of the box geometry\n\n  buildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n  buildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n  buildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n  buildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n  buildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n  buildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n  // build geometry\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n  function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n    var segmentWidth = width / gridX;\n    var segmentHeight = height / gridY;\n    var widthHalf = width / 2;\n    var heightHalf = height / 2;\n    var depthHalf = depth / 2;\n    var gridX1 = gridX + 1;\n    var gridY1 = gridY + 1;\n    var vertexCounter = 0;\n    var groupCount = 0;\n    var ix, iy;\n    var vector = new Vector3(); // generate vertices, normals and uvs\n\n    for (iy = 0; iy < gridY1; iy++) {\n      var y = iy * segmentHeight - heightHalf;\n\n      for (ix = 0; ix < gridX1; ix++) {\n        var x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n        vector[u] = x * udir;\n        vector[v] = y * vdir;\n        vector[w] = depthHalf; // now apply vector to vertex buffer\n\n        vertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\n\n        vector[u] = 0;\n        vector[v] = 0;\n        vector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n        normals.push(vector.x, vector.y, vector.z); // uvs\n\n        uvs.push(ix / gridX);\n        uvs.push(1 - iy / gridY); // counters\n\n        vertexCounter += 1;\n      }\n    } // indices\n    // 1. you need three indices to draw a single face\n    // 2. a single segment consists of two faces\n    // 3. so we need to generate six (2*3) indices per segment\n\n\n    for (iy = 0; iy < gridY; iy++) {\n      for (ix = 0; ix < gridX; ix++) {\n        var a = numberOfVertices + ix + gridX1 * iy;\n        var b = numberOfVertices + ix + gridX1 * (iy + 1);\n        var c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n        var d = numberOfVertices + (ix + 1) + gridX1 * iy; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d); // increase counter\n\n        groupCount += 6;\n      }\n    } // add a group to the geometry. this will ensure multi material support\n\n\n    scope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n    groupStart += groupCount; // update total number of vertices\n\n    numberOfVertices += vertexCounter;\n  }\n}\n\nBoxBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n// PlaneGeometry\n\nfunction PlaneGeometry(width, height, widthSegments, heightSegments) {\n  Geometry.call(this);\n  this.type = 'PlaneGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments\n  };\n  this.fromBufferGeometry(new PlaneBufferGeometry(width, height, widthSegments, heightSegments));\n  this.mergeVertices();\n}\n\nPlaneGeometry.prototype = Object.create(Geometry.prototype);\nPlaneGeometry.prototype.constructor = PlaneGeometry; // PlaneBufferGeometry\n\nfunction PlaneBufferGeometry(width, height, widthSegments, heightSegments) {\n  BufferGeometry.call(this);\n  this.type = 'PlaneBufferGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments\n  };\n  var width_half = width / 2;\n  var height_half = height / 2;\n  var gridX = Math.floor(widthSegments) || 1;\n  var gridY = Math.floor(heightSegments) || 1;\n  var gridX1 = gridX + 1;\n  var gridY1 = gridY + 1;\n  var segment_width = width / gridX;\n  var segment_height = height / gridY;\n  var ix, iy; // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = []; // generate vertices, normals and uvs\n\n  for (iy = 0; iy < gridY1; iy++) {\n    var y = iy * segment_height - height_half;\n\n    for (ix = 0; ix < gridX1; ix++) {\n      var x = ix * segment_width - width_half;\n      vertices.push(x, -y, 0);\n      normals.push(0, 0, 1);\n      uvs.push(ix / gridX);\n      uvs.push(1 - iy / gridY);\n    }\n  } // indices\n\n\n  for (iy = 0; iy < gridY; iy++) {\n    for (ix = 0; ix < gridX; ix++) {\n      var a = ix + gridX1 * iy;\n      var b = ix + gridX1 * (iy + 1);\n      var c = ix + 1 + gridX1 * (iy + 1);\n      var d = ix + 1 + gridX1 * iy; // faces\n\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n}\n\nPlaneBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial(parameters) {\n  Material.call(this);\n  this.type = 'MeshBasicMaterial';\n  this.color = new Color(0xffffff); // emissive\n\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.skinning = false;\n  this.morphTargets = false;\n  this.lights = false;\n  this.setValues(parameters);\n}\n\nMeshBasicMaterial.prototype = Object.create(Material.prototype);\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  return this;\n};\n/**\n * @author bhouston / http://clara.io\n */\n\n\nfunction Ray(origin, direction) {\n  this.origin = origin !== undefined ? origin : new Vector3();\n  this.direction = direction !== undefined ? direction : new Vector3();\n}\n\nObject.assign(Ray.prototype, {\n  set: function (origin, direction) {\n    this.origin.copy(origin);\n    this.direction.copy(direction);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (ray) {\n    this.origin.copy(ray.origin);\n    this.direction.copy(ray.direction);\n    return this;\n  },\n  at: function (t, optionalTarget) {\n    var result = optionalTarget || new Vector3();\n    return result.copy(this.direction).multiplyScalar(t).add(this.origin);\n  },\n  lookAt: function (v) {\n    this.direction.copy(v).sub(this.origin).normalize();\n    return this;\n  },\n  recast: function () {\n    var v1 = new Vector3();\n    return function recast(t) {\n      this.origin.copy(this.at(t, v1));\n      return this;\n    };\n  }(),\n  closestPointToPoint: function (point, optionalTarget) {\n    var result = optionalTarget || new Vector3();\n    result.subVectors(point, this.origin);\n    var directionDistance = result.dot(this.direction);\n\n    if (directionDistance < 0) {\n      return result.copy(this.origin);\n    }\n\n    return result.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n  },\n  distanceToPoint: function (point) {\n    return Math.sqrt(this.distanceSqToPoint(point));\n  },\n  distanceSqToPoint: function () {\n    var v1 = new Vector3();\n    return function distanceSqToPoint(point) {\n      var directionDistance = v1.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n      if (directionDistance < 0) {\n        return this.origin.distanceToSquared(point);\n      }\n\n      v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n      return v1.distanceToSquared(point);\n    };\n  }(),\n  distanceSqToSegment: function () {\n    var segCenter = new Vector3();\n    var segDir = new Vector3();\n    var diff = new Vector3();\n    return function distanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n      // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n      // It returns the min distance between the ray and the segment\n      // defined by v0 and v1\n      // It can also set two optional targets :\n      // - The closest point on the ray\n      // - The closest point on the segment\n      segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n      segDir.copy(v1).sub(v0).normalize();\n      diff.copy(this.origin).sub(segCenter);\n      var segExtent = v0.distanceTo(v1) * 0.5;\n      var a01 = -this.direction.dot(segDir);\n      var b0 = diff.dot(this.direction);\n      var b1 = -diff.dot(segDir);\n      var c = diff.lengthSq();\n      var det = Math.abs(1 - a01 * a01);\n      var s0, s1, sqrDist, extDet;\n\n      if (det > 0) {\n        // The ray and segment are not parallel.\n        s0 = a01 * b1 - b0;\n        s1 = a01 * b0 - b1;\n        extDet = segExtent * det;\n\n        if (s0 >= 0) {\n          if (s1 >= -extDet) {\n            if (s1 <= extDet) {\n              // region 0\n              // Minimum at interior points of ray and segment.\n              var invDet = 1 / det;\n              s0 *= invDet;\n              s1 *= invDet;\n              sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n            } else {\n              // region 1\n              s1 = segExtent;\n              s0 = Math.max(0, -(a01 * s1 + b0));\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          } else {\n            // region 5\n            s1 = -segExtent;\n            s0 = Math.max(0, -(a01 * s1 + b0));\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        } else {\n          if (s1 <= -extDet) {\n            // region 4\n            s0 = Math.max(0, -(-a01 * segExtent + b0));\n            s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          } else if (s1 <= extDet) {\n            // region 3\n            s0 = 0;\n            s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = s1 * (s1 + 2 * b1) + c;\n          } else {\n            // region 2\n            s0 = Math.max(0, -(a01 * segExtent + b0));\n            s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        }\n      } else {\n        // Ray and segment are parallel.\n        s1 = a01 > 0 ? -segExtent : segExtent;\n        s0 = Math.max(0, -(a01 * s1 + b0));\n        sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n      }\n\n      if (optionalPointOnRay) {\n        optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n      }\n\n      if (optionalPointOnSegment) {\n        optionalPointOnSegment.copy(segDir).multiplyScalar(s1).add(segCenter);\n      }\n\n      return sqrDist;\n    };\n  }(),\n  intersectSphere: function () {\n    var v1 = new Vector3();\n    return function intersectSphere(sphere, optionalTarget) {\n      v1.subVectors(sphere.center, this.origin);\n      var tca = v1.dot(this.direction);\n      var d2 = v1.dot(v1) - tca * tca;\n      var radius2 = sphere.radius * sphere.radius;\n      if (d2 > radius2) return null;\n      var thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n      var t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n      var t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n      if (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n      // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n      // in order to always return an intersect point that is in front of the ray.\n\n      if (t0 < 0) return this.at(t1, optionalTarget); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n      return this.at(t0, optionalTarget);\n    };\n  }(),\n  intersectsSphere: function (sphere) {\n    return this.distanceToPoint(sphere.center) <= sphere.radius;\n  },\n  distanceToPlane: function (plane) {\n    var denominator = plane.normal.dot(this.direction);\n\n    if (denominator === 0) {\n      // line is coplanar, return origin\n      if (plane.distanceToPoint(this.origin) === 0) {\n        return 0;\n      } // Null is preferable to undefined since undefined means.... it is undefined\n\n\n      return null;\n    }\n\n    var t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n    return t >= 0 ? t : null;\n  },\n  intersectPlane: function (plane, optionalTarget) {\n    var t = this.distanceToPlane(plane);\n\n    if (t === null) {\n      return null;\n    }\n\n    return this.at(t, optionalTarget);\n  },\n  intersectsPlane: function (plane) {\n    // check if the ray lies on the plane first\n    var distToPoint = plane.distanceToPoint(this.origin);\n\n    if (distToPoint === 0) {\n      return true;\n    }\n\n    var denominator = plane.normal.dot(this.direction);\n\n    if (denominator * distToPoint < 0) {\n      return true;\n    } // ray origin is behind the plane (and is pointing behind it)\n\n\n    return false;\n  },\n  intersectBox: function (box, optionalTarget) {\n    var tmin, tmax, tymin, tymax, tzmin, tzmax;\n    var invdirx = 1 / this.direction.x,\n        invdiry = 1 / this.direction.y,\n        invdirz = 1 / this.direction.z;\n    var origin = this.origin;\n\n    if (invdirx >= 0) {\n      tmin = (box.min.x - origin.x) * invdirx;\n      tmax = (box.max.x - origin.x) * invdirx;\n    } else {\n      tmin = (box.max.x - origin.x) * invdirx;\n      tmax = (box.min.x - origin.x) * invdirx;\n    }\n\n    if (invdiry >= 0) {\n      tymin = (box.min.y - origin.y) * invdiry;\n      tymax = (box.max.y - origin.y) * invdiry;\n    } else {\n      tymin = (box.max.y - origin.y) * invdiry;\n      tymax = (box.min.y - origin.y) * invdiry;\n    }\n\n    if (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n    // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n    if (tymin > tmin || tmin !== tmin) tmin = tymin;\n    if (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n    if (invdirz >= 0) {\n      tzmin = (box.min.z - origin.z) * invdirz;\n      tzmax = (box.max.z - origin.z) * invdirz;\n    } else {\n      tzmin = (box.max.z - origin.z) * invdirz;\n      tzmax = (box.min.z - origin.z) * invdirz;\n    }\n\n    if (tmin > tzmax || tzmin > tmax) return null;\n    if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n    if (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n    if (tmax < 0) return null;\n    return this.at(tmin >= 0 ? tmin : tmax, optionalTarget);\n  },\n  intersectsBox: function () {\n    var v = new Vector3();\n    return function intersectsBox(box) {\n      return this.intersectBox(box, v) !== null;\n    };\n  }(),\n  intersectTriangle: function () {\n    // Compute the offset origin, edges, and normal.\n    var diff = new Vector3();\n    var edge1 = new Vector3();\n    var edge2 = new Vector3();\n    var normal = new Vector3();\n    return function intersectTriangle(a, b, c, backfaceCulling, optionalTarget) {\n      // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n      edge1.subVectors(b, a);\n      edge2.subVectors(c, a);\n      normal.crossVectors(edge1, edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n      // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n      //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n      //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n      //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n      var DdN = this.direction.dot(normal);\n      var sign;\n\n      if (DdN > 0) {\n        if (backfaceCulling) return null;\n        sign = 1;\n      } else if (DdN < 0) {\n        sign = -1;\n        DdN = -DdN;\n      } else {\n        return null;\n      }\n\n      diff.subVectors(this.origin, a);\n      var DdQxE2 = sign * this.direction.dot(edge2.crossVectors(diff, edge2)); // b1 < 0, no intersection\n\n      if (DdQxE2 < 0) {\n        return null;\n      }\n\n      var DdE1xQ = sign * this.direction.dot(edge1.cross(diff)); // b2 < 0, no intersection\n\n      if (DdE1xQ < 0) {\n        return null;\n      } // b1+b2 > 1, no intersection\n\n\n      if (DdQxE2 + DdE1xQ > DdN) {\n        return null;\n      } // Line intersects triangle, check if ray does.\n\n\n      var QdN = -sign * diff.dot(normal); // t < 0, no intersection\n\n      if (QdN < 0) {\n        return null;\n      } // Ray intersects triangle.\n\n\n      return this.at(QdN / DdN, optionalTarget);\n    };\n  }(),\n  applyMatrix4: function (matrix4) {\n    this.origin.applyMatrix4(matrix4);\n    this.direction.transformDirection(matrix4);\n    return this;\n  },\n  equals: function (ray) {\n    return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n  }\n});\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3(start, end) {\n  this.start = start !== undefined ? start : new Vector3();\n  this.end = end !== undefined ? end : new Vector3();\n}\n\nObject.assign(Line3.prototype, {\n  set: function (start, end) {\n    this.start.copy(start);\n    this.end.copy(end);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (line) {\n    this.start.copy(line.start);\n    this.end.copy(line.end);\n    return this;\n  },\n  getCenter: function (optionalTarget) {\n    var result = optionalTarget || new Vector3();\n    return result.addVectors(this.start, this.end).multiplyScalar(0.5);\n  },\n  delta: function (optionalTarget) {\n    var result = optionalTarget || new Vector3();\n    return result.subVectors(this.end, this.start);\n  },\n  distanceSq: function () {\n    return this.start.distanceToSquared(this.end);\n  },\n  distance: function () {\n    return this.start.distanceTo(this.end);\n  },\n  at: function (t, optionalTarget) {\n    var result = optionalTarget || new Vector3();\n    return this.delta(result).multiplyScalar(t).add(this.start);\n  },\n  closestPointToPointParameter: function () {\n    var startP = new Vector3();\n    var startEnd = new Vector3();\n    return function closestPointToPointParameter(point, clampToLine) {\n      startP.subVectors(point, this.start);\n      startEnd.subVectors(this.end, this.start);\n      var startEnd2 = startEnd.dot(startEnd);\n      var startEnd_startP = startEnd.dot(startP);\n      var t = startEnd_startP / startEnd2;\n\n      if (clampToLine) {\n        t = _Math.clamp(t, 0, 1);\n      }\n\n      return t;\n    };\n  }(),\n  closestPointToPoint: function (point, clampToLine, optionalTarget) {\n    var t = this.closestPointToPointParameter(point, clampToLine);\n    var result = optionalTarget || new Vector3();\n    return this.delta(result).multiplyScalar(t).add(this.start);\n  },\n  applyMatrix4: function (matrix) {\n    this.start.applyMatrix4(matrix);\n    this.end.applyMatrix4(matrix);\n    return this;\n  },\n  equals: function (line) {\n    return line.start.equals(this.start) && line.end.equals(this.end);\n  }\n});\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle(a, b, c) {\n  this.a = a !== undefined ? a : new Vector3();\n  this.b = b !== undefined ? b : new Vector3();\n  this.c = c !== undefined ? c : new Vector3();\n}\n\nObject.assign(Triangle, {\n  normal: function () {\n    var v0 = new Vector3();\n    return function normal(a, b, c, optionalTarget) {\n      var result = optionalTarget || new Vector3();\n      result.subVectors(c, b);\n      v0.subVectors(a, b);\n      result.cross(v0);\n      var resultLengthSq = result.lengthSq();\n\n      if (resultLengthSq > 0) {\n        return result.multiplyScalar(1 / Math.sqrt(resultLengthSq));\n      }\n\n      return result.set(0, 0, 0);\n    };\n  }(),\n  // static/instance method to calculate barycentric coordinates\n  // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n  barycoordFromPoint: function () {\n    var v0 = new Vector3();\n    var v1 = new Vector3();\n    var v2 = new Vector3();\n    return function barycoordFromPoint(point, a, b, c, optionalTarget) {\n      v0.subVectors(c, a);\n      v1.subVectors(b, a);\n      v2.subVectors(point, a);\n      var dot00 = v0.dot(v0);\n      var dot01 = v0.dot(v1);\n      var dot02 = v0.dot(v2);\n      var dot11 = v1.dot(v1);\n      var dot12 = v1.dot(v2);\n      var denom = dot00 * dot11 - dot01 * dot01;\n      var result = optionalTarget || new Vector3(); // collinear or singular triangle\n\n      if (denom === 0) {\n        // arbitrary location outside of triangle?\n        // not sure if this is the best idea, maybe should be returning undefined\n        return result.set(-2, -1, -1);\n      }\n\n      var invDenom = 1 / denom;\n      var u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n      var v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n      return result.set(1 - u - v, v, u);\n    };\n  }(),\n  containsPoint: function () {\n    var v1 = new Vector3();\n    return function containsPoint(point, a, b, c) {\n      var result = Triangle.barycoordFromPoint(point, a, b, c, v1);\n      return result.x >= 0 && result.y >= 0 && result.x + result.y <= 1;\n    };\n  }()\n});\nObject.assign(Triangle.prototype, {\n  set: function (a, b, c) {\n    this.a.copy(a);\n    this.b.copy(b);\n    this.c.copy(c);\n    return this;\n  },\n  setFromPointsAndIndices: function (points, i0, i1, i2) {\n    this.a.copy(points[i0]);\n    this.b.copy(points[i1]);\n    this.c.copy(points[i2]);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (triangle) {\n    this.a.copy(triangle.a);\n    this.b.copy(triangle.b);\n    this.c.copy(triangle.c);\n    return this;\n  },\n  area: function () {\n    var v0 = new Vector3();\n    var v1 = new Vector3();\n    return function area() {\n      v0.subVectors(this.c, this.b);\n      v1.subVectors(this.a, this.b);\n      return v0.cross(v1).length() * 0.5;\n    };\n  }(),\n  midpoint: function (optionalTarget) {\n    var result = optionalTarget || new Vector3();\n    return result.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n  },\n  normal: function (optionalTarget) {\n    return Triangle.normal(this.a, this.b, this.c, optionalTarget);\n  },\n  plane: function (optionalTarget) {\n    var result = optionalTarget || new Plane();\n    return result.setFromCoplanarPoints(this.a, this.b, this.c);\n  },\n  barycoordFromPoint: function (point, optionalTarget) {\n    return Triangle.barycoordFromPoint(point, this.a, this.b, this.c, optionalTarget);\n  },\n  containsPoint: function (point) {\n    return Triangle.containsPoint(point, this.a, this.b, this.c);\n  },\n  closestPointToPoint: function () {\n    var plane = new Plane();\n    var edgeList = [new Line3(), new Line3(), new Line3()];\n    var projectedPoint = new Vector3();\n    var closestPoint = new Vector3();\n    return function closestPointToPoint(point, optionalTarget) {\n      var result = optionalTarget || new Vector3();\n      var minDistance = Infinity; // project the point onto the plane of the triangle\n\n      plane.setFromCoplanarPoints(this.a, this.b, this.c);\n      plane.projectPoint(point, projectedPoint); // check if the projection lies within the triangle\n\n      if (this.containsPoint(projectedPoint) === true) {\n        // if so, this is the closest point\n        result.copy(projectedPoint);\n      } else {\n        // if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n        edgeList[0].set(this.a, this.b);\n        edgeList[1].set(this.b, this.c);\n        edgeList[2].set(this.c, this.a);\n\n        for (var i = 0; i < edgeList.length; i++) {\n          edgeList[i].closestPointToPoint(projectedPoint, true, closestPoint);\n          var distance = projectedPoint.distanceToSquared(closestPoint);\n\n          if (distance < minDistance) {\n            minDistance = distance;\n            result.copy(closestPoint);\n          }\n        }\n      }\n\n      return result;\n    };\n  }(),\n  equals: function (triangle) {\n    return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh(geometry, material) {\n  Object3D.call(this);\n  this.type = 'Mesh';\n  this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n  this.material = material !== undefined ? material : new MeshBasicMaterial({\n    color: Math.random() * 0xffffff\n  });\n  this.drawMode = TrianglesDrawMode;\n  this.updateMorphTargets();\n}\n\nMesh.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Mesh,\n  isMesh: true,\n  setDrawMode: function (value) {\n    this.drawMode = value;\n  },\n  copy: function (source) {\n    Object3D.prototype.copy.call(this, source);\n    this.drawMode = source.drawMode;\n    return this;\n  },\n  updateMorphTargets: function () {\n    var geometry = this.geometry;\n    var m, ml, name;\n\n    if (geometry.isBufferGeometry) {\n      var morphAttributes = geometry.morphAttributes;\n      var keys = Object.keys(morphAttributes);\n\n      if (keys.length > 0) {\n        var morphAttribute = morphAttributes[keys[0]];\n\n        if (morphAttribute !== undefined) {\n          this.morphTargetInfluences = [];\n          this.morphTargetDictionary = {};\n\n          for (m = 0, ml = morphAttribute.length; m < ml; m++) {\n            name = morphAttribute[m].name || String(m);\n            this.morphTargetInfluences.push(0);\n            this.morphTargetDictionary[name] = m;\n          }\n        }\n      }\n    } else {\n      var morphTargets = geometry.morphTargets;\n\n      if (morphTargets !== undefined && morphTargets.length > 0) {\n        this.morphTargetInfluences = [];\n        this.morphTargetDictionary = {};\n\n        for (m = 0, ml = morphTargets.length; m < ml; m++) {\n          name = morphTargets[m].name || String(m);\n          this.morphTargetInfluences.push(0);\n          this.morphTargetDictionary[name] = m;\n        }\n      }\n    }\n  },\n  raycast: function () {\n    var inverseMatrix = new Matrix4();\n    var ray = new Ray();\n    var sphere = new Sphere();\n    var vA = new Vector3();\n    var vB = new Vector3();\n    var vC = new Vector3();\n    var tempA = new Vector3();\n    var tempB = new Vector3();\n    var tempC = new Vector3();\n    var uvA = new Vector2();\n    var uvB = new Vector2();\n    var uvC = new Vector2();\n    var barycoord = new Vector3();\n    var intersectionPoint = new Vector3();\n    var intersectionPointWorld = new Vector3();\n\n    function uvIntersection(point, p1, p2, p3, uv1, uv2, uv3) {\n      Triangle.barycoordFromPoint(point, p1, p2, p3, barycoord);\n      uv1.multiplyScalar(barycoord.x);\n      uv2.multiplyScalar(barycoord.y);\n      uv3.multiplyScalar(barycoord.z);\n      uv1.add(uv2).add(uv3);\n      return uv1.clone();\n    }\n\n    function checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n      var intersect;\n\n      if (material.side === BackSide) {\n        intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n      } else {\n        intersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\n      }\n\n      if (intersect === null) return null;\n      intersectionPointWorld.copy(point);\n      intersectionPointWorld.applyMatrix4(object.matrixWorld);\n      var distance = raycaster.ray.origin.distanceTo(intersectionPointWorld);\n      if (distance < raycaster.near || distance > raycaster.far) return null;\n      return {\n        distance: distance,\n        point: intersectionPointWorld.clone(),\n        object: object\n      };\n    }\n\n    function checkBufferGeometryIntersection(object, raycaster, ray, position, uv, a, b, c) {\n      vA.fromBufferAttribute(position, a);\n      vB.fromBufferAttribute(position, b);\n      vC.fromBufferAttribute(position, c);\n      var intersection = checkIntersection(object, object.material, raycaster, ray, vA, vB, vC, intersectionPoint);\n\n      if (intersection) {\n        if (uv) {\n          uvA.fromBufferAttribute(uv, a);\n          uvB.fromBufferAttribute(uv, b);\n          uvC.fromBufferAttribute(uv, c);\n          intersection.uv = uvIntersection(intersectionPoint, vA, vB, vC, uvA, uvB, uvC);\n        }\n\n        intersection.face = new Face3(a, b, c, Triangle.normal(vA, vB, vC));\n        intersection.faceIndex = a;\n      }\n\n      return intersection;\n    }\n\n    return function raycast(raycaster, intersects) {\n      var geometry = this.geometry;\n      var material = this.material;\n      var matrixWorld = this.matrixWorld;\n      if (material === undefined) return; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(matrixWorld);\n      if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n      inverseMatrix.getInverse(matrixWorld);\n      ray.copy(raycaster.ray).applyMatrix4(inverseMatrix); // Check boundingBox before continuing\n\n      if (geometry.boundingBox !== null) {\n        if (ray.intersectsBox(geometry.boundingBox) === false) return;\n      }\n\n      var intersection;\n\n      if (geometry.isBufferGeometry) {\n        var a, b, c;\n        var index = geometry.index;\n        var position = geometry.attributes.position;\n        var uv = geometry.attributes.uv;\n        var i, l;\n\n        if (index !== null) {\n          // indexed buffer geometry\n          for (i = 0, l = index.count; i < l; i += 3) {\n            a = index.getX(i);\n            b = index.getX(i + 1);\n            c = index.getX(i + 2);\n            intersection = checkBufferGeometryIntersection(this, raycaster, ray, position, uv, a, b, c);\n\n            if (intersection) {\n              intersection.faceIndex = Math.floor(i / 3); // triangle number in indices buffer semantics\n\n              intersects.push(intersection);\n            }\n          }\n        } else {\n          // non-indexed buffer geometry\n          for (i = 0, l = position.count; i < l; i += 3) {\n            a = i;\n            b = i + 1;\n            c = i + 2;\n            intersection = checkBufferGeometryIntersection(this, raycaster, ray, position, uv, a, b, c);\n\n            if (intersection) {\n              intersection.index = a; // triangle number in positions buffer semantics\n\n              intersects.push(intersection);\n            }\n          }\n        }\n      } else if (geometry.isGeometry) {\n        var fvA, fvB, fvC;\n        var isMultiMaterial = Array.isArray(material);\n        var vertices = geometry.vertices;\n        var faces = geometry.faces;\n        var uvs;\n        var faceVertexUvs = geometry.faceVertexUvs[0];\n        if (faceVertexUvs.length > 0) uvs = faceVertexUvs;\n\n        for (var f = 0, fl = faces.length; f < fl; f++) {\n          var face = faces[f];\n          var faceMaterial = isMultiMaterial ? material[face.materialIndex] : material;\n          if (faceMaterial === undefined) continue;\n          fvA = vertices[face.a];\n          fvB = vertices[face.b];\n          fvC = vertices[face.c];\n\n          if (faceMaterial.morphTargets === true) {\n            var morphTargets = geometry.morphTargets;\n            var morphInfluences = this.morphTargetInfluences;\n            vA.set(0, 0, 0);\n            vB.set(0, 0, 0);\n            vC.set(0, 0, 0);\n\n            for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n              var influence = morphInfluences[t];\n              if (influence === 0) continue;\n              var targets = morphTargets[t].vertices;\n              vA.addScaledVector(tempA.subVectors(targets[face.a], fvA), influence);\n              vB.addScaledVector(tempB.subVectors(targets[face.b], fvB), influence);\n              vC.addScaledVector(tempC.subVectors(targets[face.c], fvC), influence);\n            }\n\n            vA.add(fvA);\n            vB.add(fvB);\n            vC.add(fvC);\n            fvA = vA;\n            fvB = vB;\n            fvC = vC;\n          }\n\n          intersection = checkIntersection(this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint);\n\n          if (intersection) {\n            if (uvs && uvs[f]) {\n              var uvs_f = uvs[f];\n              uvA.copy(uvs_f[0]);\n              uvB.copy(uvs_f[1]);\n              uvC.copy(uvs_f[2]);\n              intersection.uv = uvIntersection(intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC);\n            }\n\n            intersection.face = face;\n            intersection.faceIndex = f;\n            intersects.push(intersection);\n          }\n        }\n      }\n    };\n  }(),\n  clone: function () {\n    return new this.constructor(this.geometry, this.material).copy(this);\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground(renderer, state, geometries, premultipliedAlpha) {\n  var clearColor = new Color(0x000000);\n  var clearAlpha = 0;\n  var planeCamera, planeMesh;\n  var boxMesh;\n\n  function render(renderList, scene, camera, forceClear) {\n    var background = scene.background;\n\n    if (background === null) {\n      setClear(clearColor, clearAlpha);\n    } else if (background && background.isColor) {\n      setClear(background, 1);\n      forceClear = true;\n    }\n\n    if (renderer.autoClear || forceClear) {\n      renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n    }\n\n    if (background && background.isCubeTexture) {\n      if (boxMesh === undefined) {\n        boxMesh = new Mesh(new BoxBufferGeometry(1, 1, 1), new ShaderMaterial({\n          uniforms: ShaderLib.cube.uniforms,\n          vertexShader: ShaderLib.cube.vertexShader,\n          fragmentShader: ShaderLib.cube.fragmentShader,\n          side: BackSide,\n          depthTest: true,\n          depthWrite: false,\n          polygonOffset: true,\n          fog: false\n        }));\n        boxMesh.geometry.removeAttribute('normal');\n        boxMesh.geometry.removeAttribute('uv');\n\n        boxMesh.onBeforeRender = function (renderer, scene, camera) {\n          var scale = camera.far;\n          this.matrixWorld.makeScale(scale, scale, scale);\n          this.matrixWorld.copyPosition(camera.matrixWorld);\n          this.material.polygonOffsetUnits = scale * 10;\n        };\n\n        geometries.update(boxMesh.geometry);\n      }\n\n      boxMesh.material.uniforms.tCube.value = background;\n      renderList.push(boxMesh, boxMesh.geometry, boxMesh.material, 0, null);\n    } else if (background && background.isTexture) {\n      if (planeCamera === undefined) {\n        planeCamera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n        planeMesh = new Mesh(new PlaneBufferGeometry(2, 2), new MeshBasicMaterial({\n          depthTest: false,\n          depthWrite: false,\n          fog: false\n        }));\n        geometries.update(planeMesh.geometry);\n      }\n\n      planeMesh.material.map = background; // TODO Push this to renderList\n\n      renderer.renderBufferDirect(planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null);\n    }\n  }\n\n  function setClear(color, alpha) {\n    state.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\n  }\n\n  return {\n    getClearColor: function () {\n      return clearColor;\n    },\n    setClearColor: function (color, alpha) {\n      clearColor.set(color);\n      clearAlpha = alpha !== undefined ? alpha : 1;\n      setClear(clearColor, clearAlpha);\n    },\n    getClearAlpha: function () {\n      return clearAlpha;\n    },\n    setClearAlpha: function (alpha) {\n      clearAlpha = alpha;\n      setClear(clearColor, clearAlpha);\n    },\n    render: render\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction painterSortStable(a, b) {\n  if (a.renderOrder !== b.renderOrder) {\n    return a.renderOrder - b.renderOrder;\n  } else if (a.program && b.program && a.program !== b.program) {\n    return a.program.id - b.program.id;\n  } else if (a.material.id !== b.material.id) {\n    return a.material.id - b.material.id;\n  } else if (a.z !== b.z) {\n    return a.z - b.z;\n  } else {\n    return a.id - b.id;\n  }\n}\n\nfunction reversePainterSortStable(a, b) {\n  if (a.renderOrder !== b.renderOrder) {\n    return a.renderOrder - b.renderOrder;\n  }\n\n  if (a.z !== b.z) {\n    return b.z - a.z;\n  } else {\n    return a.id - b.id;\n  }\n}\n\nfunction WebGLRenderList() {\n  var renderItems = [];\n  var renderItemsIndex = 0;\n  var opaque = [];\n  var transparent = [];\n\n  function init() {\n    renderItemsIndex = 0;\n    opaque.length = 0;\n    transparent.length = 0;\n  }\n\n  function push(object, geometry, material, z, group) {\n    var renderItem = renderItems[renderItemsIndex];\n\n    if (renderItem === undefined) {\n      renderItem = {\n        id: object.id,\n        object: object,\n        geometry: geometry,\n        material: material,\n        program: material.program,\n        renderOrder: object.renderOrder,\n        z: z,\n        group: group\n      };\n      renderItems[renderItemsIndex] = renderItem;\n    } else {\n      renderItem.id = object.id;\n      renderItem.object = object;\n      renderItem.geometry = geometry;\n      renderItem.material = material;\n      renderItem.program = material.program;\n      renderItem.renderOrder = object.renderOrder;\n      renderItem.z = z;\n      renderItem.group = group;\n    }\n\n    (material.transparent === true ? transparent : opaque).push(renderItem);\n    renderItemsIndex++;\n  }\n\n  function sort() {\n    if (opaque.length > 1) opaque.sort(painterSortStable);\n    if (transparent.length > 1) transparent.sort(reversePainterSortStable);\n  }\n\n  return {\n    opaque: opaque,\n    transparent: transparent,\n    init: init,\n    push: push,\n    sort: sort\n  };\n}\n\nfunction WebGLRenderLists() {\n  var lists = {};\n\n  function get(scene, camera) {\n    var hash = scene.id + ',' + camera.id;\n    var list = lists[hash];\n\n    if (list === undefined) {\n      // console.log( 'THREE.WebGLRenderLists:', hash );\n      list = new WebGLRenderList();\n      lists[hash] = list;\n    }\n\n    return list;\n  }\n\n  function dispose() {\n    lists = {};\n  }\n\n  return {\n    get: get,\n    dispose: dispose\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction absNumericalSort(a, b) {\n  return Math.abs(b[1]) - Math.abs(a[1]);\n}\n\nfunction WebGLMorphtargets(gl) {\n  var influencesList = {};\n  var morphInfluences = new Float32Array(8);\n\n  function update(object, geometry, material, program) {\n    var objectInfluences = object.morphTargetInfluences;\n    var length = objectInfluences.length;\n    var influences = influencesList[geometry.id];\n\n    if (influences === undefined) {\n      // initialise list\n      influences = [];\n\n      for (var i = 0; i < length; i++) {\n        influences[i] = [i, 0];\n      }\n\n      influencesList[geometry.id] = influences;\n    }\n\n    var morphTargets = material.morphTargets && geometry.morphAttributes.position;\n    var morphNormals = material.morphNormals && geometry.morphAttributes.normal; // Remove current morphAttributes\n\n    for (var i = 0; i < length; i++) {\n      var influence = influences[i];\n\n      if (influence[1] !== 0) {\n        if (morphTargets) geometry.removeAttribute('morphTarget' + i);\n        if (morphNormals) geometry.removeAttribute('morphNormal' + i);\n      }\n    } // Collect influences\n\n\n    for (var i = 0; i < length; i++) {\n      var influence = influences[i];\n      influence[0] = i;\n      influence[1] = objectInfluences[i];\n    }\n\n    influences.sort(absNumericalSort); // Add morphAttributes\n\n    for (var i = 0; i < 8; i++) {\n      var influence = influences[i];\n\n      if (influence) {\n        var index = influence[0];\n        var value = influence[1];\n\n        if (value) {\n          if (morphTargets) geometry.addAttribute('morphTarget' + i, morphTargets[index]);\n          if (morphNormals) geometry.addAttribute('morphNormal' + i, morphNormals[index]);\n          morphInfluences[i] = value;\n          continue;\n        }\n      }\n\n      morphInfluences[i] = 0;\n    }\n\n    program.getUniforms().setValue(gl, 'morphTargetInfluences', morphInfluences);\n  }\n\n  return {\n    update: update\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLIndexedBufferRenderer(gl, extensions, infoRender) {\n  var mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  var type, bytesPerElement;\n\n  function setIndex(value) {\n    type = value.type;\n    bytesPerElement = value.bytesPerElement;\n  }\n\n  function render(start, count) {\n    gl.drawElements(mode, count, type, start * bytesPerElement);\n    infoRender.calls++;\n    infoRender.vertices += count;\n    if (mode === gl.TRIANGLES) infoRender.faces += count / 3;else if (mode === gl.POINTS) infoRender.points += count;\n  }\n\n  function renderInstances(geometry, start, count) {\n    var extension = extensions.get('ANGLE_instanced_arrays');\n\n    if (extension === null) {\n      console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n      return;\n    }\n\n    extension.drawElementsInstancedANGLE(mode, count, type, start * bytesPerElement, geometry.maxInstancedCount);\n    infoRender.calls++;\n    infoRender.vertices += count * geometry.maxInstancedCount;\n    if (mode === gl.TRIANGLES) infoRender.faces += geometry.maxInstancedCount * count / 3;else if (mode === gl.POINTS) infoRender.points += geometry.maxInstancedCount * count;\n  } //\n\n\n  this.setMode = setMode;\n  this.setIndex = setIndex;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLBufferRenderer(gl, extensions, infoRender) {\n  var mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  function render(start, count) {\n    gl.drawArrays(mode, start, count);\n    infoRender.calls++;\n    infoRender.vertices += count;\n    if (mode === gl.TRIANGLES) infoRender.faces += count / 3;else if (mode === gl.POINTS) infoRender.points += count;\n  }\n\n  function renderInstances(geometry, start, count) {\n    var extension = extensions.get('ANGLE_instanced_arrays');\n\n    if (extension === null) {\n      console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n      return;\n    }\n\n    var position = geometry.attributes.position;\n\n    if (position.isInterleavedBufferAttribute) {\n      count = position.data.count;\n      extension.drawArraysInstancedANGLE(mode, 0, count, geometry.maxInstancedCount);\n    } else {\n      extension.drawArraysInstancedANGLE(mode, start, count, geometry.maxInstancedCount);\n    }\n\n    infoRender.calls++;\n    infoRender.vertices += count * geometry.maxInstancedCount;\n    if (mode === gl.TRIANGLES) infoRender.faces += geometry.maxInstancedCount * count / 3;else if (mode === gl.POINTS) infoRender.points += geometry.maxInstancedCount * count;\n  } //\n\n\n  this.setMode = setMode;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLGeometries(gl, attributes, infoMemory) {\n  var geometries = {};\n  var wireframeAttributes = {};\n\n  function onGeometryDispose(event) {\n    var geometry = event.target;\n    var buffergeometry = geometries[geometry.id];\n\n    if (buffergeometry.index !== null) {\n      attributes.remove(buffergeometry.index);\n    }\n\n    for (var name in buffergeometry.attributes) {\n      attributes.remove(buffergeometry.attributes[name]);\n    }\n\n    geometry.removeEventListener('dispose', onGeometryDispose);\n    delete geometries[geometry.id]; // TODO Remove duplicate code\n\n    var attribute = wireframeAttributes[geometry.id];\n\n    if (attribute) {\n      attributes.remove(attribute);\n      delete wireframeAttributes[geometry.id];\n    }\n\n    attribute = wireframeAttributes[buffergeometry.id];\n\n    if (attribute) {\n      attributes.remove(attribute);\n      delete wireframeAttributes[buffergeometry.id];\n    } //\n\n\n    infoMemory.geometries--;\n  }\n\n  function get(object, geometry) {\n    var buffergeometry = geometries[geometry.id];\n    if (buffergeometry) return buffergeometry;\n    geometry.addEventListener('dispose', onGeometryDispose);\n\n    if (geometry.isBufferGeometry) {\n      buffergeometry = geometry;\n    } else if (geometry.isGeometry) {\n      if (geometry._bufferGeometry === undefined) {\n        geometry._bufferGeometry = new BufferGeometry().setFromObject(object);\n      }\n\n      buffergeometry = geometry._bufferGeometry;\n    }\n\n    geometries[geometry.id] = buffergeometry;\n    infoMemory.geometries++;\n    return buffergeometry;\n  }\n\n  function update(geometry) {\n    var index = geometry.index;\n    var geometryAttributes = geometry.attributes;\n\n    if (index !== null) {\n      attributes.update(index, gl.ELEMENT_ARRAY_BUFFER);\n    }\n\n    for (var name in geometryAttributes) {\n      attributes.update(geometryAttributes[name], gl.ARRAY_BUFFER);\n    } // morph targets\n\n\n    var morphAttributes = geometry.morphAttributes;\n\n    for (var name in morphAttributes) {\n      var array = morphAttributes[name];\n\n      for (var i = 0, l = array.length; i < l; i++) {\n        attributes.update(array[i], gl.ARRAY_BUFFER);\n      }\n    }\n  }\n\n  function getWireframeAttribute(geometry) {\n    var attribute = wireframeAttributes[geometry.id];\n    if (attribute) return attribute;\n    var indices = [];\n    var geometryIndex = geometry.index;\n    var geometryAttributes = geometry.attributes; // console.time( 'wireframe' );\n\n    if (geometryIndex !== null) {\n      var array = geometryIndex.array;\n\n      for (var i = 0, l = array.length; i < l; i += 3) {\n        var a = array[i + 0];\n        var b = array[i + 1];\n        var c = array[i + 2];\n        indices.push(a, b, b, c, c, a);\n      }\n    } else {\n      var array = geometryAttributes.position.array;\n\n      for (var i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n        var a = i + 0;\n        var b = i + 1;\n        var c = i + 2;\n        indices.push(a, b, b, c, c, a);\n      }\n    } // console.timeEnd( 'wireframe' );\n\n\n    attribute = new (arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n    attributes.update(attribute, gl.ELEMENT_ARRAY_BUFFER);\n    wireframeAttributes[geometry.id] = attribute;\n    return attribute;\n  }\n\n  return {\n    get: get,\n    update: update,\n    getWireframeAttribute: getWireframeAttribute\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction UniformsCache() {\n  var lights = {};\n  return {\n    get: function (light) {\n      if (lights[light.id] !== undefined) {\n        return lights[light.id];\n      }\n\n      var uniforms;\n\n      switch (light.type) {\n        case 'DirectionalLight':\n          uniforms = {\n            direction: new Vector3(),\n            color: new Color(),\n            shadow: false,\n            shadowBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new Vector2()\n          };\n          break;\n\n        case 'SpotLight':\n          uniforms = {\n            position: new Vector3(),\n            direction: new Vector3(),\n            color: new Color(),\n            distance: 0,\n            coneCos: 0,\n            penumbraCos: 0,\n            decay: 0,\n            shadow: false,\n            shadowBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new Vector2()\n          };\n          break;\n\n        case 'PointLight':\n          uniforms = {\n            position: new Vector3(),\n            color: new Color(),\n            distance: 0,\n            decay: 0,\n            shadow: false,\n            shadowBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new Vector2(),\n            shadowCameraNear: 1,\n            shadowCameraFar: 1000\n          };\n          break;\n\n        case 'HemisphereLight':\n          uniforms = {\n            direction: new Vector3(),\n            skyColor: new Color(),\n            groundColor: new Color()\n          };\n          break;\n\n        case 'RectAreaLight':\n          uniforms = {\n            color: new Color(),\n            position: new Vector3(),\n            halfWidth: new Vector3(),\n            halfHeight: new Vector3() // TODO (abelnation): set RectAreaLight shadow uniforms\n\n          };\n          break;\n      }\n\n      lights[light.id] = uniforms;\n      return uniforms;\n    }\n  };\n}\n\nfunction WebGLLights() {\n  var cache = new UniformsCache();\n  var state = {\n    hash: '',\n    ambient: [0, 0, 0],\n    directional: [],\n    directionalShadowMap: [],\n    directionalShadowMatrix: [],\n    spot: [],\n    spotShadowMap: [],\n    spotShadowMatrix: [],\n    rectArea: [],\n    point: [],\n    pointShadowMap: [],\n    pointShadowMatrix: [],\n    hemi: []\n  };\n  var vector3 = new Vector3();\n  var matrix4 = new Matrix4();\n  var matrix42 = new Matrix4();\n\n  function setup(lights, shadows, camera) {\n    var r = 0,\n        g = 0,\n        b = 0;\n    var directionalLength = 0;\n    var pointLength = 0;\n    var spotLength = 0;\n    var rectAreaLength = 0;\n    var hemiLength = 0;\n    var viewMatrix = camera.matrixWorldInverse;\n\n    for (var i = 0, l = lights.length; i < l; i++) {\n      var light = lights[i];\n      var color = light.color;\n      var intensity = light.intensity;\n      var distance = light.distance;\n      var shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n      if (light.isAmbientLight) {\n        r += color.r * intensity;\n        g += color.g * intensity;\n        b += color.b * intensity;\n      } else if (light.isDirectionalLight) {\n        var uniforms = cache.get(light);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        vector3.setFromMatrixPosition(light.target.matrixWorld);\n        uniforms.direction.sub(vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.shadow = light.castShadow;\n\n        if (light.castShadow) {\n          var shadow = light.shadow;\n          uniforms.shadowBias = shadow.bias;\n          uniforms.shadowRadius = shadow.radius;\n          uniforms.shadowMapSize = shadow.mapSize;\n        }\n\n        state.directionalShadowMap[directionalLength] = shadowMap;\n        state.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n        state.directional[directionalLength] = uniforms;\n        directionalLength++;\n      } else if (light.isSpotLight) {\n        var uniforms = cache.get(light);\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n        uniforms.color.copy(color).multiplyScalar(intensity);\n        uniforms.distance = distance;\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        vector3.setFromMatrixPosition(light.target.matrixWorld);\n        uniforms.direction.sub(vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.coneCos = Math.cos(light.angle);\n        uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n        uniforms.decay = light.distance === 0 ? 0.0 : light.decay;\n        uniforms.shadow = light.castShadow;\n\n        if (light.castShadow) {\n          var shadow = light.shadow;\n          uniforms.shadowBias = shadow.bias;\n          uniforms.shadowRadius = shadow.radius;\n          uniforms.shadowMapSize = shadow.mapSize;\n        }\n\n        state.spotShadowMap[spotLength] = shadowMap;\n        state.spotShadowMatrix[spotLength] = light.shadow.matrix;\n        state.spot[spotLength] = uniforms;\n        spotLength++;\n      } else if (light.isRectAreaLight) {\n        var uniforms = cache.get(light); // (a) intensity controls irradiance of entire light\n\n        uniforms.color.copy(color).multiplyScalar(intensity / (light.width * light.height)); // (b) intensity controls the radiance per light area\n        // uniforms.color.copy( color ).multiplyScalar( intensity );\n\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\n\n        matrix42.identity();\n        matrix4.copy(light.matrixWorld);\n        matrix4.premultiply(viewMatrix);\n        matrix42.extractRotation(matrix4);\n        uniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n        uniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n        uniforms.halfWidth.applyMatrix4(matrix42);\n        uniforms.halfHeight.applyMatrix4(matrix42); // TODO (abelnation): RectAreaLight distance?\n        // uniforms.distance = distance;\n\n        state.rectArea[rectAreaLength] = uniforms;\n        rectAreaLength++;\n      } else if (light.isPointLight) {\n        var uniforms = cache.get(light);\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n        uniforms.distance = light.distance;\n        uniforms.decay = light.distance === 0 ? 0.0 : light.decay;\n        uniforms.shadow = light.castShadow;\n\n        if (light.castShadow) {\n          var shadow = light.shadow;\n          uniforms.shadowBias = shadow.bias;\n          uniforms.shadowRadius = shadow.radius;\n          uniforms.shadowMapSize = shadow.mapSize;\n          uniforms.shadowCameraNear = shadow.camera.near;\n          uniforms.shadowCameraFar = shadow.camera.far;\n        }\n\n        state.pointShadowMap[pointLength] = shadowMap;\n        state.pointShadowMatrix[pointLength] = light.shadow.matrix;\n        state.point[pointLength] = uniforms;\n        pointLength++;\n      } else if (light.isHemisphereLight) {\n        var uniforms = cache.get(light);\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.direction.normalize();\n        uniforms.skyColor.copy(light.color).multiplyScalar(intensity);\n        uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);\n        state.hemi[hemiLength] = uniforms;\n        hemiLength++;\n      }\n    }\n\n    state.ambient[0] = r;\n    state.ambient[1] = g;\n    state.ambient[2] = b;\n    state.directional.length = directionalLength;\n    state.spot.length = spotLength;\n    state.rectArea.length = rectAreaLength;\n    state.point.length = pointLength;\n    state.hemi.length = hemiLength; // TODO (sam-g-steel) why aren't we using join\n\n    state.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + shadows.length;\n  }\n\n  return {\n    setup: setup,\n    state: state\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLObjects(geometries, infoRender) {\n  var updateList = {};\n\n  function update(object) {\n    var frame = infoRender.frame;\n    var geometry = object.geometry;\n    var buffergeometry = geometries.get(object, geometry); // Update once per frame\n\n    if (updateList[buffergeometry.id] !== frame) {\n      if (geometry.isGeometry) {\n        buffergeometry.updateFromObject(object);\n      }\n\n      geometries.update(buffergeometry);\n      updateList[buffergeometry.id] = frame;\n    }\n\n    return buffergeometry;\n  }\n\n  function clear() {\n    updateList = {};\n  }\n\n  return {\n    update: update,\n    clear: clear\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction addLineNumbers(string) {\n  var lines = string.split('\\n');\n\n  for (var i = 0; i < lines.length; i++) {\n    lines[i] = i + 1 + ': ' + lines[i];\n  }\n\n  return lines.join('\\n');\n}\n\nfunction WebGLShader(gl, type, string) {\n  var shader = gl.createShader(type);\n  gl.shaderSource(shader, string);\n  gl.compileShader(shader);\n\n  if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n    console.error('THREE.WebGLShader: Shader couldn\\'t compile.');\n  }\n\n  if (gl.getShaderInfoLog(shader) !== '') {\n    console.warn('THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog(shader), addLineNumbers(string));\n  } // --enable-privileged-webgl-extension\n  // console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\n  return shader;\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents(encoding) {\n  switch (encoding) {\n    case LinearEncoding:\n      return ['Linear', '( value )'];\n\n    case sRGBEncoding:\n      return ['sRGB', '( value )'];\n\n    case RGBEEncoding:\n      return ['RGBE', '( value )'];\n\n    case RGBM7Encoding:\n      return ['RGBM', '( value, 7.0 )'];\n\n    case RGBM16Encoding:\n      return ['RGBM', '( value, 16.0 )'];\n\n    case RGBDEncoding:\n      return ['RGBD', '( value, 256.0 )'];\n\n    case GammaEncoding:\n      return ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n    default:\n      throw new Error('unsupported encoding: ' + encoding);\n  }\n}\n\nfunction getTexelDecodingFunction(functionName, encoding) {\n  var components = getEncodingComponents(encoding);\n  return \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[0] + \"ToLinear\" + components[1] + \"; }\";\n}\n\nfunction getTexelEncodingFunction(functionName, encoding) {\n  var components = getEncodingComponents(encoding);\n  return \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[0] + components[1] + \"; }\";\n}\n\nfunction getToneMappingFunction(functionName, toneMapping) {\n  var toneMappingName;\n\n  switch (toneMapping) {\n    case LinearToneMapping:\n      toneMappingName = \"Linear\";\n      break;\n\n    case ReinhardToneMapping:\n      toneMappingName = \"Reinhard\";\n      break;\n\n    case Uncharted2ToneMapping:\n      toneMappingName = \"Uncharted2\";\n      break;\n\n    case CineonToneMapping:\n      toneMappingName = \"OptimizedCineon\";\n      break;\n\n    default:\n      throw new Error('unsupported toneMapping: ' + toneMapping);\n  }\n\n  return \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n}\n\nfunction generateExtensions(extensions, parameters, rendererExtensions) {\n  extensions = extensions || {};\n  var chunks = [extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ? '#extension GL_OES_standard_derivatives : enable' : '', (extensions.fragDepth || parameters.logarithmicDepthBuffer) && rendererExtensions.get('EXT_frag_depth') ? '#extension GL_EXT_frag_depth : enable' : '', extensions.drawBuffers && rendererExtensions.get('WEBGL_draw_buffers') ? '#extension GL_EXT_draw_buffers : require' : '', (extensions.shaderTextureLOD || parameters.envMap) && rendererExtensions.get('EXT_shader_texture_lod') ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n  return chunks.filter(filterEmptyLine).join('\\n');\n}\n\nfunction generateDefines(defines) {\n  var chunks = [];\n\n  for (var name in defines) {\n    var value = defines[name];\n    if (value === false) continue;\n    chunks.push('#define ' + name + ' ' + value);\n  }\n\n  return chunks.join('\\n');\n}\n\nfunction fetchAttributeLocations(gl, program, identifiers) {\n  var attributes = {};\n  var n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n  for (var i = 0; i < n; i++) {\n    var info = gl.getActiveAttrib(program, i);\n    var name = info.name; // console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n    attributes[name] = gl.getAttribLocation(program, name);\n  }\n\n  return attributes;\n}\n\nfunction filterEmptyLine(string) {\n  return string !== '';\n}\n\nfunction replaceLightNums(string, parameters) {\n  return string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights);\n}\n\nfunction parseIncludes(string) {\n  var pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n  function replace(match, include) {\n    var replace = ShaderChunk[include];\n\n    if (replace === undefined) {\n      throw new Error('Can not resolve #include <' + include + '>');\n    }\n\n    return parseIncludes(replace);\n  }\n\n  return string.replace(pattern, replace);\n}\n\nfunction unrollLoops(string) {\n  var pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n  function replace(match, start, end, snippet) {\n    var unroll = '';\n\n    for (var i = parseInt(start); i < parseInt(end); i++) {\n      unroll += snippet.replace(/\\[ i \\]/g, '[ ' + i + ' ]');\n    }\n\n    return unroll;\n  }\n\n  return string.replace(pattern, replace);\n}\n\nfunction WebGLProgram(renderer, extensions, code, material, shader, parameters) {\n  var gl = renderer.context;\n  var defines = material.defines;\n  var vertexShader = shader.vertexShader;\n  var fragmentShader = shader.fragmentShader;\n  var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n  if (parameters.shadowMapType === PCFShadowMap) {\n    shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n  } else if (parameters.shadowMapType === PCFSoftShadowMap) {\n    shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n  }\n\n  var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n  var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n  var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n  if (parameters.envMap) {\n    switch (material.envMap.mapping) {\n      case CubeReflectionMapping:\n      case CubeRefractionMapping:\n        envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n        break;\n\n      case CubeUVReflectionMapping:\n      case CubeUVRefractionMapping:\n        envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n        break;\n\n      case EquirectangularReflectionMapping:\n      case EquirectangularRefractionMapping:\n        envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n        break;\n\n      case SphericalReflectionMapping:\n        envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n        break;\n    }\n\n    switch (material.envMap.mapping) {\n      case CubeRefractionMapping:\n      case EquirectangularRefractionMapping:\n        envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n        break;\n    }\n\n    switch (material.combine) {\n      case MultiplyOperation:\n        envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n        break;\n\n      case MixOperation:\n        envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n        break;\n\n      case AddOperation:\n        envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n        break;\n    }\n  }\n\n  var gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0; // console.log( 'building new program ' );\n  //\n\n  var customExtensions = generateExtensions(material.extensions, parameters, extensions);\n  var customDefines = generateDefines(defines); //\n\n  var program = gl.createProgram();\n  var prefixVertex, prefixFragment;\n\n  if (material.isRawShaderMaterial) {\n    prefixVertex = [customDefines, '\\n'].filter(filterEmptyLine).join('\\n');\n    prefixFragment = [customExtensions, customDefines, '\\n'].filter(filterEmptyLine).join('\\n');\n  } else {\n    prefixVertex = ['precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + shader.name, customDefines, parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', '#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes, parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_COLOR', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n    prefixFragment = [customExtensions, 'precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + shader.name, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', '#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes, '#define UNION_CLIPPING_PLANES ' + (parameters.numClippingPlanes - parameters.numClipIntersection), parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '', parameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '', parameters.envMap && extensions.get('EXT_shader_texture_lod') ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', parameters.toneMapping !== NoToneMapping ? \"#define TONE_MAPPING\" : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n    parameters.toneMapping !== NoToneMapping ? getToneMappingFunction(\"toneMapping\", parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ? ShaderChunk['encodings_pars_fragment'] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n    parameters.mapEncoding ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.envMapEncoding ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMapEncoding ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.outputEncoding ? getTexelEncodingFunction(\"linearToOutputTexel\", parameters.outputEncoding) : '', parameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n  }\n\n  vertexShader = parseIncludes(vertexShader);\n  vertexShader = replaceLightNums(vertexShader, parameters);\n  fragmentShader = parseIncludes(fragmentShader);\n  fragmentShader = replaceLightNums(fragmentShader, parameters);\n\n  if (!material.isShaderMaterial) {\n    vertexShader = unrollLoops(vertexShader);\n    fragmentShader = unrollLoops(fragmentShader);\n  }\n\n  var vertexGlsl = prefixVertex + vertexShader;\n  var fragmentGlsl = prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n  // console.log( '*FRAGMENT*', fragmentGlsl );\n\n  var glVertexShader = WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n  var glFragmentShader = WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n  gl.attachShader(program, glVertexShader);\n  gl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n  if (material.index0AttributeName !== undefined) {\n    gl.bindAttribLocation(program, 0, material.index0AttributeName);\n  } else if (parameters.morphTargets === true) {\n    // programs with morphTargets displace position out of attribute 0\n    gl.bindAttribLocation(program, 0, 'position');\n  }\n\n  gl.linkProgram(program);\n  var programLog = gl.getProgramInfoLog(program);\n  var vertexLog = gl.getShaderInfoLog(glVertexShader);\n  var fragmentLog = gl.getShaderInfoLog(glFragmentShader);\n  var runnable = true;\n  var haveDiagnostics = true; // console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n  // console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n  if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n    runnable = false;\n    console.error('THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog);\n  } else if (programLog !== '') {\n    console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\n  } else if (vertexLog === '' || fragmentLog === '') {\n    haveDiagnostics = false;\n  }\n\n  if (haveDiagnostics) {\n    this.diagnostics = {\n      runnable: runnable,\n      material: material,\n      programLog: programLog,\n      vertexShader: {\n        log: vertexLog,\n        prefix: prefixVertex\n      },\n      fragmentShader: {\n        log: fragmentLog,\n        prefix: prefixFragment\n      }\n    };\n  } // clean up\n\n\n  gl.deleteShader(glVertexShader);\n  gl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n  var cachedUniforms;\n\n  this.getUniforms = function () {\n    if (cachedUniforms === undefined) {\n      cachedUniforms = new WebGLUniforms(gl, program, renderer);\n    }\n\n    return cachedUniforms;\n  }; // set up caching for attribute locations\n\n\n  var cachedAttributes;\n\n  this.getAttributes = function () {\n    if (cachedAttributes === undefined) {\n      cachedAttributes = fetchAttributeLocations(gl, program);\n    }\n\n    return cachedAttributes;\n  }; // free resource\n\n\n  this.destroy = function () {\n    gl.deleteProgram(program);\n    this.program = undefined;\n  }; // DEPRECATED\n\n\n  Object.defineProperties(this, {\n    uniforms: {\n      get: function () {\n        console.warn('THREE.WebGLProgram: .uniforms is now .getUniforms().');\n        return this.getUniforms();\n      }\n    },\n    attributes: {\n      get: function () {\n        console.warn('THREE.WebGLProgram: .attributes is now .getAttributes().');\n        return this.getAttributes();\n      }\n    }\n  }); //\n\n  this.id = programIdCount++;\n  this.code = code;\n  this.usedTimes = 1;\n  this.program = program;\n  this.vertexShader = glVertexShader;\n  this.fragmentShader = glFragmentShader;\n  return this;\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLPrograms(renderer, extensions, capabilities) {\n  var programs = [];\n  var shaderIDs = {\n    MeshDepthMaterial: 'depth',\n    MeshDistanceMaterial: 'distanceRGBA',\n    MeshNormalMaterial: 'normal',\n    MeshBasicMaterial: 'basic',\n    MeshLambertMaterial: 'lambert',\n    MeshPhongMaterial: 'phong',\n    MeshToonMaterial: 'phong',\n    MeshStandardMaterial: 'physical',\n    MeshPhysicalMaterial: 'physical',\n    LineBasicMaterial: 'basic',\n    LineDashedMaterial: 'dashed',\n    PointsMaterial: 'points',\n    ShadowMaterial: 'shadow'\n  };\n  var parameterNames = [\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\", \"roughnessMap\", \"metalnessMap\", \"gradientMap\", \"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\", \"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\", \"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\", \"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\", \"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\", \"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights', \"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"];\n\n  function allocateBones(object) {\n    var skeleton = object.skeleton;\n    var bones = skeleton.bones;\n\n    if (capabilities.floatVertexTextures) {\n      return 1024;\n    } else {\n      // default for when object is not specified\n      // ( for example when prebuilding shader to be used with multiple objects )\n      //\n      //  - leave some extra space for other uniforms\n      //  - limit here is ANGLE's 254 max uniform vectors\n      //    (up to 54 should be safe)\n      var nVertexUniforms = capabilities.maxVertexUniforms;\n      var nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n      var maxBones = Math.min(nVertexMatrices, bones.length);\n\n      if (maxBones < bones.length) {\n        console.warn('THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.');\n        return 0;\n      }\n\n      return maxBones;\n    }\n  }\n\n  function getTextureEncodingFromMap(map, gammaOverrideLinear) {\n    var encoding;\n\n    if (!map) {\n      encoding = LinearEncoding;\n    } else if (map.isTexture) {\n      encoding = map.encoding;\n    } else if (map.isWebGLRenderTarget) {\n      console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\");\n      encoding = map.texture.encoding;\n    } // add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\n\n    if (encoding === LinearEncoding && gammaOverrideLinear) {\n      encoding = GammaEncoding;\n    }\n\n    return encoding;\n  }\n\n  this.getParameters = function (material, lights, shadows, fog, nClipPlanes, nClipIntersection, object) {\n    var shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n    // (not to blow over maxLights budget)\n\n    var maxBones = object.isSkinnedMesh ? allocateBones(object) : 0;\n    var precision = capabilities.precision;\n\n    if (material.precision !== null) {\n      precision = capabilities.getMaxPrecision(material.precision);\n\n      if (precision !== material.precision) {\n        console.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n      }\n    }\n\n    var currentRenderTarget = renderer.getRenderTarget();\n    var parameters = {\n      shaderID: shaderID,\n      precision: precision,\n      supportsVertexTextures: capabilities.vertexTextures,\n      outputEncoding: getTextureEncodingFromMap(!currentRenderTarget ? null : currentRenderTarget.texture, renderer.gammaOutput),\n      map: !!material.map,\n      mapEncoding: getTextureEncodingFromMap(material.map, renderer.gammaInput),\n      envMap: !!material.envMap,\n      envMapMode: material.envMap && material.envMap.mapping,\n      envMapEncoding: getTextureEncodingFromMap(material.envMap, renderer.gammaInput),\n      envMapCubeUV: !!material.envMap && (material.envMap.mapping === CubeUVReflectionMapping || material.envMap.mapping === CubeUVRefractionMapping),\n      lightMap: !!material.lightMap,\n      aoMap: !!material.aoMap,\n      emissiveMap: !!material.emissiveMap,\n      emissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap, renderer.gammaInput),\n      bumpMap: !!material.bumpMap,\n      normalMap: !!material.normalMap,\n      displacementMap: !!material.displacementMap,\n      roughnessMap: !!material.roughnessMap,\n      metalnessMap: !!material.metalnessMap,\n      specularMap: !!material.specularMap,\n      alphaMap: !!material.alphaMap,\n      gradientMap: !!material.gradientMap,\n      combine: material.combine,\n      vertexColors: material.vertexColors,\n      fog: !!fog,\n      useFog: material.fog,\n      fogExp: fog && fog.isFogExp2,\n      flatShading: material.flatShading,\n      sizeAttenuation: material.sizeAttenuation,\n      logarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n      skinning: material.skinning && maxBones > 0,\n      maxBones: maxBones,\n      useVertexTexture: capabilities.floatVertexTextures,\n      morphTargets: material.morphTargets,\n      morphNormals: material.morphNormals,\n      maxMorphTargets: renderer.maxMorphTargets,\n      maxMorphNormals: renderer.maxMorphNormals,\n      numDirLights: lights.directional.length,\n      numPointLights: lights.point.length,\n      numSpotLights: lights.spot.length,\n      numRectAreaLights: lights.rectArea.length,\n      numHemiLights: lights.hemi.length,\n      numClippingPlanes: nClipPlanes,\n      numClipIntersection: nClipIntersection,\n      dithering: material.dithering,\n      shadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n      shadowMapType: renderer.shadowMap.type,\n      toneMapping: renderer.toneMapping,\n      physicallyCorrectLights: renderer.physicallyCorrectLights,\n      premultipliedAlpha: material.premultipliedAlpha,\n      alphaTest: material.alphaTest,\n      doubleSided: material.side === DoubleSide,\n      flipSided: material.side === BackSide,\n      depthPacking: material.depthPacking !== undefined ? material.depthPacking : false\n    };\n    return parameters;\n  };\n\n  this.getProgramCode = function (material, parameters) {\n    var array = [];\n\n    if (parameters.shaderID) {\n      array.push(parameters.shaderID);\n    } else {\n      array.push(material.fragmentShader);\n      array.push(material.vertexShader);\n    }\n\n    if (material.defines !== undefined) {\n      for (var name in material.defines) {\n        array.push(name);\n        array.push(material.defines[name]);\n      }\n    }\n\n    for (var i = 0; i < parameterNames.length; i++) {\n      array.push(parameters[parameterNames[i]]);\n    }\n\n    array.push(material.onBeforeCompile.toString());\n    array.push(renderer.gammaOutput);\n    return array.join();\n  };\n\n  this.acquireProgram = function (material, shader, parameters, code) {\n    var program; // Check if code has been already compiled\n\n    for (var p = 0, pl = programs.length; p < pl; p++) {\n      var programInfo = programs[p];\n\n      if (programInfo.code === code) {\n        program = programInfo;\n        ++program.usedTimes;\n        break;\n      }\n    }\n\n    if (program === undefined) {\n      program = new WebGLProgram(renderer, extensions, code, material, shader, parameters);\n      programs.push(program);\n    }\n\n    return program;\n  };\n\n  this.releaseProgram = function (program) {\n    if (--program.usedTimes === 0) {\n      // Remove from unordered set\n      var i = programs.indexOf(program);\n      programs[i] = programs[programs.length - 1];\n      programs.pop(); // Free WebGL resources\n\n      program.destroy();\n    }\n  }; // Exposed for resource monitoring & error feedback via renderer.info:\n\n\n  this.programs = programs;\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLTextures(_gl, extensions, state, properties, capabilities, utils, infoMemory) {\n  var _isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext; //\n\n\n  function clampToMaxSize(image, maxSize) {\n    if (image.width > maxSize || image.height > maxSize) {\n      // Warning: Scaling through the canvas will only work with images that use\n      // premultiplied alpha.\n      var scale = maxSize / Math.max(image.width, image.height);\n      var canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n      canvas.width = Math.floor(image.width * scale);\n      canvas.height = Math.floor(image.height * scale);\n      var context = canvas.getContext('2d');\n      context.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n      console.warn('THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image);\n      return canvas;\n    }\n\n    return image;\n  }\n\n  function isPowerOfTwo(image) {\n    return _Math.isPowerOfTwo(image.width) && _Math.isPowerOfTwo(image.height);\n  }\n\n  function makePowerOfTwo(image) {\n    if (image instanceof HTMLImageElement || image instanceof HTMLCanvasElement) {\n      var canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n      canvas.width = _Math.nearestPowerOfTwo(image.width);\n      canvas.height = _Math.nearestPowerOfTwo(image.height);\n      var context = canvas.getContext('2d');\n      context.drawImage(image, 0, 0, canvas.width, canvas.height);\n      console.warn('THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image);\n      return canvas;\n    }\n\n    return image;\n  }\n\n  function textureNeedsPowerOfTwo(texture) {\n    return texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n  }\n\n  function textureNeedsGenerateMipmaps(texture, isPowerOfTwo) {\n    return texture.generateMipmaps && isPowerOfTwo && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n  } // Fallback filters for non-power-of-2 textures\n\n\n  function filterFallback(f) {\n    if (f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter) {\n      return _gl.NEAREST;\n    }\n\n    return _gl.LINEAR;\n  } //\n\n\n  function onTextureDispose(event) {\n    var texture = event.target;\n    texture.removeEventListener('dispose', onTextureDispose);\n    deallocateTexture(texture);\n    infoMemory.textures--;\n  }\n\n  function onRenderTargetDispose(event) {\n    var renderTarget = event.target;\n    renderTarget.removeEventListener('dispose', onRenderTargetDispose);\n    deallocateRenderTarget(renderTarget);\n    infoMemory.textures--;\n  } //\n\n\n  function deallocateTexture(texture) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.image && textureProperties.__image__webglTextureCube) {\n      // cube texture\n      _gl.deleteTexture(textureProperties.__image__webglTextureCube);\n    } else {\n      // 2D texture\n      if (textureProperties.__webglInit === undefined) return;\n\n      _gl.deleteTexture(textureProperties.__webglTexture);\n    } // remove all webgl properties\n\n\n    properties.remove(texture);\n  }\n\n  function deallocateRenderTarget(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var textureProperties = properties.get(renderTarget.texture);\n    if (!renderTarget) return;\n\n    if (textureProperties.__webglTexture !== undefined) {\n      _gl.deleteTexture(textureProperties.__webglTexture);\n    }\n\n    if (renderTarget.depthTexture) {\n      renderTarget.depthTexture.dispose();\n    }\n\n    if (renderTarget.isWebGLRenderTargetCube) {\n      for (var i = 0; i < 6; i++) {\n        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n        if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n      }\n    } else {\n      _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n      if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n    }\n\n    properties.remove(renderTarget.texture);\n    properties.remove(renderTarget);\n  } //\n\n\n  function setTexture2D(texture, slot) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.version > 0 && textureProperties.__version !== texture.version) {\n      var image = texture.image;\n\n      if (image === undefined) {\n        console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined', texture);\n      } else if (image.complete === false) {\n        console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture);\n      } else {\n        uploadTexture(textureProperties, texture, slot);\n        return;\n      }\n    }\n\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n  }\n\n  function setTextureCube(texture, slot) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.image.length === 6) {\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        if (!textureProperties.__image__webglTextureCube) {\n          texture.addEventListener('dispose', onTextureDispose);\n          textureProperties.__image__webglTextureCube = _gl.createTexture();\n          infoMemory.textures++;\n        }\n\n        state.activeTexture(_gl.TEXTURE0 + slot);\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n\n        _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n        var isCompressed = texture && texture.isCompressedTexture;\n        var isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\n        var cubeImage = [];\n\n        for (var i = 0; i < 6; i++) {\n          if (!isCompressed && !isDataTexture) {\n            cubeImage[i] = clampToMaxSize(texture.image[i], capabilities.maxCubemapSize);\n          } else {\n            cubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n          }\n        }\n\n        var image = cubeImage[0],\n            isPowerOfTwoImage = isPowerOfTwo(image),\n            glFormat = utils.convert(texture.format),\n            glType = utils.convert(texture.type);\n        setTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage);\n\n        for (var i = 0; i < 6; i++) {\n          if (!isCompressed) {\n            if (isDataTexture) {\n              state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n            } else {\n              state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[i]);\n            }\n          } else {\n            var mipmap,\n                mipmaps = cubeImage[i].mipmaps;\n\n            for (var j = 0, jl = mipmaps.length; j < jl; j++) {\n              mipmap = mipmaps[j];\n\n              if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n                if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n                  state.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n                } else {\n                  console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');\n                }\n              } else {\n                state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n              }\n            }\n          }\n        }\n\n        if (textureNeedsGenerateMipmaps(texture, isPowerOfTwoImage)) {\n          _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n        }\n\n        textureProperties.__version = texture.version;\n        if (texture.onUpdate) texture.onUpdate(texture);\n      } else {\n        state.activeTexture(_gl.TEXTURE0 + slot);\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n      }\n    }\n  }\n\n  function setTextureCubeDynamic(texture, slot) {\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_CUBE_MAP, properties.get(texture).__webglTexture);\n  }\n\n  function setTextureParameters(textureType, texture, isPowerOfTwoImage) {\n    var extension;\n\n    if (isPowerOfTwoImage) {\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, utils.convert(texture.wrapS));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, utils.convert(texture.wrapT));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, utils.convert(texture.magFilter));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, utils.convert(texture.minFilter));\n    } else {\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n\n      if (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\n        console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture);\n      }\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\n\n      if (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\n        console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture);\n      }\n    }\n\n    extension = extensions.get('EXT_texture_filter_anisotropic');\n\n    if (extension) {\n      if (texture.type === FloatType && extensions.get('OES_texture_float_linear') === null) return;\n      if (texture.type === HalfFloatType && extensions.get('OES_texture_half_float_linear') === null) return;\n\n      if (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n        _gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\n\n        properties.get(texture).__currentAnisotropy = texture.anisotropy;\n      }\n    }\n  }\n\n  function uploadTexture(textureProperties, texture, slot) {\n    if (textureProperties.__webglInit === undefined) {\n      textureProperties.__webglInit = true;\n      texture.addEventListener('dispose', onTextureDispose);\n      textureProperties.__webglTexture = _gl.createTexture();\n      infoMemory.textures++;\n    }\n\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n\n    _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n    _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n    _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n    var image = clampToMaxSize(texture.image, capabilities.maxTextureSize);\n\n    if (textureNeedsPowerOfTwo(texture) && isPowerOfTwo(image) === false) {\n      image = makePowerOfTwo(image);\n    }\n\n    var isPowerOfTwoImage = isPowerOfTwo(image),\n        glFormat = utils.convert(texture.format),\n        glType = utils.convert(texture.type);\n    setTextureParameters(_gl.TEXTURE_2D, texture, isPowerOfTwoImage);\n    var mipmap,\n        mipmaps = texture.mipmaps;\n\n    if (texture.isDepthTexture) {\n      // populate depth texture with dummy data\n      var internalFormat = _gl.DEPTH_COMPONENT;\n\n      if (texture.type === FloatType) {\n        if (!_isWebGL2) throw new Error('Float Depth Texture only supported in WebGL2.0');\n        internalFormat = _gl.DEPTH_COMPONENT32F;\n      } else if (_isWebGL2) {\n        // WebGL 2.0 requires signed internalformat for glTexImage2D\n        internalFormat = _gl.DEPTH_COMPONENT16;\n      }\n\n      if (texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT) {\n        // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n        // DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n        // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n        if (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\n          console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');\n          texture.type = UnsignedShortType;\n          glType = utils.convert(texture.type);\n        }\n      } // Depth stencil textures need the DEPTH_STENCIL internal format\n      // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n\n      if (texture.format === DepthStencilFormat) {\n        internalFormat = _gl.DEPTH_STENCIL; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n        // DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n        // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n        if (texture.type !== UnsignedInt248Type) {\n          console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');\n          texture.type = UnsignedInt248Type;\n          glType = utils.convert(texture.type);\n        }\n      }\n\n      state.texImage2D(_gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null);\n    } else if (texture.isDataTexture) {\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n      if (mipmaps.length > 0 && isPowerOfTwoImage) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n        }\n\n        texture.generateMipmaps = false;\n      } else {\n        state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data);\n      }\n    } else if (texture.isCompressedTexture) {\n      for (var i = 0, il = mipmaps.length; i < il; i++) {\n        mipmap = mipmaps[i];\n\n        if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n          if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n            state.compressedTexImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n          } else {\n            console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');\n          }\n        } else {\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n        }\n      }\n    } else {\n      // regular Texture (image, video, canvas)\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n      if (mipmaps.length > 0 && isPowerOfTwoImage) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap);\n        }\n\n        texture.generateMipmaps = false;\n      } else {\n        state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image);\n      }\n    }\n\n    if (textureNeedsGenerateMipmaps(texture, isPowerOfTwoImage)) _gl.generateMipmap(_gl.TEXTURE_2D);\n    textureProperties.__version = texture.version;\n    if (texture.onUpdate) texture.onUpdate(texture);\n  } // Render targets\n  // Setup storage for target texture and bind it to correct framebuffer\n\n\n  function setupFrameBufferTexture(framebuffer, renderTarget, attachment, textureTarget) {\n    var glFormat = utils.convert(renderTarget.texture.format);\n    var glType = utils.convert(renderTarget.texture.type);\n    state.texImage2D(textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n    _gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(renderTarget.texture).__webglTexture, 0);\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n  } // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n  function setupRenderBufferStorage(renderbuffer, renderTarget) {\n    _gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n\n    if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height);\n\n      _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n    } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n\n      _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n    } else {\n      // FIXME: We don't support !depth !stencil\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height);\n    }\n\n    _gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n  } // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n  function setupDepthTexture(framebuffer, renderTarget) {\n    var isCube = renderTarget && renderTarget.isWebGLRenderTargetCube;\n    if (isCube) throw new Error('Depth Texture with cube render targets is not supported');\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n    if (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\n      throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n    } // upload an empty depth texture with framebuffer size\n\n\n    if (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n      renderTarget.depthTexture.image.width = renderTarget.width;\n      renderTarget.depthTexture.image.height = renderTarget.height;\n      renderTarget.depthTexture.needsUpdate = true;\n    }\n\n    setTexture2D(renderTarget.depthTexture, 0);\n\n    var webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n    if (renderTarget.depthTexture.format === DepthFormat) {\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n    } else if (renderTarget.depthTexture.format === DepthStencilFormat) {\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n    } else {\n      throw new Error('Unknown depthTexture format');\n    }\n  } // Setup GL resources for a non-texture depth buffer\n\n\n  function setupDepthRenderbuffer(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var isCube = renderTarget.isWebGLRenderTargetCube === true;\n\n    if (renderTarget.depthTexture) {\n      if (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n      setupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n    } else {\n      if (isCube) {\n        renderTargetProperties.__webglDepthbuffer = [];\n\n        for (var i = 0; i < 6; i++) {\n          _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\n\n          renderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n          setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget);\n        }\n      } else {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\n        renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n        setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget);\n      }\n    }\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n  } // Set up GL resources for the render target\n\n\n  function setupRenderTarget(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var textureProperties = properties.get(renderTarget.texture);\n    renderTarget.addEventListener('dispose', onRenderTargetDispose);\n    textureProperties.__webglTexture = _gl.createTexture();\n    infoMemory.textures++;\n    var isCube = renderTarget.isWebGLRenderTargetCube === true;\n    var isTargetPowerOfTwo = isPowerOfTwo(renderTarget); // Setup framebuffer\n\n    if (isCube) {\n      renderTargetProperties.__webglFramebuffer = [];\n\n      for (var i = 0; i < 6; i++) {\n        renderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n      }\n    } else {\n      renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n    } // Setup color buffer\n\n\n    if (isCube) {\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n      setTextureParameters(_gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo);\n\n      for (var i = 0; i < 6; i++) {\n        setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n      }\n\n      if (textureNeedsGenerateMipmaps(renderTarget.texture, isTargetPowerOfTwo)) _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n    } else {\n      state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n      setTextureParameters(_gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo);\n      setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D);\n      if (textureNeedsGenerateMipmaps(renderTarget.texture, isTargetPowerOfTwo)) _gl.generateMipmap(_gl.TEXTURE_2D);\n      state.bindTexture(_gl.TEXTURE_2D, null);\n    } // Setup depth and stencil buffers\n\n\n    if (renderTarget.depthBuffer) {\n      setupDepthRenderbuffer(renderTarget);\n    }\n  }\n\n  function updateRenderTargetMipmap(renderTarget) {\n    var texture = renderTarget.texture;\n    var isTargetPowerOfTwo = isPowerOfTwo(renderTarget);\n\n    if (textureNeedsGenerateMipmaps(texture, isTargetPowerOfTwo)) {\n      var target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\n      var webglTexture = properties.get(texture).__webglTexture;\n\n      state.bindTexture(target, webglTexture);\n\n      _gl.generateMipmap(target);\n\n      state.bindTexture(target, null);\n    }\n  }\n\n  this.setTexture2D = setTexture2D;\n  this.setTextureCube = setTextureCube;\n  this.setTextureCubeDynamic = setTextureCubeDynamic;\n  this.setupRenderTarget = setupRenderTarget;\n  this.updateRenderTargetMipmap = updateRenderTargetMipmap;\n}\n/**\n * @author fordacious / fordacious.github.io\n */\n\n\nfunction WebGLProperties() {\n  var properties = {};\n\n  function get(object) {\n    var uuid = object.uuid;\n    var map = properties[uuid];\n\n    if (map === undefined) {\n      map = {};\n      properties[uuid] = map;\n    }\n\n    return map;\n  }\n\n  function remove(object) {\n    delete properties[object.uuid];\n  }\n\n  function clear() {\n    properties = {};\n  }\n\n  return {\n    get: get,\n    remove: remove,\n    clear: clear\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLState(gl, extensions, utils) {\n  function ColorBuffer() {\n    var locked = false;\n    var color = new Vector4();\n    var currentColorMask = null;\n    var currentColorClear = new Vector4(0, 0, 0, 0);\n    return {\n      setMask: function (colorMask) {\n        if (currentColorMask !== colorMask && !locked) {\n          gl.colorMask(colorMask, colorMask, colorMask, colorMask);\n          currentColorMask = colorMask;\n        }\n      },\n      setLocked: function (lock) {\n        locked = lock;\n      },\n      setClear: function (r, g, b, a, premultipliedAlpha) {\n        if (premultipliedAlpha === true) {\n          r *= a;\n          g *= a;\n          b *= a;\n        }\n\n        color.set(r, g, b, a);\n\n        if (currentColorClear.equals(color) === false) {\n          gl.clearColor(r, g, b, a);\n          currentColorClear.copy(color);\n        }\n      },\n      reset: function () {\n        locked = false;\n        currentColorMask = null;\n        currentColorClear.set(-1, 0, 0, 0); // set to invalid state\n      }\n    };\n  }\n\n  function DepthBuffer() {\n    var locked = false;\n    var currentDepthMask = null;\n    var currentDepthFunc = null;\n    var currentDepthClear = null;\n    return {\n      setTest: function (depthTest) {\n        if (depthTest) {\n          enable(gl.DEPTH_TEST);\n        } else {\n          disable(gl.DEPTH_TEST);\n        }\n      },\n      setMask: function (depthMask) {\n        if (currentDepthMask !== depthMask && !locked) {\n          gl.depthMask(depthMask);\n          currentDepthMask = depthMask;\n        }\n      },\n      setFunc: function (depthFunc) {\n        if (currentDepthFunc !== depthFunc) {\n          if (depthFunc) {\n            switch (depthFunc) {\n              case NeverDepth:\n                gl.depthFunc(gl.NEVER);\n                break;\n\n              case AlwaysDepth:\n                gl.depthFunc(gl.ALWAYS);\n                break;\n\n              case LessDepth:\n                gl.depthFunc(gl.LESS);\n                break;\n\n              case LessEqualDepth:\n                gl.depthFunc(gl.LEQUAL);\n                break;\n\n              case EqualDepth:\n                gl.depthFunc(gl.EQUAL);\n                break;\n\n              case GreaterEqualDepth:\n                gl.depthFunc(gl.GEQUAL);\n                break;\n\n              case GreaterDepth:\n                gl.depthFunc(gl.GREATER);\n                break;\n\n              case NotEqualDepth:\n                gl.depthFunc(gl.NOTEQUAL);\n                break;\n\n              default:\n                gl.depthFunc(gl.LEQUAL);\n            }\n          } else {\n            gl.depthFunc(gl.LEQUAL);\n          }\n\n          currentDepthFunc = depthFunc;\n        }\n      },\n      setLocked: function (lock) {\n        locked = lock;\n      },\n      setClear: function (depth) {\n        if (currentDepthClear !== depth) {\n          gl.clearDepth(depth);\n          currentDepthClear = depth;\n        }\n      },\n      reset: function () {\n        locked = false;\n        currentDepthMask = null;\n        currentDepthFunc = null;\n        currentDepthClear = null;\n      }\n    };\n  }\n\n  function StencilBuffer() {\n    var locked = false;\n    var currentStencilMask = null;\n    var currentStencilFunc = null;\n    var currentStencilRef = null;\n    var currentStencilFuncMask = null;\n    var currentStencilFail = null;\n    var currentStencilZFail = null;\n    var currentStencilZPass = null;\n    var currentStencilClear = null;\n    return {\n      setTest: function (stencilTest) {\n        if (stencilTest) {\n          enable(gl.STENCIL_TEST);\n        } else {\n          disable(gl.STENCIL_TEST);\n        }\n      },\n      setMask: function (stencilMask) {\n        if (currentStencilMask !== stencilMask && !locked) {\n          gl.stencilMask(stencilMask);\n          currentStencilMask = stencilMask;\n        }\n      },\n      setFunc: function (stencilFunc, stencilRef, stencilMask) {\n        if (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n          gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n          currentStencilFunc = stencilFunc;\n          currentStencilRef = stencilRef;\n          currentStencilFuncMask = stencilMask;\n        }\n      },\n      setOp: function (stencilFail, stencilZFail, stencilZPass) {\n        if (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n          gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n          currentStencilFail = stencilFail;\n          currentStencilZFail = stencilZFail;\n          currentStencilZPass = stencilZPass;\n        }\n      },\n      setLocked: function (lock) {\n        locked = lock;\n      },\n      setClear: function (stencil) {\n        if (currentStencilClear !== stencil) {\n          gl.clearStencil(stencil);\n          currentStencilClear = stencil;\n        }\n      },\n      reset: function () {\n        locked = false;\n        currentStencilMask = null;\n        currentStencilFunc = null;\n        currentStencilRef = null;\n        currentStencilFuncMask = null;\n        currentStencilFail = null;\n        currentStencilZFail = null;\n        currentStencilZPass = null;\n        currentStencilClear = null;\n      }\n    };\n  } //\n\n\n  var colorBuffer = new ColorBuffer();\n  var depthBuffer = new DepthBuffer();\n  var stencilBuffer = new StencilBuffer();\n  var maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n  var newAttributes = new Uint8Array(maxVertexAttributes);\n  var enabledAttributes = new Uint8Array(maxVertexAttributes);\n  var attributeDivisors = new Uint8Array(maxVertexAttributes);\n  var capabilities = {};\n  var compressedTextureFormats = null;\n  var currentProgram = null;\n  var currentBlending = null;\n  var currentBlendEquation = null;\n  var currentBlendSrc = null;\n  var currentBlendDst = null;\n  var currentBlendEquationAlpha = null;\n  var currentBlendSrcAlpha = null;\n  var currentBlendDstAlpha = null;\n  var currentPremultipledAlpha = false;\n  var currentFlipSided = null;\n  var currentCullFace = null;\n  var currentLineWidth = null;\n  var currentPolygonOffsetFactor = null;\n  var currentPolygonOffsetUnits = null;\n  var maxTextures = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n  var version = parseFloat(/^WebGL\\ ([0-9])/.exec(gl.getParameter(gl.VERSION))[1]);\n  var lineWidthAvailable = parseFloat(version) >= 1.0;\n  var currentTextureSlot = null;\n  var currentBoundTextures = {};\n  var currentScissor = new Vector4();\n  var currentViewport = new Vector4();\n\n  function createTexture(type, target, count) {\n    var data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n    var texture = gl.createTexture();\n    gl.bindTexture(type, texture);\n    gl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    for (var i = 0; i < count; i++) {\n      gl.texImage2D(target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    }\n\n    return texture;\n  }\n\n  var emptyTextures = {};\n  emptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\n  emptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6); // init\n\n  colorBuffer.setClear(0, 0, 0, 1);\n  depthBuffer.setClear(1);\n  stencilBuffer.setClear(0);\n  enable(gl.DEPTH_TEST);\n  depthBuffer.setFunc(LessEqualDepth);\n  setFlipSided(false);\n  setCullFace(CullFaceBack);\n  enable(gl.CULL_FACE);\n  enable(gl.BLEND);\n  setBlending(NormalBlending); //\n\n  function initAttributes() {\n    for (var i = 0, l = newAttributes.length; i < l; i++) {\n      newAttributes[i] = 0;\n    }\n  }\n\n  function enableAttribute(attribute) {\n    newAttributes[attribute] = 1;\n\n    if (enabledAttributes[attribute] === 0) {\n      gl.enableVertexAttribArray(attribute);\n      enabledAttributes[attribute] = 1;\n    }\n\n    if (attributeDivisors[attribute] !== 0) {\n      var extension = extensions.get('ANGLE_instanced_arrays');\n      extension.vertexAttribDivisorANGLE(attribute, 0);\n      attributeDivisors[attribute] = 0;\n    }\n  }\n\n  function enableAttributeAndDivisor(attribute, meshPerAttribute) {\n    newAttributes[attribute] = 1;\n\n    if (enabledAttributes[attribute] === 0) {\n      gl.enableVertexAttribArray(attribute);\n      enabledAttributes[attribute] = 1;\n    }\n\n    if (attributeDivisors[attribute] !== meshPerAttribute) {\n      var extension = extensions.get('ANGLE_instanced_arrays');\n      extension.vertexAttribDivisorANGLE(attribute, meshPerAttribute);\n      attributeDivisors[attribute] = meshPerAttribute;\n    }\n  }\n\n  function disableUnusedAttributes() {\n    for (var i = 0, l = enabledAttributes.length; i !== l; ++i) {\n      if (enabledAttributes[i] !== newAttributes[i]) {\n        gl.disableVertexAttribArray(i);\n        enabledAttributes[i] = 0;\n      }\n    }\n  }\n\n  function enable(id) {\n    if (capabilities[id] !== true) {\n      gl.enable(id);\n      capabilities[id] = true;\n    }\n  }\n\n  function disable(id) {\n    if (capabilities[id] !== false) {\n      gl.disable(id);\n      capabilities[id] = false;\n    }\n  }\n\n  function getCompressedTextureFormats() {\n    if (compressedTextureFormats === null) {\n      compressedTextureFormats = [];\n\n      if (extensions.get('WEBGL_compressed_texture_pvrtc') || extensions.get('WEBGL_compressed_texture_s3tc') || extensions.get('WEBGL_compressed_texture_etc1')) {\n        var formats = gl.getParameter(gl.COMPRESSED_TEXTURE_FORMATS);\n\n        for (var i = 0; i < formats.length; i++) {\n          compressedTextureFormats.push(formats[i]);\n        }\n      }\n    }\n\n    return compressedTextureFormats;\n  }\n\n  function useProgram(program) {\n    if (currentProgram !== program) {\n      gl.useProgram(program);\n      currentProgram = program;\n      return true;\n    }\n\n    return false;\n  }\n\n  function setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n    if (blending !== NoBlending) {\n      enable(gl.BLEND);\n    } else {\n      disable(gl.BLEND);\n    }\n\n    if (blending !== CustomBlending) {\n      if (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n        switch (blending) {\n          case AdditiveBlending:\n            if (premultipliedAlpha) {\n              gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n              gl.blendFuncSeparate(gl.ONE, gl.ONE, gl.ONE, gl.ONE);\n            } else {\n              gl.blendEquation(gl.FUNC_ADD);\n              gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n            }\n\n            break;\n\n          case SubtractiveBlending:\n            if (premultipliedAlpha) {\n              gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n              gl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n            } else {\n              gl.blendEquation(gl.FUNC_ADD);\n              gl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n            }\n\n            break;\n\n          case MultiplyBlending:\n            if (premultipliedAlpha) {\n              gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n              gl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n            } else {\n              gl.blendEquation(gl.FUNC_ADD);\n              gl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n            }\n\n            break;\n\n          default:\n            if (premultipliedAlpha) {\n              gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n              gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            } else {\n              gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n              gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            }\n\n        }\n      }\n\n      currentBlendEquation = null;\n      currentBlendSrc = null;\n      currentBlendDst = null;\n      currentBlendEquationAlpha = null;\n      currentBlendSrcAlpha = null;\n      currentBlendDstAlpha = null;\n    } else {\n      blendEquationAlpha = blendEquationAlpha || blendEquation;\n      blendSrcAlpha = blendSrcAlpha || blendSrc;\n      blendDstAlpha = blendDstAlpha || blendDst;\n\n      if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n        gl.blendEquationSeparate(utils.convert(blendEquation), utils.convert(blendEquationAlpha));\n        currentBlendEquation = blendEquation;\n        currentBlendEquationAlpha = blendEquationAlpha;\n      }\n\n      if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n        gl.blendFuncSeparate(utils.convert(blendSrc), utils.convert(blendDst), utils.convert(blendSrcAlpha), utils.convert(blendDstAlpha));\n        currentBlendSrc = blendSrc;\n        currentBlendDst = blendDst;\n        currentBlendSrcAlpha = blendSrcAlpha;\n        currentBlendDstAlpha = blendDstAlpha;\n      }\n    }\n\n    currentBlending = blending;\n    currentPremultipledAlpha = premultipliedAlpha;\n  }\n\n  function setMaterial(material) {\n    material.side === DoubleSide ? disable(gl.CULL_FACE) : enable(gl.CULL_FACE);\n    setFlipSided(material.side === BackSide);\n    material.transparent === true ? setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha) : setBlending(NoBlending);\n    depthBuffer.setFunc(material.depthFunc);\n    depthBuffer.setTest(material.depthTest);\n    depthBuffer.setMask(material.depthWrite);\n    colorBuffer.setMask(material.colorWrite);\n    setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n  } //\n\n\n  function setFlipSided(flipSided) {\n    if (currentFlipSided !== flipSided) {\n      if (flipSided) {\n        gl.frontFace(gl.CW);\n      } else {\n        gl.frontFace(gl.CCW);\n      }\n\n      currentFlipSided = flipSided;\n    }\n  }\n\n  function setCullFace(cullFace) {\n    if (cullFace !== CullFaceNone) {\n      enable(gl.CULL_FACE);\n\n      if (cullFace !== currentCullFace) {\n        if (cullFace === CullFaceBack) {\n          gl.cullFace(gl.BACK);\n        } else if (cullFace === CullFaceFront) {\n          gl.cullFace(gl.FRONT);\n        } else {\n          gl.cullFace(gl.FRONT_AND_BACK);\n        }\n      }\n    } else {\n      disable(gl.CULL_FACE);\n    }\n\n    currentCullFace = cullFace;\n  }\n\n  function setLineWidth(width) {\n    if (width !== currentLineWidth) {\n      if (lineWidthAvailable) gl.lineWidth(width);\n      currentLineWidth = width;\n    }\n  }\n\n  function setPolygonOffset(polygonOffset, factor, units) {\n    if (polygonOffset) {\n      enable(gl.POLYGON_OFFSET_FILL);\n\n      if (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n        gl.polygonOffset(factor, units);\n        currentPolygonOffsetFactor = factor;\n        currentPolygonOffsetUnits = units;\n      }\n    } else {\n      disable(gl.POLYGON_OFFSET_FILL);\n    }\n  }\n\n  function setScissorTest(scissorTest) {\n    if (scissorTest) {\n      enable(gl.SCISSOR_TEST);\n    } else {\n      disable(gl.SCISSOR_TEST);\n    }\n  } // texture\n\n\n  function activeTexture(webglSlot) {\n    if (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n    if (currentTextureSlot !== webglSlot) {\n      gl.activeTexture(webglSlot);\n      currentTextureSlot = webglSlot;\n    }\n  }\n\n  function bindTexture(webglType, webglTexture) {\n    if (currentTextureSlot === null) {\n      activeTexture();\n    }\n\n    var boundTexture = currentBoundTextures[currentTextureSlot];\n\n    if (boundTexture === undefined) {\n      boundTexture = {\n        type: undefined,\n        texture: undefined\n      };\n      currentBoundTextures[currentTextureSlot] = boundTexture;\n    }\n\n    if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n      gl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n      boundTexture.type = webglType;\n      boundTexture.texture = webglTexture;\n    }\n  }\n\n  function compressedTexImage2D() {\n    try {\n      gl.compressedTexImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texImage2D() {\n    try {\n      gl.texImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  } //\n\n\n  function scissor(scissor) {\n    if (currentScissor.equals(scissor) === false) {\n      gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n      currentScissor.copy(scissor);\n    }\n  }\n\n  function viewport(viewport) {\n    if (currentViewport.equals(viewport) === false) {\n      gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n      currentViewport.copy(viewport);\n    }\n  } //\n\n\n  function reset() {\n    for (var i = 0; i < enabledAttributes.length; i++) {\n      if (enabledAttributes[i] === 1) {\n        gl.disableVertexAttribArray(i);\n        enabledAttributes[i] = 0;\n      }\n    }\n\n    capabilities = {};\n    compressedTextureFormats = null;\n    currentTextureSlot = null;\n    currentBoundTextures = {};\n    currentProgram = null;\n    currentBlending = null;\n    currentFlipSided = null;\n    currentCullFace = null;\n    colorBuffer.reset();\n    depthBuffer.reset();\n    stencilBuffer.reset();\n  }\n\n  return {\n    buffers: {\n      color: colorBuffer,\n      depth: depthBuffer,\n      stencil: stencilBuffer\n    },\n    initAttributes: initAttributes,\n    enableAttribute: enableAttribute,\n    enableAttributeAndDivisor: enableAttributeAndDivisor,\n    disableUnusedAttributes: disableUnusedAttributes,\n    enable: enable,\n    disable: disable,\n    getCompressedTextureFormats: getCompressedTextureFormats,\n    useProgram: useProgram,\n    setBlending: setBlending,\n    setMaterial: setMaterial,\n    setFlipSided: setFlipSided,\n    setCullFace: setCullFace,\n    setLineWidth: setLineWidth,\n    setPolygonOffset: setPolygonOffset,\n    setScissorTest: setScissorTest,\n    activeTexture: activeTexture,\n    bindTexture: bindTexture,\n    compressedTexImage2D: compressedTexImage2D,\n    texImage2D: texImage2D,\n    scissor: scissor,\n    viewport: viewport,\n    reset: reset\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLCapabilities(gl, extensions, parameters) {\n  var maxAnisotropy;\n\n  function getMaxAnisotropy() {\n    if (maxAnisotropy !== undefined) return maxAnisotropy;\n    var extension = extensions.get('EXT_texture_filter_anisotropic');\n\n    if (extension !== null) {\n      maxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n    } else {\n      maxAnisotropy = 0;\n    }\n\n    return maxAnisotropy;\n  }\n\n  function getMaxPrecision(precision) {\n    if (precision === 'highp') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n        return 'highp';\n      }\n\n      precision = 'mediump';\n    }\n\n    if (precision === 'mediump') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n        return 'mediump';\n      }\n    }\n\n    return 'lowp';\n  }\n\n  var precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n  var maxPrecision = getMaxPrecision(precision);\n\n  if (maxPrecision !== precision) {\n    console.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n    precision = maxPrecision;\n  }\n\n  var logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true && !!extensions.get('EXT_frag_depth');\n  var maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  var maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n  var maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n  var maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n  var maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n  var maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n  var maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n  var maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n  var vertexTextures = maxVertexTextures > 0;\n  var floatFragmentTextures = !!extensions.get('OES_texture_float');\n  var floatVertexTextures = vertexTextures && floatFragmentTextures;\n  return {\n    getMaxAnisotropy: getMaxAnisotropy,\n    getMaxPrecision: getMaxPrecision,\n    precision: precision,\n    logarithmicDepthBuffer: logarithmicDepthBuffer,\n    maxTextures: maxTextures,\n    maxVertexTextures: maxVertexTextures,\n    maxTextureSize: maxTextureSize,\n    maxCubemapSize: maxCubemapSize,\n    maxAttributes: maxAttributes,\n    maxVertexUniforms: maxVertexUniforms,\n    maxVaryings: maxVaryings,\n    maxFragmentUniforms: maxFragmentUniforms,\n    vertexTextures: vertexTextures,\n    floatFragmentTextures: floatFragmentTextures,\n    floatVertexTextures: floatVertexTextures\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction ArrayCamera(array) {\n  PerspectiveCamera.call(this);\n  this.cameras = array || [];\n}\n\nArrayCamera.prototype = Object.assign(Object.create(PerspectiveCamera.prototype), {\n  constructor: ArrayCamera,\n  isArrayCamera: true\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager(renderer) {\n  var scope = this;\n  var device = null;\n  var frameData = null;\n\n  if ('VRFrameData' in window) {\n    frameData = new window.VRFrameData();\n  }\n\n  var matrixWorldInverse = new Matrix4();\n  var standingMatrix = new Matrix4();\n  var standingMatrixInverse = new Matrix4();\n  var cameraL = new PerspectiveCamera();\n  cameraL.bounds = new Vector4(0.0, 0.0, 0.5, 1.0);\n  cameraL.layers.enable(1);\n  var cameraR = new PerspectiveCamera();\n  cameraR.bounds = new Vector4(0.5, 0.0, 0.5, 1.0);\n  cameraR.layers.enable(2);\n  var cameraVR = new ArrayCamera([cameraL, cameraR]);\n  cameraVR.layers.enable(1);\n  cameraVR.layers.enable(2); //\n\n  var currentSize, currentPixelRatio;\n\n  function onVRDisplayPresentChange() {\n    if (device !== null && device.isPresenting) {\n      var eyeParameters = device.getEyeParameters('left');\n      var renderWidth = eyeParameters.renderWidth;\n      var renderHeight = eyeParameters.renderHeight;\n      currentPixelRatio = renderer.getPixelRatio();\n      currentSize = renderer.getSize();\n      renderer.setDrawingBufferSize(renderWidth * 2, renderHeight, 1);\n    } else if (scope.enabled) {\n      renderer.setDrawingBufferSize(currentSize.width, currentSize.height, currentPixelRatio);\n    }\n  }\n\n  window.addEventListener('vrdisplaypresentchange', onVRDisplayPresentChange, false); //\n\n  this.enabled = false;\n  this.standing = false;\n\n  this.getDevice = function () {\n    return device;\n  };\n\n  this.setDevice = function (value) {\n    if (value !== undefined) device = value;\n  };\n\n  this.getCamera = function (camera) {\n    if (device === null) return camera;\n    device.depthNear = camera.near;\n    device.depthFar = camera.far;\n    device.getFrameData(frameData); //\n\n    var pose = frameData.pose;\n\n    if (pose.position !== null) {\n      camera.position.fromArray(pose.position);\n    } else {\n      camera.position.set(0, 0, 0);\n    }\n\n    if (pose.orientation !== null) {\n      camera.quaternion.fromArray(pose.orientation);\n    }\n\n    camera.updateMatrixWorld();\n    var stageParameters = device.stageParameters;\n\n    if (this.standing && stageParameters) {\n      standingMatrix.fromArray(stageParameters.sittingToStandingTransform);\n      standingMatrixInverse.getInverse(standingMatrix);\n      camera.matrixWorld.multiply(standingMatrix);\n      camera.matrixWorldInverse.multiply(standingMatrixInverse);\n    }\n\n    if (device.isPresenting === false) return camera; //\n\n    cameraL.near = camera.near;\n    cameraR.near = camera.near;\n    cameraL.far = camera.far;\n    cameraR.far = camera.far;\n    cameraVR.matrixWorld.copy(camera.matrixWorld);\n    cameraVR.matrixWorldInverse.copy(camera.matrixWorldInverse);\n    cameraL.matrixWorldInverse.fromArray(frameData.leftViewMatrix);\n    cameraR.matrixWorldInverse.fromArray(frameData.rightViewMatrix);\n\n    if (this.standing && stageParameters) {\n      cameraL.matrixWorldInverse.multiply(standingMatrixInverse);\n      cameraR.matrixWorldInverse.multiply(standingMatrixInverse);\n    }\n\n    var parent = camera.parent;\n\n    if (parent !== null) {\n      matrixWorldInverse.getInverse(parent.matrixWorld);\n      cameraL.matrixWorldInverse.multiply(matrixWorldInverse);\n      cameraR.matrixWorldInverse.multiply(matrixWorldInverse);\n    } // envMap and Mirror needs camera.matrixWorld\n\n\n    cameraL.matrixWorld.getInverse(cameraL.matrixWorldInverse);\n    cameraR.matrixWorld.getInverse(cameraR.matrixWorldInverse);\n    cameraL.projectionMatrix.fromArray(frameData.leftProjectionMatrix);\n    cameraR.projectionMatrix.fromArray(frameData.rightProjectionMatrix); // HACK @mrdoob\n    // https://github.com/w3c/webvr/issues/203\n\n    cameraVR.projectionMatrix.copy(cameraL.projectionMatrix); //\n\n    var layers = device.getLayers();\n\n    if (layers.length) {\n      var layer = layers[0];\n\n      if (layer.leftBounds !== null && layer.leftBounds.length === 4) {\n        cameraL.bounds.fromArray(layer.leftBounds);\n      }\n\n      if (layer.rightBounds !== null && layer.rightBounds.length === 4) {\n        cameraR.bounds.fromArray(layer.rightBounds);\n      }\n    }\n\n    return cameraVR;\n  };\n\n  this.getStandingMatrix = function () {\n    return standingMatrix;\n  };\n\n  this.submitFrame = function () {\n    if (device && device.isPresenting) device.submitFrame();\n  };\n\n  this.dispose = function () {\n    window.removeEventListener('vrdisplaypresentchange', onVRDisplayPresentChange);\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLExtensions(gl) {\n  var extensions = {};\n  return {\n    get: function (name) {\n      if (extensions[name] !== undefined) {\n        return extensions[name];\n      }\n\n      var extension;\n\n      switch (name) {\n        case 'WEBGL_depth_texture':\n          extension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n          break;\n\n        case 'EXT_texture_filter_anisotropic':\n          extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n          break;\n\n        case 'WEBGL_compressed_texture_s3tc':\n          extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n          break;\n\n        case 'WEBGL_compressed_texture_pvrtc':\n          extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n          break;\n\n        case 'WEBGL_compressed_texture_etc1':\n          extension = gl.getExtension('WEBGL_compressed_texture_etc1');\n          break;\n\n        default:\n          extension = gl.getExtension(name);\n      }\n\n      if (extension === null) {\n        console.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n      }\n\n      extensions[name] = extension;\n      return extension;\n    }\n  };\n}\n/**\n * @author tschw\n */\n\n\nfunction WebGLClipping() {\n  var scope = this,\n      globalState = null,\n      numGlobalPlanes = 0,\n      localClippingEnabled = false,\n      renderingShadows = false,\n      plane = new Plane(),\n      viewNormalMatrix = new Matrix3(),\n      uniform = {\n    value: null,\n    needsUpdate: false\n  };\n  this.uniform = uniform;\n  this.numPlanes = 0;\n  this.numIntersection = 0;\n\n  this.init = function (planes, enableLocalClipping, camera) {\n    var enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n    // run another frame in order to reset the state:\n    numGlobalPlanes !== 0 || localClippingEnabled;\n    localClippingEnabled = enableLocalClipping;\n    globalState = projectPlanes(planes, camera, 0);\n    numGlobalPlanes = planes.length;\n    return enabled;\n  };\n\n  this.beginShadows = function () {\n    renderingShadows = true;\n    projectPlanes(null);\n  };\n\n  this.endShadows = function () {\n    renderingShadows = false;\n    resetGlobalState();\n  };\n\n  this.setState = function (planes, clipIntersection, clipShadows, camera, cache, fromCache) {\n    if (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n      // there's no local clipping\n      if (renderingShadows) {\n        // there's no global clipping\n        projectPlanes(null);\n      } else {\n        resetGlobalState();\n      }\n    } else {\n      var nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n          lGlobal = nGlobal * 4,\n          dstArray = cache.clippingState || null;\n      uniform.value = dstArray; // ensure unique state\n\n      dstArray = projectPlanes(planes, camera, lGlobal, fromCache);\n\n      for (var i = 0; i !== lGlobal; ++i) {\n        dstArray[i] = globalState[i];\n      }\n\n      cache.clippingState = dstArray;\n      this.numIntersection = clipIntersection ? this.numPlanes : 0;\n      this.numPlanes += nGlobal;\n    }\n  };\n\n  function resetGlobalState() {\n    if (uniform.value !== globalState) {\n      uniform.value = globalState;\n      uniform.needsUpdate = numGlobalPlanes > 0;\n    }\n\n    scope.numPlanes = numGlobalPlanes;\n    scope.numIntersection = 0;\n  }\n\n  function projectPlanes(planes, camera, dstOffset, skipTransform) {\n    var nPlanes = planes !== null ? planes.length : 0,\n        dstArray = null;\n\n    if (nPlanes !== 0) {\n      dstArray = uniform.value;\n\n      if (skipTransform !== true || dstArray === null) {\n        var flatSize = dstOffset + nPlanes * 4,\n            viewMatrix = camera.matrixWorldInverse;\n        viewNormalMatrix.getNormalMatrix(viewMatrix);\n\n        if (dstArray === null || dstArray.length < flatSize) {\n          dstArray = new Float32Array(flatSize);\n        }\n\n        for (var i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n          plane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n          plane.normal.toArray(dstArray, i4);\n          dstArray[i4 + 3] = plane.constant;\n        }\n      }\n\n      uniform.value = dstArray;\n      uniform.needsUpdate = true;\n    }\n\n    scope.numPlanes = nPlanes;\n    return dstArray;\n  }\n}\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\n\nfunction WebGLUtils(gl, extensions) {\n  function convert(p) {\n    var extension;\n    if (p === RepeatWrapping) return gl.REPEAT;\n    if (p === ClampToEdgeWrapping) return gl.CLAMP_TO_EDGE;\n    if (p === MirroredRepeatWrapping) return gl.MIRRORED_REPEAT;\n    if (p === NearestFilter) return gl.NEAREST;\n    if (p === NearestMipMapNearestFilter) return gl.NEAREST_MIPMAP_NEAREST;\n    if (p === NearestMipMapLinearFilter) return gl.NEAREST_MIPMAP_LINEAR;\n    if (p === LinearFilter) return gl.LINEAR;\n    if (p === LinearMipMapNearestFilter) return gl.LINEAR_MIPMAP_NEAREST;\n    if (p === LinearMipMapLinearFilter) return gl.LINEAR_MIPMAP_LINEAR;\n    if (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\n    if (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\n    if (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\n    if (p === UnsignedShort565Type) return gl.UNSIGNED_SHORT_5_6_5;\n    if (p === ByteType) return gl.BYTE;\n    if (p === ShortType) return gl.SHORT;\n    if (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\n    if (p === IntType) return gl.INT;\n    if (p === UnsignedIntType) return gl.UNSIGNED_INT;\n    if (p === FloatType) return gl.FLOAT;\n\n    if (p === HalfFloatType) {\n      extension = extensions.get('OES_texture_half_float');\n      if (extension !== null) return extension.HALF_FLOAT_OES;\n    }\n\n    if (p === AlphaFormat) return gl.ALPHA;\n    if (p === RGBFormat) return gl.RGB;\n    if (p === RGBAFormat) return gl.RGBA;\n    if (p === LuminanceFormat) return gl.LUMINANCE;\n    if (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\n    if (p === DepthFormat) return gl.DEPTH_COMPONENT;\n    if (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\n    if (p === AddEquation) return gl.FUNC_ADD;\n    if (p === SubtractEquation) return gl.FUNC_SUBTRACT;\n    if (p === ReverseSubtractEquation) return gl.FUNC_REVERSE_SUBTRACT;\n    if (p === ZeroFactor) return gl.ZERO;\n    if (p === OneFactor) return gl.ONE;\n    if (p === SrcColorFactor) return gl.SRC_COLOR;\n    if (p === OneMinusSrcColorFactor) return gl.ONE_MINUS_SRC_COLOR;\n    if (p === SrcAlphaFactor) return gl.SRC_ALPHA;\n    if (p === OneMinusSrcAlphaFactor) return gl.ONE_MINUS_SRC_ALPHA;\n    if (p === DstAlphaFactor) return gl.DST_ALPHA;\n    if (p === OneMinusDstAlphaFactor) return gl.ONE_MINUS_DST_ALPHA;\n    if (p === DstColorFactor) return gl.DST_COLOR;\n    if (p === OneMinusDstColorFactor) return gl.ONE_MINUS_DST_COLOR;\n    if (p === SrcAlphaSaturateFactor) return gl.SRC_ALPHA_SATURATE;\n\n    if (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n      if (extension !== null) {\n        if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n        if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n        if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n        if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n      }\n    }\n\n    if (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n      if (extension !== null) {\n        if (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n        if (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n        if (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n        if (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n      }\n    }\n\n    if (p === RGB_ETC1_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_etc1');\n      if (extension !== null) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n    }\n\n    if (p === MinEquation || p === MaxEquation) {\n      extension = extensions.get('EXT_blend_minmax');\n\n      if (extension !== null) {\n        if (p === MinEquation) return extension.MIN_EXT;\n        if (p === MaxEquation) return extension.MAX_EXT;\n      }\n    }\n\n    if (p === UnsignedInt248Type) {\n      extension = extensions.get('WEBGL_depth_texture');\n      if (extension !== null) return extension.UNSIGNED_INT_24_8_WEBGL;\n    }\n\n    return 0;\n  }\n\n  return {\n    convert: convert\n  };\n} // import { Sphere } from '../math/Sphere';\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\n\nfunction WebGLRenderer(parameters) {\n  console.log('THREE.WebGLRenderer', REVISION);\n  parameters = parameters || {};\n\n  var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas'),\n      _context = parameters.context !== undefined ? parameters.context : null,\n      _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n      _depth = parameters.depth !== undefined ? parameters.depth : true,\n      _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n      _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n      _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n      _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n  var lightsArray = [];\n  var shadowsArray = [];\n  var currentRenderList = null;\n  var spritesArray = [];\n  var flaresArray = []; // public properties\n\n  this.domElement = _canvas;\n  this.context = null; // clearing\n\n  this.autoClear = true;\n  this.autoClearColor = true;\n  this.autoClearDepth = true;\n  this.autoClearStencil = true; // scene graph\n\n  this.sortObjects = true; // user-defined clipping\n\n  this.clippingPlanes = [];\n  this.localClippingEnabled = false; // physically based shading\n\n  this.gammaFactor = 2.0; // for backwards compatibility\n\n  this.gammaInput = false;\n  this.gammaOutput = false; // physical lights\n\n  this.physicallyCorrectLights = false; // tone mapping\n\n  this.toneMapping = LinearToneMapping;\n  this.toneMappingExposure = 1.0;\n  this.toneMappingWhitePoint = 1.0; // morphs\n\n  this.maxMorphTargets = 8;\n  this.maxMorphNormals = 4; // internal properties\n\n  var _this = this,\n      _isContextLost = false,\n      // internal state cache\n  _currentRenderTarget = null,\n      _currentFramebuffer = null,\n      _currentMaterialId = -1,\n      _currentGeometryProgram = '',\n      _currentCamera = null,\n      _currentArrayCamera = null,\n      _currentViewport = new Vector4(),\n      _currentScissor = new Vector4(),\n      _currentScissorTest = null,\n      //\n  _usedTextureUnits = 0,\n      //\n  _width = _canvas.width,\n      _height = _canvas.height,\n      _pixelRatio = 1,\n      _viewport = new Vector4(0, 0, _width, _height),\n      _scissor = new Vector4(0, 0, _width, _height),\n      _scissorTest = false,\n      // frustum\n  _frustum = new Frustum(),\n      // clipping\n  _clipping = new WebGLClipping(),\n      _clippingEnabled = false,\n      _localClippingEnabled = false,\n      // camera matrices cache\n  _projScreenMatrix = new Matrix4(),\n      _vector3 = new Vector3(),\n      // info\n  _infoMemory = {\n    geometries: 0,\n    textures: 0\n  },\n      _infoRender = {\n    frame: 0,\n    calls: 0,\n    vertices: 0,\n    faces: 0,\n    points: 0\n  };\n\n  this.info = {\n    render: _infoRender,\n    memory: _infoMemory,\n    programs: null\n  };\n\n  function getTargetPixelRatio() {\n    return _currentRenderTarget === null ? _pixelRatio : 1;\n  } // initialize\n\n\n  var _gl;\n\n  try {\n    var contextAttributes = {\n      alpha: _alpha,\n      depth: _depth,\n      stencil: _stencil,\n      antialias: _antialias,\n      premultipliedAlpha: _premultipliedAlpha,\n      preserveDrawingBuffer: _preserveDrawingBuffer\n    };\n    _gl = _context || _canvas.getContext('webgl', contextAttributes) || _canvas.getContext('experimental-webgl', contextAttributes);\n\n    if (_gl === null) {\n      if (_canvas.getContext('webgl') !== null) {\n        throw 'Error creating WebGL context with your selected attributes.';\n      } else {\n        throw 'Error creating WebGL context.';\n      }\n    } // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n    if (_gl.getShaderPrecisionFormat === undefined) {\n      _gl.getShaderPrecisionFormat = function () {\n        return {\n          'rangeMin': 1,\n          'rangeMax': 1,\n          'precision': 1\n        };\n      };\n    }\n\n    _canvas.addEventListener('webglcontextlost', onContextLost, false);\n\n    _canvas.addEventListener('webglcontextrestored', onContextRestore, false);\n  } catch (error) {\n    console.error('THREE.WebGLRenderer: ' + error);\n  }\n\n  var extensions, capabilities, state;\n  var properties, textures, attributes, geometries, objects, lights;\n  var programCache, renderLists;\n  var background, morphtargets, bufferRenderer, indexedBufferRenderer;\n  var flareRenderer, spriteRenderer;\n  var utils;\n\n  function initGLContext() {\n    extensions = new WebGLExtensions(_gl);\n    extensions.get('WEBGL_depth_texture');\n    extensions.get('OES_texture_float');\n    extensions.get('OES_texture_float_linear');\n    extensions.get('OES_texture_half_float');\n    extensions.get('OES_texture_half_float_linear');\n    extensions.get('OES_standard_derivatives');\n    extensions.get('ANGLE_instanced_arrays');\n\n    if (extensions.get('OES_element_index_uint')) {\n      BufferGeometry.MaxIndex = 4294967296;\n    }\n\n    utils = new WebGLUtils(_gl, extensions);\n    capabilities = new WebGLCapabilities(_gl, extensions, parameters);\n    state = new WebGLState(_gl, extensions, utils);\n    state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio));\n    state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio));\n    properties = new WebGLProperties();\n    textures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils, _infoMemory);\n    attributes = new WebGLAttributes(_gl);\n    geometries = new WebGLGeometries(_gl, attributes, _infoMemory);\n    objects = new WebGLObjects(geometries, _infoRender);\n    morphtargets = new WebGLMorphtargets(_gl);\n    programCache = new WebGLPrograms(_this, extensions, capabilities);\n    lights = new WebGLLights();\n    renderLists = new WebGLRenderLists();\n    background = new WebGLBackground(_this, state, geometries, _premultipliedAlpha);\n    bufferRenderer = new WebGLBufferRenderer(_gl, extensions, _infoRender);\n    indexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, _infoRender);\n    flareRenderer = new WebGLFlareRenderer(_this, _gl, state, textures, capabilities);\n    spriteRenderer = new WebGLSpriteRenderer(_this, _gl, state, textures, capabilities);\n    _this.info.programs = programCache.programs;\n    _this.context = _gl;\n    _this.capabilities = capabilities;\n    _this.extensions = extensions;\n    _this.properties = properties;\n    _this.renderLists = renderLists;\n    _this.state = state;\n  }\n\n  initGLContext(); // vr\n\n  var vr = new WebVRManager(_this);\n  this.vr = vr; // shadow map\n\n  var shadowMap = new WebGLShadowMap(_this, objects, capabilities.maxTextureSize);\n  this.shadowMap = shadowMap; // API\n\n  this.getContext = function () {\n    return _gl;\n  };\n\n  this.getContextAttributes = function () {\n    return _gl.getContextAttributes();\n  };\n\n  this.forceContextLoss = function () {\n    var extension = extensions.get('WEBGL_lose_context');\n    if (extension) extension.loseContext();\n  };\n\n  this.forceContextRestore = function () {\n    var extension = extensions.get('WEBGL_lose_context');\n    if (extension) extension.restoreContext();\n  };\n\n  this.getPixelRatio = function () {\n    return _pixelRatio;\n  };\n\n  this.setPixelRatio = function (value) {\n    if (value === undefined) return;\n    _pixelRatio = value;\n    this.setSize(_width, _height, false);\n  };\n\n  this.getSize = function () {\n    return {\n      width: _width,\n      height: _height\n    };\n  };\n\n  this.setSize = function (width, height, updateStyle) {\n    var device = vr.getDevice();\n\n    if (device && device.isPresenting) {\n      console.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\n      return;\n    }\n\n    _width = width;\n    _height = height;\n    _canvas.width = width * _pixelRatio;\n    _canvas.height = height * _pixelRatio;\n\n    if (updateStyle !== false) {\n      _canvas.style.width = width + 'px';\n      _canvas.style.height = height + 'px';\n    }\n\n    this.setViewport(0, 0, width, height);\n  };\n\n  this.getDrawingBufferSize = function () {\n    return {\n      width: _width * _pixelRatio,\n      height: _height * _pixelRatio\n    };\n  };\n\n  this.setDrawingBufferSize = function (width, height, pixelRatio) {\n    _width = width;\n    _height = height;\n    _pixelRatio = pixelRatio;\n    _canvas.width = width * pixelRatio;\n    _canvas.height = height * pixelRatio;\n    this.setViewport(0, 0, width, height);\n  };\n\n  this.setViewport = function (x, y, width, height) {\n    _viewport.set(x, _height - y - height, width, height);\n\n    state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio));\n  };\n\n  this.setScissor = function (x, y, width, height) {\n    _scissor.set(x, _height - y - height, width, height);\n\n    state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio));\n  };\n\n  this.setScissorTest = function (boolean) {\n    state.setScissorTest(_scissorTest = boolean);\n  }; // Clearing\n\n\n  this.getClearColor = background.getClearColor;\n  this.setClearColor = background.setClearColor;\n  this.getClearAlpha = background.getClearAlpha;\n  this.setClearAlpha = background.setClearAlpha;\n\n  this.clear = function (color, depth, stencil) {\n    var bits = 0;\n    if (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n    if (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n    if (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n    _gl.clear(bits);\n  };\n\n  this.clearColor = function () {\n    this.clear(true, false, false);\n  };\n\n  this.clearDepth = function () {\n    this.clear(false, true, false);\n  };\n\n  this.clearStencil = function () {\n    this.clear(false, false, true);\n  };\n\n  this.clearTarget = function (renderTarget, color, depth, stencil) {\n    this.setRenderTarget(renderTarget);\n    this.clear(color, depth, stencil);\n  }; //\n\n\n  this.dispose = function () {\n    _canvas.removeEventListener('webglcontextlost', onContextLost, false);\n\n    _canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\n\n    renderLists.dispose();\n    vr.dispose();\n  }; // Events\n\n\n  function onContextLost(event) {\n    event.preventDefault();\n    console.log('THREE.WebGLRenderer: Context Lost.');\n    _isContextLost = true;\n  }\n\n  function onContextRestore(event) {\n    console.log('THREE.WebGLRenderer: Context Restored.');\n    _isContextLost = false;\n    initGLContext();\n  }\n\n  function onMaterialDispose(event) {\n    var material = event.target;\n    material.removeEventListener('dispose', onMaterialDispose);\n    deallocateMaterial(material);\n  } // Buffer deallocation\n\n\n  function deallocateMaterial(material) {\n    releaseMaterialProgramReference(material);\n    properties.remove(material);\n  }\n\n  function releaseMaterialProgramReference(material) {\n    var programInfo = properties.get(material).program;\n    material.program = undefined;\n\n    if (programInfo !== undefined) {\n      programCache.releaseProgram(programInfo);\n    }\n  } // Buffer rendering\n\n\n  function renderObjectImmediate(object, program, material) {\n    object.render(function (object) {\n      _this.renderBufferImmediate(object, program, material);\n    });\n  }\n\n  this.renderBufferImmediate = function (object, program, material) {\n    state.initAttributes();\n    var buffers = properties.get(object);\n    if (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\n    if (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\n    if (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\n    if (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\n    var programAttributes = program.getAttributes();\n\n    if (object.hasPositions) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.position);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(programAttributes.position);\n\n      _gl.vertexAttribPointer(programAttributes.position, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasNormals) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.normal);\n\n      if (!material.isMeshPhongMaterial && !material.isMeshStandardMaterial && !material.isMeshNormalMaterial && material.flatShading === true) {\n        for (var i = 0, l = object.count * 3; i < l; i += 9) {\n          var array = object.normalArray;\n          var nx = (array[i + 0] + array[i + 3] + array[i + 6]) / 3;\n          var ny = (array[i + 1] + array[i + 4] + array[i + 7]) / 3;\n          var nz = (array[i + 2] + array[i + 5] + array[i + 8]) / 3;\n          array[i + 0] = nx;\n          array[i + 1] = ny;\n          array[i + 2] = nz;\n          array[i + 3] = nx;\n          array[i + 4] = ny;\n          array[i + 5] = nz;\n          array[i + 6] = nx;\n          array[i + 7] = ny;\n          array[i + 8] = nz;\n        }\n      }\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(programAttributes.normal);\n\n      _gl.vertexAttribPointer(programAttributes.normal, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasUvs && material.map) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.uv);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(programAttributes.uv);\n\n      _gl.vertexAttribPointer(programAttributes.uv, 2, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasColors && material.vertexColors !== NoColors) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.color);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(programAttributes.color);\n\n      _gl.vertexAttribPointer(programAttributes.color, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    state.disableUnusedAttributes();\n\n    _gl.drawArrays(_gl.TRIANGLES, 0, object.count);\n\n    object.count = 0;\n  };\n\n  this.renderBufferDirect = function (camera, fog, geometry, material, object, group) {\n    state.setMaterial(material);\n    var program = setProgram(camera, fog, material, object);\n    var geometryProgram = geometry.id + '_' + program.id + '_' + (material.wireframe === true);\n    var updateBuffers = false;\n\n    if (geometryProgram !== _currentGeometryProgram) {\n      _currentGeometryProgram = geometryProgram;\n      updateBuffers = true;\n    }\n\n    if (object.morphTargetInfluences) {\n      morphtargets.update(object, geometry, material, program);\n      updateBuffers = true;\n    } //\n\n\n    var index = geometry.index;\n    var position = geometry.attributes.position;\n    var rangeFactor = 1;\n\n    if (material.wireframe === true) {\n      index = geometries.getWireframeAttribute(geometry);\n      rangeFactor = 2;\n    }\n\n    var attribute;\n    var renderer = bufferRenderer;\n\n    if (index !== null) {\n      attribute = attributes.get(index);\n      renderer = indexedBufferRenderer;\n      renderer.setIndex(attribute);\n    }\n\n    if (updateBuffers) {\n      setupVertexAttributes(material, program, geometry);\n\n      if (index !== null) {\n        _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, attribute.buffer);\n      }\n    } //\n\n\n    var dataCount = 0;\n\n    if (index !== null) {\n      dataCount = index.count;\n    } else if (position !== undefined) {\n      dataCount = position.count;\n    }\n\n    var rangeStart = geometry.drawRange.start * rangeFactor;\n    var rangeCount = geometry.drawRange.count * rangeFactor;\n    var groupStart = group !== null ? group.start * rangeFactor : 0;\n    var groupCount = group !== null ? group.count * rangeFactor : Infinity;\n    var drawStart = Math.max(rangeStart, groupStart);\n    var drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n    var drawCount = Math.max(0, drawEnd - drawStart + 1);\n    if (drawCount === 0) return; //\n\n    if (object.isMesh) {\n      if (material.wireframe === true) {\n        state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n        renderer.setMode(_gl.LINES);\n      } else {\n        switch (object.drawMode) {\n          case TrianglesDrawMode:\n            renderer.setMode(_gl.TRIANGLES);\n            break;\n\n          case TriangleStripDrawMode:\n            renderer.setMode(_gl.TRIANGLE_STRIP);\n            break;\n\n          case TriangleFanDrawMode:\n            renderer.setMode(_gl.TRIANGLE_FAN);\n            break;\n        }\n      }\n    } else if (object.isLine) {\n      var lineWidth = material.linewidth;\n      if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n      state.setLineWidth(lineWidth * getTargetPixelRatio());\n\n      if (object.isLineSegments) {\n        renderer.setMode(_gl.LINES);\n      } else if (object.isLineLoop) {\n        renderer.setMode(_gl.LINE_LOOP);\n      } else {\n        renderer.setMode(_gl.LINE_STRIP);\n      }\n    } else if (object.isPoints) {\n      renderer.setMode(_gl.POINTS);\n    }\n\n    if (geometry && geometry.isInstancedBufferGeometry) {\n      if (geometry.maxInstancedCount > 0) {\n        renderer.renderInstances(geometry, drawStart, drawCount);\n      }\n    } else {\n      renderer.render(drawStart, drawCount);\n    }\n  };\n\n  function setupVertexAttributes(material, program, geometry, startIndex) {\n    if (geometry && geometry.isInstancedBufferGeometry) {\n      if (extensions.get('ANGLE_instanced_arrays') === null) {\n        console.error('THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n        return;\n      }\n    }\n\n    if (startIndex === undefined) startIndex = 0;\n    state.initAttributes();\n    var geometryAttributes = geometry.attributes;\n    var programAttributes = program.getAttributes();\n    var materialDefaultAttributeValues = material.defaultAttributeValues;\n\n    for (var name in programAttributes) {\n      var programAttribute = programAttributes[name];\n\n      if (programAttribute >= 0) {\n        var geometryAttribute = geometryAttributes[name];\n\n        if (geometryAttribute !== undefined) {\n          var normalized = geometryAttribute.normalized;\n          var size = geometryAttribute.itemSize;\n          var attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\n\n          if (attribute === undefined) continue;\n          var buffer = attribute.buffer;\n          var type = attribute.type;\n          var bytesPerElement = attribute.bytesPerElement;\n\n          if (geometryAttribute.isInterleavedBufferAttribute) {\n            var data = geometryAttribute.data;\n            var stride = data.stride;\n            var offset = geometryAttribute.offset;\n\n            if (data && data.isInstancedInterleavedBuffer) {\n              state.enableAttributeAndDivisor(programAttribute, data.meshPerAttribute);\n\n              if (geometry.maxInstancedCount === undefined) {\n                geometry.maxInstancedCount = data.meshPerAttribute * data.count;\n              }\n            } else {\n              state.enableAttribute(programAttribute);\n            }\n\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n            _gl.vertexAttribPointer(programAttribute, size, type, normalized, stride * bytesPerElement, (startIndex * stride + offset) * bytesPerElement);\n          } else {\n            if (geometryAttribute.isInstancedBufferAttribute) {\n              state.enableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute);\n\n              if (geometry.maxInstancedCount === undefined) {\n                geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n              }\n            } else {\n              state.enableAttribute(programAttribute);\n            }\n\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n            _gl.vertexAttribPointer(programAttribute, size, type, normalized, 0, startIndex * size * bytesPerElement);\n          }\n        } else if (materialDefaultAttributeValues !== undefined) {\n          var value = materialDefaultAttributeValues[name];\n\n          if (value !== undefined) {\n            switch (value.length) {\n              case 2:\n                _gl.vertexAttrib2fv(programAttribute, value);\n\n                break;\n\n              case 3:\n                _gl.vertexAttrib3fv(programAttribute, value);\n\n                break;\n\n              case 4:\n                _gl.vertexAttrib4fv(programAttribute, value);\n\n                break;\n\n              default:\n                _gl.vertexAttrib1fv(programAttribute, value);\n\n            }\n          }\n        }\n      }\n    }\n\n    state.disableUnusedAttributes();\n  } // Compile\n\n\n  this.compile = function (scene, camera) {\n    lightsArray.length = 0;\n    shadowsArray.length = 0;\n    scene.traverse(function (object) {\n      if (object.isLight) {\n        lightsArray.push(object);\n\n        if (object.castShadow) {\n          shadowsArray.push(object);\n        }\n      }\n    });\n    lights.setup(lightsArray, shadowsArray, camera);\n    scene.traverse(function (object) {\n      if (object.material) {\n        if (Array.isArray(object.material)) {\n          for (var i = 0; i < object.material.length; i++) {\n            initMaterial(object.material[i], scene.fog, object);\n          }\n        } else {\n          initMaterial(object.material, scene.fog, object);\n        }\n      }\n    });\n  }; // Animation Loop\n\n\n  var isAnimating = false;\n  var onAnimationFrame = null;\n\n  function start() {\n    if (isAnimating) return;\n    (vr.getDevice() || window).requestAnimationFrame(loop);\n    isAnimating = true;\n  }\n\n  function loop(time) {\n    if (onAnimationFrame !== null) onAnimationFrame(time);\n    (vr.getDevice() || window).requestAnimationFrame(loop);\n  }\n\n  this.animate = function (callback) {\n    onAnimationFrame = callback;\n    start();\n  }; // Rendering\n\n\n  this.render = function (scene, camera, renderTarget, forceClear) {\n    if (!(camera && camera.isCamera)) {\n      console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n      return;\n    }\n\n    if (_isContextLost) return; // reset caching for this frame\n\n    _currentGeometryProgram = '';\n    _currentMaterialId = -1;\n    _currentCamera = null; // update scene graph\n\n    if (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n    if (camera.parent === null) camera.updateMatrixWorld();\n\n    if (vr.enabled) {\n      camera = vr.getCamera(camera);\n    }\n\n    _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n    _frustum.setFromMatrix(_projScreenMatrix);\n\n    lightsArray.length = 0;\n    shadowsArray.length = 0;\n    spritesArray.length = 0;\n    flaresArray.length = 0;\n    _localClippingEnabled = this.localClippingEnabled;\n    _clippingEnabled = _clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n    currentRenderList = renderLists.get(scene, camera);\n    currentRenderList.init();\n    projectObject(scene, camera, _this.sortObjects);\n\n    if (_this.sortObjects === true) {\n      currentRenderList.sort();\n    } //\n\n\n    if (_clippingEnabled) _clipping.beginShadows();\n    shadowMap.render(shadowsArray, scene, camera);\n    lights.setup(lightsArray, shadowsArray, camera);\n    if (_clippingEnabled) _clipping.endShadows(); //\n\n    _infoRender.frame++;\n    _infoRender.calls = 0;\n    _infoRender.vertices = 0;\n    _infoRender.faces = 0;\n    _infoRender.points = 0;\n\n    if (renderTarget === undefined) {\n      renderTarget = null;\n    }\n\n    this.setRenderTarget(renderTarget); //\n\n    background.render(currentRenderList, scene, camera, forceClear); // render scene\n\n    var opaqueObjects = currentRenderList.opaque;\n    var transparentObjects = currentRenderList.transparent;\n\n    if (scene.overrideMaterial) {\n      var overrideMaterial = scene.overrideMaterial;\n      if (opaqueObjects.length) renderObjects(opaqueObjects, scene, camera, overrideMaterial);\n      if (transparentObjects.length) renderObjects(transparentObjects, scene, camera, overrideMaterial);\n    } else {\n      // opaque pass (front-to-back order)\n      if (opaqueObjects.length) renderObjects(opaqueObjects, scene, camera); // transparent pass (back-to-front order)\n\n      if (transparentObjects.length) renderObjects(transparentObjects, scene, camera);\n    } // custom renderers\n\n\n    spriteRenderer.render(spritesArray, scene, camera);\n    flareRenderer.render(flaresArray, scene, camera, _currentViewport); // Generate mipmap if we're using any kind of mipmap filtering\n\n    if (renderTarget) {\n      textures.updateRenderTargetMipmap(renderTarget);\n    } // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\n    state.buffers.depth.setTest(true);\n    state.buffers.depth.setMask(true);\n    state.buffers.color.setMask(true);\n    state.setPolygonOffset(false);\n\n    if (vr.enabled) {\n      vr.submitFrame();\n    } // _gl.finish();\n\n  };\n  /*\n  // TODO Duplicated code (Frustum)\n  \tvar _sphere = new Sphere();\n  \tfunction isObjectViewable( object ) {\n  \t\tvar geometry = object.geometry;\n  \t\tif ( geometry.boundingSphere === null )\n  \t\tgeometry.computeBoundingSphere();\n  \t\t_sphere.copy( geometry.boundingSphere ).\n  \tapplyMatrix4( object.matrixWorld );\n  \t\treturn isSphereViewable( _sphere );\n  \t}\n  \tfunction isSpriteViewable( sprite ) {\n  \t\t_sphere.center.set( 0, 0, 0 );\n  \t_sphere.radius = 0.7071067811865476;\n  \t_sphere.applyMatrix4( sprite.matrixWorld );\n  \t\treturn isSphereViewable( _sphere );\n  \t}\n  \tfunction isSphereViewable( sphere ) {\n  \t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n  \t\tvar numPlanes = _clipping.numPlanes;\n  \t\tif ( numPlanes === 0 ) return true;\n  \t\tvar planes = _this.clippingPlanes,\n  \t\t\tcenter = sphere.center,\n  \t\tnegRad = - sphere.radius,\n  \t\ti = 0;\n  \t\tdo {\n  \t\t\t// out when deeper than radius in the negative halfspace\n  \t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n  \t\t} while ( ++ i !== numPlanes );\n  \t\treturn true;\n  \t}\n  */\n\n\n  function projectObject(object, camera, sortObjects) {\n    if (!object.visible) return;\n    var visible = object.layers.test(camera.layers);\n\n    if (visible) {\n      if (object.isLight) {\n        lightsArray.push(object);\n\n        if (object.castShadow) {\n          shadowsArray.push(object);\n        }\n      } else if (object.isSprite) {\n        if (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n          spritesArray.push(object);\n        }\n      } else if (object.isLensFlare) {\n        flaresArray.push(object);\n      } else if (object.isImmediateRenderObject) {\n        if (sortObjects) {\n          _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n        }\n\n        currentRenderList.push(object, null, object.material, _vector3.z, null);\n      } else if (object.isMesh || object.isLine || object.isPoints) {\n        if (object.isSkinnedMesh) {\n          object.skeleton.update();\n        }\n\n        if (!object.frustumCulled || _frustum.intersectsObject(object)) {\n          if (sortObjects) {\n            _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n          }\n\n          var geometry = objects.update(object);\n          var material = object.material;\n\n          if (Array.isArray(material)) {\n            var groups = geometry.groups;\n\n            for (var i = 0, l = groups.length; i < l; i++) {\n              var group = groups[i];\n              var groupMaterial = material[group.materialIndex];\n\n              if (groupMaterial && groupMaterial.visible) {\n                currentRenderList.push(object, geometry, groupMaterial, _vector3.z, group);\n              }\n            }\n          } else if (material.visible) {\n            currentRenderList.push(object, geometry, material, _vector3.z, null);\n          }\n        }\n      }\n    }\n\n    var children = object.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      projectObject(children[i], camera, sortObjects);\n    }\n  }\n\n  function renderObjects(renderList, scene, camera, overrideMaterial) {\n    for (var i = 0, l = renderList.length; i < l; i++) {\n      var renderItem = renderList[i];\n      var object = renderItem.object;\n      var geometry = renderItem.geometry;\n      var material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n      var group = renderItem.group;\n\n      if (camera.isArrayCamera) {\n        _currentArrayCamera = camera;\n        var cameras = camera.cameras;\n\n        for (var j = 0, jl = cameras.length; j < jl; j++) {\n          var camera2 = cameras[j];\n\n          if (object.layers.test(camera2.layers)) {\n            var bounds = camera2.bounds;\n            var x = bounds.x * _width;\n            var y = bounds.y * _height;\n            var width = bounds.z * _width;\n            var height = bounds.w * _height;\n            state.viewport(_currentViewport.set(x, y, width, height).multiplyScalar(_pixelRatio));\n            renderObject(object, scene, camera2, geometry, material, group);\n          }\n        }\n      } else {\n        _currentArrayCamera = null;\n        renderObject(object, scene, camera, geometry, material, group);\n      }\n    }\n  }\n\n  function renderObject(object, scene, camera, geometry, material, group) {\n    object.onBeforeRender(_this, scene, camera, geometry, material, group);\n    object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n    object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\n    if (object.isImmediateRenderObject) {\n      state.setMaterial(material);\n      var program = setProgram(camera, scene.fog, material, object);\n      _currentGeometryProgram = '';\n      renderObjectImmediate(object, program, material);\n    } else {\n      _this.renderBufferDirect(camera, scene.fog, geometry, material, object, group);\n    }\n\n    object.onAfterRender(_this, scene, camera, geometry, material, group);\n  }\n\n  function initMaterial(material, fog, object) {\n    var materialProperties = properties.get(material);\n    var parameters = programCache.getParameters(material, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object);\n    var code = programCache.getProgramCode(material, parameters);\n    var program = materialProperties.program;\n    var programChange = true;\n\n    if (program === undefined) {\n      // new material\n      material.addEventListener('dispose', onMaterialDispose);\n    } else if (program.code !== code) {\n      // changed glsl or parameters\n      releaseMaterialProgramReference(material);\n    } else if (parameters.shaderID !== undefined) {\n      // same glsl and uniform list\n      return;\n    } else {\n      // only rebuild uniform list\n      programChange = false;\n    }\n\n    if (programChange) {\n      if (parameters.shaderID) {\n        var shader = ShaderLib[parameters.shaderID];\n        materialProperties.shader = {\n          name: material.type,\n          uniforms: UniformsUtils.clone(shader.uniforms),\n          vertexShader: shader.vertexShader,\n          fragmentShader: shader.fragmentShader\n        };\n      } else {\n        materialProperties.shader = {\n          name: material.type,\n          uniforms: material.uniforms,\n          vertexShader: material.vertexShader,\n          fragmentShader: material.fragmentShader\n        };\n      }\n\n      material.onBeforeCompile(materialProperties.shader);\n      program = programCache.acquireProgram(material, materialProperties.shader, parameters, code);\n      materialProperties.program = program;\n      material.program = program;\n    }\n\n    var programAttributes = program.getAttributes();\n\n    if (material.morphTargets) {\n      material.numSupportedMorphTargets = 0;\n\n      for (var i = 0; i < _this.maxMorphTargets; i++) {\n        if (programAttributes['morphTarget' + i] >= 0) {\n          material.numSupportedMorphTargets++;\n        }\n      }\n    }\n\n    if (material.morphNormals) {\n      material.numSupportedMorphNormals = 0;\n\n      for (var i = 0; i < _this.maxMorphNormals; i++) {\n        if (programAttributes['morphNormal' + i] >= 0) {\n          material.numSupportedMorphNormals++;\n        }\n      }\n    }\n\n    var uniforms = materialProperties.shader.uniforms;\n\n    if (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\n      materialProperties.numClippingPlanes = _clipping.numPlanes;\n      materialProperties.numIntersection = _clipping.numIntersection;\n      uniforms.clippingPlanes = _clipping.uniform;\n    }\n\n    materialProperties.fog = fog; // store the light setup it was created for\n\n    materialProperties.lightsHash = lights.state.hash;\n\n    if (material.lights) {\n      // wire up the material to this renderer's lighting state\n      uniforms.ambientLightColor.value = lights.state.ambient;\n      uniforms.directionalLights.value = lights.state.directional;\n      uniforms.spotLights.value = lights.state.spot;\n      uniforms.rectAreaLights.value = lights.state.rectArea;\n      uniforms.pointLights.value = lights.state.point;\n      uniforms.hemisphereLights.value = lights.state.hemi;\n      uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n      uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n      uniforms.spotShadowMap.value = lights.state.spotShadowMap;\n      uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n      uniforms.pointShadowMap.value = lights.state.pointShadowMap;\n      uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\n    }\n\n    var progUniforms = materialProperties.program.getUniforms(),\n        uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n    materialProperties.uniformsList = uniformsList;\n  }\n\n  function setProgram(camera, fog, material, object) {\n    _usedTextureUnits = 0;\n    var materialProperties = properties.get(material);\n\n    if (_clippingEnabled) {\n      if (_localClippingEnabled || camera !== _currentCamera) {\n        var useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n        // object instead of the material, once it becomes feasible\n        // (#8465, #8379)\n\n        _clipping.setState(material.clippingPlanes, material.clipIntersection, material.clipShadows, camera, materialProperties, useCache);\n      }\n    }\n\n    if (material.needsUpdate === false) {\n      if (materialProperties.program === undefined) {\n        material.needsUpdate = true;\n      } else if (material.fog && materialProperties.fog !== fog) {\n        material.needsUpdate = true;\n      } else if (material.lights && materialProperties.lightsHash !== lights.state.hash) {\n        material.needsUpdate = true;\n      } else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== _clipping.numPlanes || materialProperties.numIntersection !== _clipping.numIntersection)) {\n        material.needsUpdate = true;\n      }\n    }\n\n    if (material.needsUpdate) {\n      initMaterial(material, fog, object);\n      material.needsUpdate = false;\n    }\n\n    var refreshProgram = false;\n    var refreshMaterial = false;\n    var refreshLights = false;\n    var program = materialProperties.program,\n        p_uniforms = program.getUniforms(),\n        m_uniforms = materialProperties.shader.uniforms;\n\n    if (state.useProgram(program.program)) {\n      refreshProgram = true;\n      refreshMaterial = true;\n      refreshLights = true;\n    }\n\n    if (material.id !== _currentMaterialId) {\n      _currentMaterialId = material.id;\n      refreshMaterial = true;\n    }\n\n    if (refreshProgram || camera !== _currentCamera) {\n      p_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\n\n      if (capabilities.logarithmicDepthBuffer) {\n        p_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n      } // Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\n      if (_currentCamera !== (_currentArrayCamera || camera)) {\n        _currentCamera = _currentArrayCamera || camera; // lighting uniforms depend on the camera so enforce an update\n        // now, in case this material supports lights - or later, when\n        // the next material that does gets activated:\n\n        refreshMaterial = true; // set to true on material change\n\n        refreshLights = true; // remains set until update done\n      } // load material specific uniforms\n      // (shader material also gets them for the sake of genericity)\n\n\n      if (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.envMap) {\n        var uCamPos = p_uniforms.map.cameraPosition;\n\n        if (uCamPos !== undefined) {\n          uCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n        }\n      }\n\n      if (material.isMeshPhongMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.skinning) {\n        p_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n      }\n    } // skinning uniforms must be set even if material didn't change\n    // auto-setting of texture unit for bone texture must go before other textures\n    // not sure why, but otherwise weird things happen\n\n\n    if (material.skinning) {\n      p_uniforms.setOptional(_gl, object, 'bindMatrix');\n      p_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n      var skeleton = object.skeleton;\n\n      if (skeleton) {\n        var bones = skeleton.bones;\n\n        if (capabilities.floatVertexTextures) {\n          if (skeleton.boneTexture === undefined) {\n            // layout (1 matrix = 4 pixels)\n            //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n            //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n            //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n            //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n            //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n            var size = Math.sqrt(bones.length * 4); // 4 pixels needed for 1 matrix\n\n            size = _Math.nextPowerOfTwo(Math.ceil(size));\n            size = Math.max(size, 4);\n            var boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n\n            boneMatrices.set(skeleton.boneMatrices); // copy current values\n\n            var boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\n            skeleton.boneMatrices = boneMatrices;\n            skeleton.boneTexture = boneTexture;\n            skeleton.boneTextureSize = size;\n          }\n\n          p_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture);\n          p_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\n        } else {\n          p_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n        }\n      }\n    }\n\n    if (refreshMaterial) {\n      p_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\n      p_uniforms.setValue(_gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint);\n\n      if (material.lights) {\n        // the current material requires lighting info\n        // note: all lighting uniforms are always set correctly\n        // they simply reference the renderer's state for their\n        // values\n        //\n        // use the current material's .needsUpdate flags to set\n        // the GL state when required\n        markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n      } // refresh uniforms common to several materials\n\n\n      if (fog && material.fog) {\n        refreshUniformsFog(m_uniforms, fog);\n      }\n\n      if (material.isMeshBasicMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n      } else if (material.isMeshLambertMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n        refreshUniformsLambert(m_uniforms, material);\n      } else if (material.isMeshPhongMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n\n        if (material.isMeshToonMaterial) {\n          refreshUniformsToon(m_uniforms, material);\n        } else {\n          refreshUniformsPhong(m_uniforms, material);\n        }\n      } else if (material.isMeshStandardMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n\n        if (material.isMeshPhysicalMaterial) {\n          refreshUniformsPhysical(m_uniforms, material);\n        } else {\n          refreshUniformsStandard(m_uniforms, material);\n        }\n      } else if (material.isMeshDepthMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n        refreshUniformsDepth(m_uniforms, material);\n      } else if (material.isMeshDistanceMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n        refreshUniformsDistance(m_uniforms, material);\n      } else if (material.isMeshNormalMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n        refreshUniformsNormal(m_uniforms, material);\n      } else if (material.isLineBasicMaterial) {\n        refreshUniformsLine(m_uniforms, material);\n\n        if (material.isLineDashedMaterial) {\n          refreshUniformsDash(m_uniforms, material);\n        }\n      } else if (material.isPointsMaterial) {\n        refreshUniformsPoints(m_uniforms, material);\n      } else if (material.isShadowMaterial) {\n        m_uniforms.color.value = material.color;\n        m_uniforms.opacity.value = material.opacity;\n      } // RectAreaLight Texture\n      // TODO (mrdoob): Find a nicer implementation\n\n\n      if (m_uniforms.ltcMat !== undefined) m_uniforms.ltcMat.value = UniformsLib.LTC_MAT_TEXTURE;\n      if (m_uniforms.ltcMag !== undefined) m_uniforms.ltcMag.value = UniformsLib.LTC_MAG_TEXTURE;\n      WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, _this);\n    } // common matrices\n\n\n    p_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\n    p_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\n    p_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\n    return program;\n  } // Uniforms (refresh uniforms objects)\n\n\n  function refreshUniformsCommon(uniforms, material) {\n    uniforms.opacity.value = material.opacity;\n\n    if (material.color) {\n      uniforms.diffuse.value = material.color;\n    }\n\n    if (material.emissive) {\n      uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n    }\n\n    if (material.map) {\n      uniforms.map.value = material.map;\n    }\n\n    if (material.alphaMap) {\n      uniforms.alphaMap.value = material.alphaMap;\n    }\n\n    if (material.specularMap) {\n      uniforms.specularMap.value = material.specularMap;\n    }\n\n    if (material.envMap) {\n      uniforms.envMap.value = material.envMap; // don't flip CubeTexture envMaps, flip everything else:\n      //  WebGLRenderTargetCube will be flipped for backwards compatibility\n      //  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n      // this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\n      uniforms.flipEnvMap.value = !(material.envMap && material.envMap.isCubeTexture) ? 1 : -1;\n      uniforms.reflectivity.value = material.reflectivity;\n      uniforms.refractionRatio.value = material.refractionRatio;\n    }\n\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n\n    if (material.aoMap) {\n      uniforms.aoMap.value = material.aoMap;\n      uniforms.aoMapIntensity.value = material.aoMapIntensity;\n    } // uv repeat and offset setting priorities\n    // 1. color map\n    // 2. specular map\n    // 3. normal map\n    // 4. bump map\n    // 5. alpha map\n    // 6. emissive map\n\n\n    var uvScaleMap;\n\n    if (material.map) {\n      uvScaleMap = material.map;\n    } else if (material.specularMap) {\n      uvScaleMap = material.specularMap;\n    } else if (material.displacementMap) {\n      uvScaleMap = material.displacementMap;\n    } else if (material.normalMap) {\n      uvScaleMap = material.normalMap;\n    } else if (material.bumpMap) {\n      uvScaleMap = material.bumpMap;\n    } else if (material.roughnessMap) {\n      uvScaleMap = material.roughnessMap;\n    } else if (material.metalnessMap) {\n      uvScaleMap = material.metalnessMap;\n    } else if (material.alphaMap) {\n      uvScaleMap = material.alphaMap;\n    } else if (material.emissiveMap) {\n      uvScaleMap = material.emissiveMap;\n    }\n\n    if (uvScaleMap !== undefined) {\n      // backwards compatibility\n      if (uvScaleMap.isWebGLRenderTarget) {\n        uvScaleMap = uvScaleMap.texture;\n      }\n\n      var offset = uvScaleMap.offset;\n      var repeat = uvScaleMap.repeat;\n      uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n    }\n  }\n\n  function refreshUniformsLine(uniforms, material) {\n    uniforms.diffuse.value = material.color;\n    uniforms.opacity.value = material.opacity;\n  }\n\n  function refreshUniformsDash(uniforms, material) {\n    uniforms.dashSize.value = material.dashSize;\n    uniforms.totalSize.value = material.dashSize + material.gapSize;\n    uniforms.scale.value = material.scale;\n  }\n\n  function refreshUniformsPoints(uniforms, material) {\n    uniforms.diffuse.value = material.color;\n    uniforms.opacity.value = material.opacity;\n    uniforms.size.value = material.size * _pixelRatio;\n    uniforms.scale.value = _height * 0.5;\n    uniforms.map.value = material.map;\n\n    if (material.map !== null) {\n      var offset = material.map.offset;\n      var repeat = material.map.repeat;\n      uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n    }\n  }\n\n  function refreshUniformsFog(uniforms, fog) {\n    uniforms.fogColor.value = fog.color;\n\n    if (fog.isFog) {\n      uniforms.fogNear.value = fog.near;\n      uniforms.fogFar.value = fog.far;\n    } else if (fog.isFogExp2) {\n      uniforms.fogDensity.value = fog.density;\n    }\n  }\n\n  function refreshUniformsLambert(uniforms, material) {\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n  }\n\n  function refreshUniformsPhong(uniforms, material) {\n    uniforms.specular.value = material.specular;\n    uniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n  }\n\n  function refreshUniformsToon(uniforms, material) {\n    refreshUniformsPhong(uniforms, material);\n\n    if (material.gradientMap) {\n      uniforms.gradientMap.value = material.gradientMap;\n    }\n  }\n\n  function refreshUniformsStandard(uniforms, material) {\n    uniforms.roughness.value = material.roughness;\n    uniforms.metalness.value = material.metalness;\n\n    if (material.roughnessMap) {\n      uniforms.roughnessMap.value = material.roughnessMap;\n    }\n\n    if (material.metalnessMap) {\n      uniforms.metalnessMap.value = material.metalnessMap;\n    }\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n\n    if (material.envMap) {\n      //uniforms.envMap.value = material.envMap; // part of uniforms common\n      uniforms.envMapIntensity.value = material.envMapIntensity;\n    }\n  }\n\n  function refreshUniformsPhysical(uniforms, material) {\n    uniforms.clearCoat.value = material.clearCoat;\n    uniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n    refreshUniformsStandard(uniforms, material);\n  }\n\n  function refreshUniformsDepth(uniforms, material) {\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n  }\n\n  function refreshUniformsDistance(uniforms, material) {\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n\n    uniforms.referencePosition.value.copy(material.referencePosition);\n    uniforms.nearDistance.value = material.nearDistance;\n    uniforms.farDistance.value = material.farDistance;\n  }\n\n  function refreshUniformsNormal(uniforms, material) {\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n  } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n  function markUniformsLightsNeedsUpdate(uniforms, value) {\n    uniforms.ambientLightColor.needsUpdate = value;\n    uniforms.directionalLights.needsUpdate = value;\n    uniforms.pointLights.needsUpdate = value;\n    uniforms.spotLights.needsUpdate = value;\n    uniforms.rectAreaLights.needsUpdate = value;\n    uniforms.hemisphereLights.needsUpdate = value;\n  } // GL state setting\n\n\n  this.setFaceCulling = function (cullFace, frontFaceDirection) {\n    state.setCullFace(cullFace);\n    state.setFlipSided(frontFaceDirection === FrontFaceDirectionCW);\n  }; // Textures\n\n\n  function allocTextureUnit() {\n    var textureUnit = _usedTextureUnits;\n\n    if (textureUnit >= capabilities.maxTextures) {\n      console.warn('THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures);\n    }\n\n    _usedTextureUnits += 1;\n    return textureUnit;\n  }\n\n  this.allocTextureUnit = allocTextureUnit; // this.setTexture2D = setTexture2D;\n\n  this.setTexture2D = function () {\n    var warned = false; // backwards compatibility: peel texture.texture\n\n    return function setTexture2D(texture, slot) {\n      if (texture && texture.isWebGLRenderTarget) {\n        if (!warned) {\n          console.warn(\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\");\n          warned = true;\n        }\n\n        texture = texture.texture;\n      }\n\n      textures.setTexture2D(texture, slot);\n    };\n  }();\n\n  this.setTexture = function () {\n    var warned = false;\n    return function setTexture(texture, slot) {\n      if (!warned) {\n        console.warn(\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\");\n        warned = true;\n      }\n\n      textures.setTexture2D(texture, slot);\n    };\n  }();\n\n  this.setTextureCube = function () {\n    var warned = false;\n    return function setTextureCube(texture, slot) {\n      // backwards compatibility: peel texture.texture\n      if (texture && texture.isWebGLRenderTargetCube) {\n        if (!warned) {\n          console.warn(\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\");\n          warned = true;\n        }\n\n        texture = texture.texture;\n      } // currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n      // TODO: unify these code paths\n\n\n      if (texture && texture.isCubeTexture || Array.isArray(texture.image) && texture.image.length === 6) {\n        // CompressedTexture can have Array in image :/\n        // this function alone should take care of cube textures\n        textures.setTextureCube(texture, slot);\n      } else {\n        // assumed: texture property of THREE.WebGLRenderTargetCube\n        textures.setTextureCubeDynamic(texture, slot);\n      }\n    };\n  }();\n\n  this.getRenderTarget = function () {\n    return _currentRenderTarget;\n  };\n\n  this.setRenderTarget = function (renderTarget) {\n    _currentRenderTarget = renderTarget;\n\n    if (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n      textures.setupRenderTarget(renderTarget);\n    }\n\n    var framebuffer = null;\n    var isCube = false;\n\n    if (renderTarget) {\n      var __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n      if (renderTarget.isWebGLRenderTargetCube) {\n        framebuffer = __webglFramebuffer[renderTarget.activeCubeFace];\n        isCube = true;\n      } else {\n        framebuffer = __webglFramebuffer;\n      }\n\n      _currentViewport.copy(renderTarget.viewport);\n\n      _currentScissor.copy(renderTarget.scissor);\n\n      _currentScissorTest = renderTarget.scissorTest;\n    } else {\n      _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio);\n\n      _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio);\n\n      _currentScissorTest = _scissorTest;\n    }\n\n    if (_currentFramebuffer !== framebuffer) {\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      _currentFramebuffer = framebuffer;\n    }\n\n    state.viewport(_currentViewport);\n    state.scissor(_currentScissor);\n    state.setScissorTest(_currentScissorTest);\n\n    if (isCube) {\n      var textureProperties = properties.get(renderTarget.texture);\n\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel);\n    }\n  };\n\n  this.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer) {\n    if (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n      console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n      return;\n    }\n\n    var framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n    if (framebuffer) {\n      var restore = false;\n\n      if (framebuffer !== _currentFramebuffer) {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n        restore = true;\n      }\n\n      try {\n        var texture = renderTarget.texture;\n        var textureFormat = texture.format;\n        var textureType = texture.type;\n\n        if (textureFormat !== RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n          return;\n        }\n\n        if (textureType !== UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && // IE11, Edge and Chrome Mac < 52 (#9513)\n        !(textureType === FloatType && (extensions.get('OES_texture_float') || extensions.get('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n        !(textureType === HalfFloatType && extensions.get('EXT_color_buffer_half_float'))) {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n          return;\n        }\n\n        if (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n          // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n          if (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n            _gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\n          }\n        } else {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n        }\n      } finally {\n        if (restore) {\n          _gl.bindFramebuffer(_gl.FRAMEBUFFER, _currentFramebuffer);\n        }\n      }\n    }\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nfunction FogExp2(color, density) {\n  this.name = '';\n  this.color = new Color(color);\n  this.density = density !== undefined ? density : 0.00025;\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nFogExp2.prototype.clone = function () {\n  return new FogExp2(this.color.getHex(), this.density);\n};\n\nFogExp2.prototype.toJSON = function (meta) {\n  return {\n    type: 'FogExp2',\n    color: this.color.getHex(),\n    density: this.density\n  };\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nfunction Fog(color, near, far) {\n  this.name = '';\n  this.color = new Color(color);\n  this.near = near !== undefined ? near : 1;\n  this.far = far !== undefined ? far : 1000;\n}\n\nFog.prototype.isFog = true;\n\nFog.prototype.clone = function () {\n  return new Fog(this.color.getHex(), this.near, this.far);\n};\n\nFog.prototype.toJSON = function (meta) {\n  return {\n    type: 'Fog',\n    color: this.color.getHex(),\n    near: this.near,\n    far: this.far\n  };\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Scene() {\n  Object3D.call(this);\n  this.type = 'Scene';\n  this.background = null;\n  this.fog = null;\n  this.overrideMaterial = null;\n  this.autoUpdate = true; // checked by the renderer\n}\n\nScene.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Scene,\n  copy: function (source, recursive) {\n    Object3D.prototype.copy.call(this, source, recursive);\n    if (source.background !== null) this.background = source.background.clone();\n    if (source.fog !== null) this.fog = source.fog.clone();\n    if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n    this.autoUpdate = source.autoUpdate;\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    return this;\n  },\n  toJSON: function (meta) {\n    var data = Object3D.prototype.toJSON.call(this, meta);\n    if (this.background !== null) data.object.background = this.background.toJSON(meta);\n    if (this.fog !== null) data.object.fog = this.fog.toJSON();\n    return data;\n  }\n});\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction LensFlare(texture, size, distance, blending, color) {\n  Object3D.call(this);\n  this.lensFlares = [];\n  this.positionScreen = new Vector3();\n  this.customUpdateCallback = undefined;\n\n  if (texture !== undefined) {\n    this.add(texture, size, distance, blending, color);\n  }\n}\n\nLensFlare.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: LensFlare,\n  isLensFlare: true,\n  copy: function (source) {\n    Object3D.prototype.copy.call(this, source);\n    this.positionScreen.copy(source.positionScreen);\n    this.customUpdateCallback = source.customUpdateCallback;\n\n    for (var i = 0, l = source.lensFlares.length; i < l; i++) {\n      this.lensFlares.push(source.lensFlares[i]);\n    }\n\n    return this;\n  },\n  add: function (texture, size, distance, blending, color, opacity) {\n    if (size === undefined) size = -1;\n    if (distance === undefined) distance = 0;\n    if (opacity === undefined) opacity = 1;\n    if (color === undefined) color = new Color(0xffffff);\n    if (blending === undefined) blending = NormalBlending;\n    distance = Math.min(distance, Math.max(0, distance));\n    this.lensFlares.push({\n      texture: texture,\n      // THREE.Texture\n      size: size,\n      // size in pixels (-1 = use texture.width)\n      distance: distance,\n      // distance (0-1) from light source (0=at light source)\n      x: 0,\n      y: 0,\n      z: 0,\n      // screen position (-1 => 1) z = 0 is in front z = 1 is back\n      scale: 1,\n      // scale\n      rotation: 0,\n      // rotation\n      opacity: opacity,\n      // opacity\n      color: color,\n      // color\n      blending: blending // blending\n\n    });\n  },\n\n  /*\n   * Update lens flares update positions on all flares based on the screen position\n   * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n   */\n  updateLensFlares: function () {\n    var f,\n        fl = this.lensFlares.length;\n    var flare;\n    var vecX = -this.positionScreen.x * 2;\n    var vecY = -this.positionScreen.y * 2;\n\n    for (f = 0; f < fl; f++) {\n      flare = this.lensFlares[f];\n      flare.x = this.positionScreen.x + vecX * flare.distance;\n      flare.y = this.positionScreen.y + vecY * flare.distance;\n      flare.wantedRotation = flare.x * Math.PI * 0.25;\n      flare.rotation += (flare.wantedRotation - flare.rotation) * 0.25;\n    }\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *\tuvOffset: new THREE.Vector2(),\n *\tuvScale: new THREE.Vector2()\n * }\n */\n\nfunction SpriteMaterial(parameters) {\n  Material.call(this);\n  this.type = 'SpriteMaterial';\n  this.color = new Color(0xffffff);\n  this.map = null;\n  this.rotation = 0;\n  this.fog = false;\n  this.lights = false;\n  this.setValues(parameters);\n}\n\nSpriteMaterial.prototype = Object.create(Material.prototype);\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.rotation = source.rotation;\n  return this;\n};\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nfunction Sprite(material) {\n  Object3D.call(this);\n  this.type = 'Sprite';\n  this.material = material !== undefined ? material : new SpriteMaterial();\n}\n\nSprite.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Sprite,\n  isSprite: true,\n  raycast: function () {\n    var intersectPoint = new Vector3();\n    var worldPosition = new Vector3();\n    var worldScale = new Vector3();\n    return function raycast(raycaster, intersects) {\n      worldPosition.setFromMatrixPosition(this.matrixWorld);\n      raycaster.ray.closestPointToPoint(worldPosition, intersectPoint);\n      worldScale.setFromMatrixScale(this.matrixWorld);\n      var guessSizeSq = worldScale.x * worldScale.y / 4;\n      if (worldPosition.distanceToSquared(intersectPoint) > guessSizeSq) return;\n      var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n      if (distance < raycaster.near || distance > raycaster.far) return;\n      intersects.push({\n        distance: distance,\n        point: intersectPoint.clone(),\n        face: null,\n        object: this\n      });\n    };\n  }(),\n  clone: function () {\n    return new this.constructor(this.material).copy(this);\n  }\n});\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n  Object3D.call(this);\n  this.type = 'LOD';\n  Object.defineProperties(this, {\n    levels: {\n      enumerable: true,\n      value: []\n    }\n  });\n}\n\nLOD.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: LOD,\n  copy: function (source) {\n    Object3D.prototype.copy.call(this, source, false);\n    var levels = source.levels;\n\n    for (var i = 0, l = levels.length; i < l; i++) {\n      var level = levels[i];\n      this.addLevel(level.object.clone(), level.distance);\n    }\n\n    return this;\n  },\n  addLevel: function (object, distance) {\n    if (distance === undefined) distance = 0;\n    distance = Math.abs(distance);\n    var levels = this.levels;\n\n    for (var l = 0; l < levels.length; l++) {\n      if (distance < levels[l].distance) {\n        break;\n      }\n    }\n\n    levels.splice(l, 0, {\n      distance: distance,\n      object: object\n    });\n    this.add(object);\n  },\n  getObjectForDistance: function (distance) {\n    var levels = this.levels;\n\n    for (var i = 1, l = levels.length; i < l; i++) {\n      if (distance < levels[i].distance) {\n        break;\n      }\n    }\n\n    return levels[i - 1].object;\n  },\n  raycast: function () {\n    var matrixPosition = new Vector3();\n    return function raycast(raycaster, intersects) {\n      matrixPosition.setFromMatrixPosition(this.matrixWorld);\n      var distance = raycaster.ray.origin.distanceTo(matrixPosition);\n      this.getObjectForDistance(distance).raycast(raycaster, intersects);\n    };\n  }(),\n  update: function () {\n    var v1 = new Vector3();\n    var v2 = new Vector3();\n    return function update(camera) {\n      var levels = this.levels;\n\n      if (levels.length > 1) {\n        v1.setFromMatrixPosition(camera.matrixWorld);\n        v2.setFromMatrixPosition(this.matrixWorld);\n        var distance = v1.distanceTo(v2);\n        levels[0].object.visible = true;\n\n        for (var i = 1, l = levels.length; i < l; i++) {\n          if (distance >= levels[i].distance) {\n            levels[i - 1].object.visible = false;\n            levels[i].object.visible = true;\n          } else {\n            break;\n          }\n        }\n\n        for (; i < l; i++) {\n          levels[i].object.visible = false;\n        }\n      }\n    };\n  }(),\n  toJSON: function (meta) {\n    var data = Object3D.prototype.toJSON.call(this, meta);\n    data.object.levels = [];\n    var levels = this.levels;\n\n    for (var i = 0, l = levels.length; i < l; i++) {\n      var level = levels[i];\n      data.object.levels.push({\n        object: level.object.uuid,\n        distance: level.distance\n      });\n    }\n\n    return data;\n  }\n});\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton(bones, boneInverses) {\n  // copy the bone array\n  bones = bones || [];\n  this.bones = bones.slice(0);\n  this.boneMatrices = new Float32Array(this.bones.length * 16); // use the supplied bone inverses or calculate the inverses\n\n  if (boneInverses === undefined) {\n    this.calculateInverses();\n  } else {\n    if (this.bones.length === boneInverses.length) {\n      this.boneInverses = boneInverses.slice(0);\n    } else {\n      console.warn('THREE.Skeleton boneInverses is the wrong length.');\n      this.boneInverses = [];\n\n      for (var i = 0, il = this.bones.length; i < il; i++) {\n        this.boneInverses.push(new Matrix4());\n      }\n    }\n  }\n}\n\nObject.assign(Skeleton.prototype, {\n  calculateInverses: function () {\n    this.boneInverses = [];\n\n    for (var i = 0, il = this.bones.length; i < il; i++) {\n      var inverse = new Matrix4();\n\n      if (this.bones[i]) {\n        inverse.getInverse(this.bones[i].matrixWorld);\n      }\n\n      this.boneInverses.push(inverse);\n    }\n  },\n  pose: function () {\n    var bone, i, il; // recover the bind-time world matrices\n\n    for (i = 0, il = this.bones.length; i < il; i++) {\n      bone = this.bones[i];\n\n      if (bone) {\n        bone.matrixWorld.getInverse(this.boneInverses[i]);\n      }\n    } // compute the local matrices, positions, rotations and scales\n\n\n    for (i = 0, il = this.bones.length; i < il; i++) {\n      bone = this.bones[i];\n\n      if (bone) {\n        if (bone.parent && bone.parent.isBone) {\n          bone.matrix.getInverse(bone.parent.matrixWorld);\n          bone.matrix.multiply(bone.matrixWorld);\n        } else {\n          bone.matrix.copy(bone.matrixWorld);\n        }\n\n        bone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n      }\n    }\n  },\n  update: function () {\n    var offsetMatrix = new Matrix4();\n    var identityMatrix = new Matrix4();\n    return function update() {\n      var bones = this.bones;\n      var boneInverses = this.boneInverses;\n      var boneMatrices = this.boneMatrices;\n      var boneTexture = this.boneTexture; // flatten bone matrices to array\n\n      for (var i = 0, il = bones.length; i < il; i++) {\n        // compute the offset between the current and the original transform\n        var matrix = bones[i] ? bones[i].matrixWorld : identityMatrix;\n        offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\n        offsetMatrix.toArray(boneMatrices, i * 16);\n      }\n\n      if (boneTexture !== undefined) {\n        boneTexture.needsUpdate = true;\n      }\n    };\n  }(),\n  clone: function () {\n    return new Skeleton(this.bones, this.boneInverses);\n  }\n});\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n  Object3D.call(this);\n  this.type = 'Bone';\n}\n\nBone.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Bone,\n  isBone: true\n});\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh(geometry, material) {\n  Mesh.call(this, geometry, material);\n  this.type = 'SkinnedMesh';\n  this.bindMode = 'attached';\n  this.bindMatrix = new Matrix4();\n  this.bindMatrixInverse = new Matrix4();\n  var bones = this.initBones();\n  var skeleton = new Skeleton(bones);\n  this.bind(skeleton, this.matrixWorld);\n  this.normalizeSkinWeights();\n}\n\nSkinnedMesh.prototype = Object.assign(Object.create(Mesh.prototype), {\n  constructor: SkinnedMesh,\n  isSkinnedMesh: true,\n  initBones: function () {\n    var bones = [],\n        bone,\n        gbone;\n    var i, il;\n\n    if (this.geometry && this.geometry.bones !== undefined) {\n      // first, create array of 'Bone' objects from geometry data\n      for (i = 0, il = this.geometry.bones.length; i < il; i++) {\n        gbone = this.geometry.bones[i]; // create new 'Bone' object\n\n        bone = new Bone();\n        bones.push(bone); // apply values\n\n        bone.name = gbone.name;\n        bone.position.fromArray(gbone.pos);\n        bone.quaternion.fromArray(gbone.rotq);\n        if (gbone.scl !== undefined) bone.scale.fromArray(gbone.scl);\n      } // second, create bone hierarchy\n\n\n      for (i = 0, il = this.geometry.bones.length; i < il; i++) {\n        gbone = this.geometry.bones[i];\n\n        if (gbone.parent !== -1 && gbone.parent !== null && bones[gbone.parent] !== undefined) {\n          // subsequent bones in the hierarchy\n          bones[gbone.parent].add(bones[i]);\n        } else {\n          // topmost bone, immediate child of the skinned mesh\n          this.add(bones[i]);\n        }\n      }\n    } // now the bones are part of the scene graph and children of the skinned mesh.\n    // let's update the corresponding matrices\n\n\n    this.updateMatrixWorld(true);\n    return bones;\n  },\n  bind: function (skeleton, bindMatrix) {\n    this.skeleton = skeleton;\n\n    if (bindMatrix === undefined) {\n      this.updateMatrixWorld(true);\n      this.skeleton.calculateInverses();\n      bindMatrix = this.matrixWorld;\n    }\n\n    this.bindMatrix.copy(bindMatrix);\n    this.bindMatrixInverse.getInverse(bindMatrix);\n  },\n  pose: function () {\n    this.skeleton.pose();\n  },\n  normalizeSkinWeights: function () {\n    var scale, i;\n\n    if (this.geometry && this.geometry.isGeometry) {\n      for (i = 0; i < this.geometry.skinWeights.length; i++) {\n        var sw = this.geometry.skinWeights[i];\n        scale = 1.0 / sw.lengthManhattan();\n\n        if (scale !== Infinity) {\n          sw.multiplyScalar(scale);\n        } else {\n          sw.set(1, 0, 0, 0); // do something reasonable\n        }\n      }\n    } else if (this.geometry && this.geometry.isBufferGeometry) {\n      var vec = new Vector4();\n      var skinWeight = this.geometry.attributes.skinWeight;\n\n      for (i = 0; i < skinWeight.count; i++) {\n        vec.x = skinWeight.getX(i);\n        vec.y = skinWeight.getY(i);\n        vec.z = skinWeight.getZ(i);\n        vec.w = skinWeight.getW(i);\n        scale = 1.0 / vec.lengthManhattan();\n\n        if (scale !== Infinity) {\n          vec.multiplyScalar(scale);\n        } else {\n          vec.set(1, 0, 0, 0); // do something reasonable\n        }\n\n        skinWeight.setXYZW(i, vec.x, vec.y, vec.z, vec.w);\n      }\n    }\n  },\n  updateMatrixWorld: function (force) {\n    Mesh.prototype.updateMatrixWorld.call(this, force);\n\n    if (this.bindMode === 'attached') {\n      this.bindMatrixInverse.getInverse(this.matrixWorld);\n    } else if (this.bindMode === 'detached') {\n      this.bindMatrixInverse.getInverse(this.bindMatrix);\n    } else {\n      console.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.geometry, this.material).copy(this);\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial(parameters) {\n  Material.call(this);\n  this.type = 'LineBasicMaterial';\n  this.color = new Color(0xffffff);\n  this.linewidth = 1;\n  this.linecap = 'round';\n  this.linejoin = 'round';\n  this.lights = false;\n  this.setValues(parameters);\n}\n\nLineBasicMaterial.prototype = Object.create(Material.prototype);\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.linewidth = source.linewidth;\n  this.linecap = source.linecap;\n  this.linejoin = source.linejoin;\n  return this;\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Line(geometry, material, mode) {\n  if (mode === 1) {\n    console.warn('THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.');\n    return new LineSegments(geometry, material);\n  }\n\n  Object3D.call(this);\n  this.type = 'Line';\n  this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n  this.material = material !== undefined ? material : new LineBasicMaterial({\n    color: Math.random() * 0xffffff\n  });\n}\n\nLine.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Line,\n  isLine: true,\n  raycast: function () {\n    var inverseMatrix = new Matrix4();\n    var ray = new Ray();\n    var sphere = new Sphere();\n    return function raycast(raycaster, intersects) {\n      var precision = raycaster.linePrecision;\n      var precisionSq = precision * precision;\n      var geometry = this.geometry;\n      var matrixWorld = this.matrixWorld; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(matrixWorld);\n      if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n      inverseMatrix.getInverse(matrixWorld);\n      ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n      var vStart = new Vector3();\n      var vEnd = new Vector3();\n      var interSegment = new Vector3();\n      var interRay = new Vector3();\n      var step = this && this.isLineSegments ? 2 : 1;\n\n      if (geometry.isBufferGeometry) {\n        var index = geometry.index;\n        var attributes = geometry.attributes;\n        var positions = attributes.position.array;\n\n        if (index !== null) {\n          var indices = index.array;\n\n          for (var i = 0, l = indices.length - 1; i < l; i += step) {\n            var a = indices[i];\n            var b = indices[i + 1];\n            vStart.fromArray(positions, a * 3);\n            vEnd.fromArray(positions, b * 3);\n            var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n            if (distSq > precisionSq) continue;\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n            var distance = raycaster.ray.origin.distanceTo(interRay);\n            if (distance < raycaster.near || distance > raycaster.far) continue;\n            intersects.push({\n              distance: distance,\n              // What do we want? intersection point on the ray or on the segment??\n              // point: raycaster.ray.at( distance ),\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\n              index: i,\n              face: null,\n              faceIndex: null,\n              object: this\n            });\n          }\n        } else {\n          for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n            vStart.fromArray(positions, 3 * i);\n            vEnd.fromArray(positions, 3 * i + 3);\n            var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n            if (distSq > precisionSq) continue;\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n            var distance = raycaster.ray.origin.distanceTo(interRay);\n            if (distance < raycaster.near || distance > raycaster.far) continue;\n            intersects.push({\n              distance: distance,\n              // What do we want? intersection point on the ray or on the segment??\n              // point: raycaster.ray.at( distance ),\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\n              index: i,\n              face: null,\n              faceIndex: null,\n              object: this\n            });\n          }\n        }\n      } else if (geometry.isGeometry) {\n        var vertices = geometry.vertices;\n        var nbVertices = vertices.length;\n\n        for (var i = 0; i < nbVertices - 1; i += step) {\n          var distSq = ray.distanceSqToSegment(vertices[i], vertices[i + 1], interRay, interSegment);\n          if (distSq > precisionSq) continue;\n          interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n          var distance = raycaster.ray.origin.distanceTo(interRay);\n          if (distance < raycaster.near || distance > raycaster.far) continue;\n          intersects.push({\n            distance: distance,\n            // What do we want? intersection point on the ray or on the segment??\n            // point: raycaster.ray.at( distance ),\n            point: interSegment.clone().applyMatrix4(this.matrixWorld),\n            index: i,\n            face: null,\n            faceIndex: null,\n            object: this\n          });\n        }\n      }\n    };\n  }(),\n  clone: function () {\n    return new this.constructor(this.geometry, this.material).copy(this);\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments(geometry, material) {\n  Line.call(this, geometry, material);\n  this.type = 'LineSegments';\n}\n\nLineSegments.prototype = Object.assign(Object.create(Line.prototype), {\n  constructor: LineSegments,\n  isLineSegments: true\n});\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop(geometry, material) {\n  Line.call(this, geometry, material);\n  this.type = 'LineLoop';\n}\n\nLineLoop.prototype = Object.assign(Object.create(Line.prototype), {\n  constructor: LineLoop,\n  isLineLoop: true\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction PointsMaterial(parameters) {\n  Material.call(this);\n  this.type = 'PointsMaterial';\n  this.color = new Color(0xffffff);\n  this.map = null;\n  this.size = 1;\n  this.sizeAttenuation = true;\n  this.lights = false;\n  this.setValues(parameters);\n}\n\nPointsMaterial.prototype = Object.create(Material.prototype);\nPointsMaterial.prototype.constructor = PointsMaterial;\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.size = source.size;\n  this.sizeAttenuation = source.sizeAttenuation;\n  return this;\n};\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nfunction Points(geometry, material) {\n  Object3D.call(this);\n  this.type = 'Points';\n  this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n  this.material = material !== undefined ? material : new PointsMaterial({\n    color: Math.random() * 0xffffff\n  });\n}\n\nPoints.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Points,\n  isPoints: true,\n  raycast: function () {\n    var inverseMatrix = new Matrix4();\n    var ray = new Ray();\n    var sphere = new Sphere();\n    return function raycast(raycaster, intersects) {\n      var object = this;\n      var geometry = this.geometry;\n      var matrixWorld = this.matrixWorld;\n      var threshold = raycaster.params.Points.threshold; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(matrixWorld);\n      sphere.radius += threshold;\n      if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n      inverseMatrix.getInverse(matrixWorld);\n      ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n      var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n      var localThresholdSq = localThreshold * localThreshold;\n      var position = new Vector3();\n\n      function testPoint(point, index) {\n        var rayPointDistanceSq = ray.distanceSqToPoint(point);\n\n        if (rayPointDistanceSq < localThresholdSq) {\n          var intersectPoint = ray.closestPointToPoint(point);\n          intersectPoint.applyMatrix4(matrixWorld);\n          var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n          if (distance < raycaster.near || distance > raycaster.far) return;\n          intersects.push({\n            distance: distance,\n            distanceToRay: Math.sqrt(rayPointDistanceSq),\n            point: intersectPoint.clone(),\n            index: index,\n            face: null,\n            object: object\n          });\n        }\n      }\n\n      if (geometry.isBufferGeometry) {\n        var index = geometry.index;\n        var attributes = geometry.attributes;\n        var positions = attributes.position.array;\n\n        if (index !== null) {\n          var indices = index.array;\n\n          for (var i = 0, il = indices.length; i < il; i++) {\n            var a = indices[i];\n            position.fromArray(positions, a * 3);\n            testPoint(position, a);\n          }\n        } else {\n          for (var i = 0, l = positions.length / 3; i < l; i++) {\n            position.fromArray(positions, i * 3);\n            testPoint(position, i);\n          }\n        }\n      } else {\n        var vertices = geometry.vertices;\n\n        for (var i = 0, l = vertices.length; i < l; i++) {\n          testPoint(vertices[i], i);\n        }\n      }\n    };\n  }(),\n  clone: function () {\n    return new this.constructor(this.geometry, this.material).copy(this);\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n  Object3D.call(this);\n  this.type = 'Group';\n}\n\nGroup.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Group\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  Texture.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.generateMipmaps = false;\n  var scope = this;\n\n  function update() {\n    requestAnimationFrame(update);\n\n    if (video.readyState >= video.HAVE_CURRENT_DATA) {\n      scope.needsUpdate = true;\n    }\n  }\n\n  update();\n}\n\nVideoTexture.prototype = Object.create(Texture.prototype);\nVideoTexture.prototype.constructor = VideoTexture;\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n  Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n  this.image = {\n    width: width,\n    height: height\n  };\n  this.mipmaps = mipmaps; // no flipping for cube textures\n  // (also flipping doesn't work for compressed textures )\n\n  this.flipY = false; // can't generate mipmaps for compressed textures\n  // mips must be embedded in DDS files\n\n  this.generateMipmaps = false;\n}\n\nCompressedTexture.prototype = Object.create(Texture.prototype);\nCompressedTexture.prototype.constructor = CompressedTexture;\nCompressedTexture.prototype.isCompressedTexture = true;\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format) {\n  format = format !== undefined ? format : DepthFormat;\n\n  if (format !== DepthFormat && format !== DepthStencilFormat) {\n    throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\n  }\n\n  if (type === undefined && format === DepthFormat) type = UnsignedShortType;\n  if (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\n  Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.image = {\n    width: width,\n    height: height\n  };\n  this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n  this.flipY = false;\n  this.generateMipmaps = false;\n}\n\nDepthTexture.prototype = Object.create(Texture.prototype);\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry(geometry) {\n  BufferGeometry.call(this);\n  this.type = 'WireframeGeometry'; // buffer\n\n  var vertices = []; // helper variables\n\n  var i, j, l, o, ol;\n  var edge = [0, 0],\n      edges = {},\n      e,\n      edge1,\n      edge2;\n  var key,\n      keys = ['a', 'b', 'c'];\n  var vertex; // different logic for Geometry and BufferGeometry\n\n  if (geometry && geometry.isGeometry) {\n    // create a data structure that contains all edges without duplicates\n    var faces = geometry.faces;\n\n    for (i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n\n      for (j = 0; j < 3; j++) {\n        edge1 = face[keys[j]];\n        edge2 = face[keys[(j + 1) % 3]];\n        edge[0] = Math.min(edge1, edge2); // sorting prevents duplicates\n\n        edge[1] = Math.max(edge1, edge2);\n        key = edge[0] + ',' + edge[1];\n\n        if (edges[key] === undefined) {\n          edges[key] = {\n            index1: edge[0],\n            index2: edge[1]\n          };\n        }\n      }\n    } // generate vertices\n\n\n    for (key in edges) {\n      e = edges[key];\n      vertex = geometry.vertices[e.index1];\n      vertices.push(vertex.x, vertex.y, vertex.z);\n      vertex = geometry.vertices[e.index2];\n      vertices.push(vertex.x, vertex.y, vertex.z);\n    }\n  } else if (geometry && geometry.isBufferGeometry) {\n    var position, indices, groups;\n    var group, start, count;\n    var index1, index2;\n    vertex = new Vector3();\n\n    if (geometry.index !== null) {\n      // indexed BufferGeometry\n      position = geometry.attributes.position;\n      indices = geometry.index;\n      groups = geometry.groups;\n\n      if (groups.length === 0) {\n        groups = [{\n          start: 0,\n          count: indices.count,\n          materialIndex: 0\n        }];\n      } // create a data structure that contains all eges without duplicates\n\n\n      for (o = 0, ol = groups.length; o < ol; ++o) {\n        group = groups[o];\n        start = group.start;\n        count = group.count;\n\n        for (i = start, l = start + count; i < l; i += 3) {\n          for (j = 0; j < 3; j++) {\n            edge1 = indices.getX(i + j);\n            edge2 = indices.getX(i + (j + 1) % 3);\n            edge[0] = Math.min(edge1, edge2); // sorting prevents duplicates\n\n            edge[1] = Math.max(edge1, edge2);\n            key = edge[0] + ',' + edge[1];\n\n            if (edges[key] === undefined) {\n              edges[key] = {\n                index1: edge[0],\n                index2: edge[1]\n              };\n            }\n          }\n        }\n      } // generate vertices\n\n\n      for (key in edges) {\n        e = edges[key];\n        vertex.fromBufferAttribute(position, e.index1);\n        vertices.push(vertex.x, vertex.y, vertex.z);\n        vertex.fromBufferAttribute(position, e.index2);\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n    } else {\n      // non-indexed BufferGeometry\n      position = geometry.attributes.position;\n\n      for (i = 0, l = position.count / 3; i < l; i++) {\n        for (j = 0; j < 3; j++) {\n          // three edges per triangle, an edge is represented as (index1, index2)\n          // e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n          index1 = 3 * i + j;\n          vertex.fromBufferAttribute(position, index1);\n          vertices.push(vertex.x, vertex.y, vertex.z);\n          index2 = 3 * i + (j + 1) % 3;\n          vertex.fromBufferAttribute(position, index2);\n          vertices.push(vertex.x, vertex.y, vertex.z);\n        }\n      }\n    }\n  } // build geometry\n\n\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n}\n\nWireframeGeometry.prototype = Object.create(BufferGeometry.prototype);\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n// ParametricGeometry\n\nfunction ParametricGeometry(func, slices, stacks) {\n  Geometry.call(this);\n  this.type = 'ParametricGeometry';\n  this.parameters = {\n    func: func,\n    slices: slices,\n    stacks: stacks\n  };\n  this.fromBufferGeometry(new ParametricBufferGeometry(func, slices, stacks));\n  this.mergeVertices();\n}\n\nParametricGeometry.prototype = Object.create(Geometry.prototype);\nParametricGeometry.prototype.constructor = ParametricGeometry; // ParametricBufferGeometry\n\nfunction ParametricBufferGeometry(func, slices, stacks) {\n  BufferGeometry.call(this);\n  this.type = 'ParametricBufferGeometry';\n  this.parameters = {\n    func: func,\n    slices: slices,\n    stacks: stacks\n  }; // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = [];\n  var EPS = 0.00001;\n  var normal = new Vector3();\n  var p0 = new Vector3(),\n      p1 = new Vector3();\n  var pu = new Vector3(),\n      pv = new Vector3();\n  var i, j; // generate vertices, normals and uvs\n\n  var sliceCount = slices + 1;\n\n  for (i = 0; i <= stacks; i++) {\n    var v = i / stacks;\n\n    for (j = 0; j <= slices; j++) {\n      var u = j / slices; // vertex\n\n      p0 = func(u, v, p0);\n      vertices.push(p0.x, p0.y, p0.z); // normal\n      // approximate tangent vectors via finite differences\n\n      if (u - EPS >= 0) {\n        p1 = func(u - EPS, v, p1);\n        pu.subVectors(p0, p1);\n      } else {\n        p1 = func(u + EPS, v, p1);\n        pu.subVectors(p1, p0);\n      }\n\n      if (v - EPS >= 0) {\n        p1 = func(u, v - EPS, p1);\n        pv.subVectors(p0, p1);\n      } else {\n        p1 = func(u, v + EPS, p1);\n        pv.subVectors(p1, p0);\n      } // cross product of tangent vectors returns surface normal\n\n\n      normal.crossVectors(pu, pv).normalize();\n      normals.push(normal.x, normal.y, normal.z); // uv\n\n      uvs.push(u, v);\n    }\n  } // generate indices\n\n\n  for (i = 0; i < stacks; i++) {\n    for (j = 0; j < slices; j++) {\n      var a = i * sliceCount + j;\n      var b = i * sliceCount + j + 1;\n      var c = (i + 1) * sliceCount + j + 1;\n      var d = (i + 1) * sliceCount + j; // faces one and two\n\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n}\n\nParametricBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry(vertices, indices, radius, detail) {\n  Geometry.call(this);\n  this.type = 'PolyhedronGeometry';\n  this.parameters = {\n    vertices: vertices,\n    indices: indices,\n    radius: radius,\n    detail: detail\n  };\n  this.fromBufferGeometry(new PolyhedronBufferGeometry(vertices, indices, radius, detail));\n  this.mergeVertices();\n}\n\nPolyhedronGeometry.prototype = Object.create(Geometry.prototype);\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry; // PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry(vertices, indices, radius, detail) {\n  BufferGeometry.call(this);\n  this.type = 'PolyhedronBufferGeometry';\n  this.parameters = {\n    vertices: vertices,\n    indices: indices,\n    radius: radius,\n    detail: detail\n  };\n  radius = radius || 1;\n  detail = detail || 0; // default buffer data\n\n  var vertexBuffer = [];\n  var uvBuffer = []; // the subdivision creates the vertex buffer data\n\n  subdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\n\n  appplyRadius(radius); // finally, create the uv data\n\n  generateUVs(); // build non-indexed geometry\n\n  this.addAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\n\n  if (detail === 0) {\n    this.computeVertexNormals(); // flat normals\n  } else {\n    this.normalizeNormals(); // smooth normals\n  } // helper functions\n\n\n  function subdivide(detail) {\n    var a = new Vector3();\n    var b = new Vector3();\n    var c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\n\n    for (var i = 0; i < indices.length; i += 3) {\n      // get the vertices of the face\n      getVertexByIndex(indices[i + 0], a);\n      getVertexByIndex(indices[i + 1], b);\n      getVertexByIndex(indices[i + 2], c); // perform subdivision\n\n      subdivideFace(a, b, c, detail);\n    }\n  }\n\n  function subdivideFace(a, b, c, detail) {\n    var cols = Math.pow(2, detail); // we use this multidimensional array as a data structure for creating the subdivision\n\n    var v = [];\n    var i, j; // construct all of the vertices for this subdivision\n\n    for (i = 0; i <= cols; i++) {\n      v[i] = [];\n      var aj = a.clone().lerp(c, i / cols);\n      var bj = b.clone().lerp(c, i / cols);\n      var rows = cols - i;\n\n      for (j = 0; j <= rows; j++) {\n        if (j === 0 && i === cols) {\n          v[i][j] = aj;\n        } else {\n          v[i][j] = aj.clone().lerp(bj, j / rows);\n        }\n      }\n    } // construct all of the faces\n\n\n    for (i = 0; i < cols; i++) {\n      for (j = 0; j < 2 * (cols - i) - 1; j++) {\n        var k = Math.floor(j / 2);\n\n        if (j % 2 === 0) {\n          pushVertex(v[i][k + 1]);\n          pushVertex(v[i + 1][k]);\n          pushVertex(v[i][k]);\n        } else {\n          pushVertex(v[i][k + 1]);\n          pushVertex(v[i + 1][k + 1]);\n          pushVertex(v[i + 1][k]);\n        }\n      }\n    }\n  }\n\n  function appplyRadius(radius) {\n    var vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\n\n    for (var i = 0; i < vertexBuffer.length; i += 3) {\n      vertex.x = vertexBuffer[i + 0];\n      vertex.y = vertexBuffer[i + 1];\n      vertex.z = vertexBuffer[i + 2];\n      vertex.normalize().multiplyScalar(radius);\n      vertexBuffer[i + 0] = vertex.x;\n      vertexBuffer[i + 1] = vertex.y;\n      vertexBuffer[i + 2] = vertex.z;\n    }\n  }\n\n  function generateUVs() {\n    var vertex = new Vector3();\n\n    for (var i = 0; i < vertexBuffer.length; i += 3) {\n      vertex.x = vertexBuffer[i + 0];\n      vertex.y = vertexBuffer[i + 1];\n      vertex.z = vertexBuffer[i + 2];\n      var u = azimuth(vertex) / 2 / Math.PI + 0.5;\n      var v = inclination(vertex) / Math.PI + 0.5;\n      uvBuffer.push(u, 1 - v);\n    }\n\n    correctUVs();\n    correctSeam();\n  }\n\n  function correctSeam() {\n    // handle case when face straddles the seam, see #3269\n    for (var i = 0; i < uvBuffer.length; i += 6) {\n      // uv data of a single face\n      var x0 = uvBuffer[i + 0];\n      var x1 = uvBuffer[i + 2];\n      var x2 = uvBuffer[i + 4];\n      var max = Math.max(x0, x1, x2);\n      var min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\n\n      if (max > 0.9 && min < 0.1) {\n        if (x0 < 0.2) uvBuffer[i + 0] += 1;\n        if (x1 < 0.2) uvBuffer[i + 2] += 1;\n        if (x2 < 0.2) uvBuffer[i + 4] += 1;\n      }\n    }\n  }\n\n  function pushVertex(vertex) {\n    vertexBuffer.push(vertex.x, vertex.y, vertex.z);\n  }\n\n  function getVertexByIndex(index, vertex) {\n    var stride = index * 3;\n    vertex.x = vertices[stride + 0];\n    vertex.y = vertices[stride + 1];\n    vertex.z = vertices[stride + 2];\n  }\n\n  function correctUVs() {\n    var a = new Vector3();\n    var b = new Vector3();\n    var c = new Vector3();\n    var centroid = new Vector3();\n    var uvA = new Vector2();\n    var uvB = new Vector2();\n    var uvC = new Vector2();\n\n    for (var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\n      a.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\n      b.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\n      c.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\n      uvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\n      uvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\n      uvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\n      centroid.copy(a).add(b).add(c).divideScalar(3);\n      var azi = azimuth(centroid);\n      correctUV(uvA, j + 0, a, azi);\n      correctUV(uvB, j + 2, b, azi);\n      correctUV(uvC, j + 4, c, azi);\n    }\n  }\n\n  function correctUV(uv, stride, vector, azimuth) {\n    if (azimuth < 0 && uv.x === 1) {\n      uvBuffer[stride] = uv.x - 1;\n    }\n\n    if (vector.x === 0 && vector.z === 0) {\n      uvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\n    }\n  } // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n  function azimuth(vector) {\n    return Math.atan2(vector.z, -vector.x);\n  } // Angle above the XZ plane.\n\n\n  function inclination(vector) {\n    return Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n  }\n}\n\nPolyhedronBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry(radius, detail) {\n  Geometry.call(this);\n  this.type = 'TetrahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n  this.fromBufferGeometry(new TetrahedronBufferGeometry(radius, detail));\n  this.mergeVertices();\n}\n\nTetrahedronGeometry.prototype = Object.create(Geometry.prototype);\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry; // TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry(radius, detail) {\n  var vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n  var indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n  PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'TetrahedronBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n}\n\nTetrahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n// OctahedronGeometry\n\nfunction OctahedronGeometry(radius, detail) {\n  Geometry.call(this);\n  this.type = 'OctahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n  this.fromBufferGeometry(new OctahedronBufferGeometry(radius, detail));\n  this.mergeVertices();\n}\n\nOctahedronGeometry.prototype = Object.create(Geometry.prototype);\nOctahedronGeometry.prototype.constructor = OctahedronGeometry; // OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry(radius, detail) {\n  var vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n  var indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n  PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'OctahedronBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n}\n\nOctahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry(radius, detail) {\n  Geometry.call(this);\n  this.type = 'IcosahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n  this.fromBufferGeometry(new IcosahedronBufferGeometry(radius, detail));\n  this.mergeVertices();\n}\n\nIcosahedronGeometry.prototype = Object.create(Geometry.prototype);\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry; // IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry(radius, detail) {\n  var t = (1 + Math.sqrt(5)) / 2;\n  var vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n  var indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n  PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'IcosahedronBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n}\n\nIcosahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry(radius, detail) {\n  Geometry.call(this);\n  this.type = 'DodecahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n  this.fromBufferGeometry(new DodecahedronBufferGeometry(radius, detail));\n  this.mergeVertices();\n}\n\nDodecahedronGeometry.prototype = Object.create(Geometry.prototype);\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry; // DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry(radius, detail) {\n  var t = (1 + Math.sqrt(5)) / 2;\n  var r = 1 / t;\n  var vertices = [// (±1, ±1, ±1)\n  -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n  0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n  -r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n  -t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n  var indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n  PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'DodecahedronBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n}\n\nDodecahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n// TubeGeometry\n\nfunction TubeGeometry(path, tubularSegments, radius, radialSegments, closed, taper) {\n  Geometry.call(this);\n  this.type = 'TubeGeometry';\n  this.parameters = {\n    path: path,\n    tubularSegments: tubularSegments,\n    radius: radius,\n    radialSegments: radialSegments,\n    closed: closed\n  };\n  if (taper !== undefined) console.warn('THREE.TubeGeometry: taper has been removed.');\n  var bufferGeometry = new TubeBufferGeometry(path, tubularSegments, radius, radialSegments, closed); // expose internals\n\n  this.tangents = bufferGeometry.tangents;\n  this.normals = bufferGeometry.normals;\n  this.binormals = bufferGeometry.binormals; // create geometry\n\n  this.fromBufferGeometry(bufferGeometry);\n  this.mergeVertices();\n}\n\nTubeGeometry.prototype = Object.create(Geometry.prototype);\nTubeGeometry.prototype.constructor = TubeGeometry; // TubeBufferGeometry\n\nfunction TubeBufferGeometry(path, tubularSegments, radius, radialSegments, closed) {\n  BufferGeometry.call(this);\n  this.type = 'TubeBufferGeometry';\n  this.parameters = {\n    path: path,\n    tubularSegments: tubularSegments,\n    radius: radius,\n    radialSegments: radialSegments,\n    closed: closed\n  };\n  tubularSegments = tubularSegments || 64;\n  radius = radius || 1;\n  radialSegments = radialSegments || 8;\n  closed = closed || false;\n  var frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\n\n  this.tangents = frames.tangents;\n  this.normals = frames.normals;\n  this.binormals = frames.binormals; // helper variables\n\n  var vertex = new Vector3();\n  var normal = new Vector3();\n  var uv = new Vector2();\n  var i, j; // buffer\n\n  var vertices = [];\n  var normals = [];\n  var uvs = [];\n  var indices = []; // create buffer data\n\n  generateBufferData(); // build geometry\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\n\n  function generateBufferData() {\n    for (i = 0; i < tubularSegments; i++) {\n      generateSegment(i);\n    } // if the geometry is not closed, generate the last row of vertices and normals\n    // at the regular position on the given path\n    //\n    // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\n    generateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\n    // this makes it easy compute correct values for closed geometries\n\n    generateUVs(); // finally create faces\n\n    generateIndices();\n  }\n\n  function generateSegment(i) {\n    // we use getPointAt to sample evenly distributed points from the given path\n    var P = path.getPointAt(i / tubularSegments); // retrieve corresponding normal and binormal\n\n    var N = frames.normals[i];\n    var B = frames.binormals[i]; // generate normals and vertices for the current segment\n\n    for (j = 0; j <= radialSegments; j++) {\n      var v = j / radialSegments * Math.PI * 2;\n      var sin = Math.sin(v);\n      var cos = -Math.cos(v); // normal\n\n      normal.x = cos * N.x + sin * B.x;\n      normal.y = cos * N.y + sin * B.y;\n      normal.z = cos * N.z + sin * B.z;\n      normal.normalize();\n      normals.push(normal.x, normal.y, normal.z); // vertex\n\n      vertex.x = P.x + radius * normal.x;\n      vertex.y = P.y + radius * normal.y;\n      vertex.z = P.z + radius * normal.z;\n      vertices.push(vertex.x, vertex.y, vertex.z);\n    }\n  }\n\n  function generateIndices() {\n    for (j = 1; j <= tubularSegments; j++) {\n      for (i = 1; i <= radialSegments; i++) {\n        var a = (radialSegments + 1) * (j - 1) + (i - 1);\n        var b = (radialSegments + 1) * j + (i - 1);\n        var c = (radialSegments + 1) * j + i;\n        var d = (radialSegments + 1) * (j - 1) + i; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n  }\n\n  function generateUVs() {\n    for (i = 0; i <= tubularSegments; i++) {\n      for (j = 0; j <= radialSegments; j++) {\n        uv.x = i / tubularSegments;\n        uv.y = j / radialSegments;\n        uvs.push(uv.x, uv.y);\n      }\n    }\n  }\n}\n\nTubeBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry(radius, tube, tubularSegments, radialSegments, p, q, heightScale) {\n  Geometry.call(this);\n  this.type = 'TorusKnotGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    tubularSegments: tubularSegments,\n    radialSegments: radialSegments,\n    p: p,\n    q: q\n  };\n  if (heightScale !== undefined) console.warn('THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.');\n  this.fromBufferGeometry(new TorusKnotBufferGeometry(radius, tube, tubularSegments, radialSegments, p, q));\n  this.mergeVertices();\n}\n\nTorusKnotGeometry.prototype = Object.create(Geometry.prototype);\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry; // TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry(radius, tube, tubularSegments, radialSegments, p, q) {\n  BufferGeometry.call(this);\n  this.type = 'TorusKnotBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    tubularSegments: tubularSegments,\n    radialSegments: radialSegments,\n    p: p,\n    q: q\n  };\n  radius = radius || 100;\n  tube = tube || 40;\n  tubularSegments = Math.floor(tubularSegments) || 64;\n  radialSegments = Math.floor(radialSegments) || 8;\n  p = p || 2;\n  q = q || 3; // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = []; // helper variables\n\n  var i, j;\n  var vertex = new Vector3();\n  var normal = new Vector3();\n  var P1 = new Vector3();\n  var P2 = new Vector3();\n  var B = new Vector3();\n  var T = new Vector3();\n  var N = new Vector3(); // generate vertices, normals and uvs\n\n  for (i = 0; i <= tubularSegments; ++i) {\n    // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n    var u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n    // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n    calculatePositionOnCurve(u, p, q, radius, P1);\n    calculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n    T.subVectors(P2, P1);\n    N.addVectors(P2, P1);\n    B.crossVectors(T, N);\n    N.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n    B.normalize();\n    N.normalize();\n\n    for (j = 0; j <= radialSegments; ++j) {\n      // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n      // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n      var v = j / radialSegments * Math.PI * 2;\n      var cx = -tube * Math.cos(v);\n      var cy = tube * Math.sin(v); // now calculate the final vertex position.\n      // first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n      vertex.x = P1.x + (cx * N.x + cy * B.x);\n      vertex.y = P1.y + (cx * N.y + cy * B.y);\n      vertex.z = P1.z + (cx * N.z + cy * B.z);\n      vertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n      normal.subVectors(vertex, P1).normalize();\n      normals.push(normal.x, normal.y, normal.z); // uv\n\n      uvs.push(i / tubularSegments);\n      uvs.push(j / radialSegments);\n    }\n  } // generate indices\n\n\n  for (j = 1; j <= tubularSegments; j++) {\n    for (i = 1; i <= radialSegments; i++) {\n      // indices\n      var a = (radialSegments + 1) * (j - 1) + (i - 1);\n      var b = (radialSegments + 1) * j + (i - 1);\n      var c = (radialSegments + 1) * j + i;\n      var d = (radialSegments + 1) * (j - 1) + i; // faces\n\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\n\n  function calculatePositionOnCurve(u, p, q, radius, position) {\n    var cu = Math.cos(u);\n    var su = Math.sin(u);\n    var quOverP = q / p * u;\n    var cs = Math.cos(quOverP);\n    position.x = radius * (2 + cs) * 0.5 * cu;\n    position.y = radius * (2 + cs) * su * 0.5;\n    position.z = radius * Math.sin(quOverP) * 0.5;\n  }\n}\n\nTorusKnotBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n// TorusGeometry\n\nfunction TorusGeometry(radius, tube, radialSegments, tubularSegments, arc) {\n  Geometry.call(this);\n  this.type = 'TorusGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    radialSegments: radialSegments,\n    tubularSegments: tubularSegments,\n    arc: arc\n  };\n  this.fromBufferGeometry(new TorusBufferGeometry(radius, tube, radialSegments, tubularSegments, arc));\n  this.mergeVertices();\n}\n\nTorusGeometry.prototype = Object.create(Geometry.prototype);\nTorusGeometry.prototype.constructor = TorusGeometry; // TorusBufferGeometry\n\nfunction TorusBufferGeometry(radius, tube, radialSegments, tubularSegments, arc) {\n  BufferGeometry.call(this);\n  this.type = 'TorusBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    radialSegments: radialSegments,\n    tubularSegments: tubularSegments,\n    arc: arc\n  };\n  radius = radius || 100;\n  tube = tube || 40;\n  radialSegments = Math.floor(radialSegments) || 8;\n  tubularSegments = Math.floor(tubularSegments) || 6;\n  arc = arc || Math.PI * 2; // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = []; // helper variables\n\n  var center = new Vector3();\n  var vertex = new Vector3();\n  var normal = new Vector3();\n  var j, i; // generate vertices, normals and uvs\n\n  for (j = 0; j <= radialSegments; j++) {\n    for (i = 0; i <= tubularSegments; i++) {\n      var u = i / tubularSegments * arc;\n      var v = j / radialSegments * Math.PI * 2; // vertex\n\n      vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n      vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n      vertex.z = tube * Math.sin(v);\n      vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n      center.x = radius * Math.cos(u);\n      center.y = radius * Math.sin(u);\n      normal.subVectors(vertex, center).normalize();\n      normals.push(normal.x, normal.y, normal.z); // uv\n\n      uvs.push(i / tubularSegments);\n      uvs.push(j / radialSegments);\n    }\n  } // generate indices\n\n\n  for (j = 1; j <= radialSegments; j++) {\n    for (i = 1; i <= tubularSegments; i++) {\n      // indices\n      var a = (tubularSegments + 1) * j + i - 1;\n      var b = (tubularSegments + 1) * (j - 1) + i - 1;\n      var c = (tubularSegments + 1) * (j - 1) + i;\n      var d = (tubularSegments + 1) * j + i; // faces\n\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n}\n\nTorusBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n  // calculate area of the contour polygon\n  area: function (contour) {\n    var n = contour.length;\n    var a = 0.0;\n\n    for (var p = n - 1, q = 0; q < n; p = q++) {\n      a += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n    }\n\n    return a * 0.5;\n  },\n  triangulate: function () {\n    /**\n     * This code is a quick port of code written in C++ which was submitted to\n     * flipcode.com by John W. Ratcliff  // July 22, 2000\n     * See original code and more information here:\n     * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n     *\n     * ported to actionscript by Zevan Rosser\n     * www.actionsnippet.com\n     *\n     * ported to javascript by Joshua Koo\n     * http://www.lab4games.net/zz85/blog\n     *\n     */\n    function snip(contour, u, v, w, n, verts) {\n      var p;\n      var ax, ay, bx, by;\n      var cx, cy, px, py;\n      ax = contour[verts[u]].x;\n      ay = contour[verts[u]].y;\n      bx = contour[verts[v]].x;\n      by = contour[verts[v]].y;\n      cx = contour[verts[w]].x;\n      cy = contour[verts[w]].y;\n      if ((bx - ax) * (cy - ay) - (by - ay) * (cx - ax) <= 0) return false;\n      var aX, aY, bX, bY, cX, cY;\n      var apx, apy, bpx, bpy, cpx, cpy;\n      var cCROSSap, bCROSScp, aCROSSbp;\n      aX = cx - bx;\n      aY = cy - by;\n      bX = ax - cx;\n      bY = ay - cy;\n      cX = bx - ax;\n      cY = by - ay;\n\n      for (p = 0; p < n; p++) {\n        px = contour[verts[p]].x;\n        py = contour[verts[p]].y;\n        if (px === ax && py === ay || px === bx && py === by || px === cx && py === cy) continue;\n        apx = px - ax;\n        apy = py - ay;\n        bpx = px - bx;\n        bpy = py - by;\n        cpx = px - cx;\n        cpy = py - cy; // see if p is inside triangle abc\n\n        aCROSSbp = aX * bpy - aY * bpx;\n        cCROSSap = cX * apy - cY * apx;\n        bCROSScp = bX * cpy - bY * cpx;\n        if (aCROSSbp >= -Number.EPSILON && bCROSScp >= -Number.EPSILON && cCROSSap >= -Number.EPSILON) return false;\n      }\n\n      return true;\n    } // takes in an contour array and returns\n\n\n    return function triangulate(contour, indices) {\n      var n = contour.length;\n      if (n < 3) return null;\n      var result = [],\n          verts = [],\n          vertIndices = [];\n      /* we want a counter-clockwise polygon in verts */\n\n      var u, v, w;\n\n      if (ShapeUtils.area(contour) > 0.0) {\n        for (v = 0; v < n; v++) verts[v] = v;\n      } else {\n        for (v = 0; v < n; v++) verts[v] = n - 1 - v;\n      }\n\n      var nv = n;\n      /*  remove nv - 2 vertices, creating 1 triangle every time */\n\n      var count = 2 * nv;\n      /* error detection */\n\n      for (v = nv - 1; nv > 2;) {\n        /* if we loop, it is probably a non-simple polygon */\n        if (count-- <= 0) {\n          //** Triangulate: ERROR - probable bad polygon!\n          //throw ( \"Warning, unable to triangulate polygon!\" );\n          //return null;\n          // Sometimes warning is fine, especially polygons are triangulated in reverse.\n          console.warn('THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()');\n          if (indices) return vertIndices;\n          return result;\n        }\n        /* three consecutive vertices in current polygon, <u,v,w> */\n\n\n        u = v;\n        if (nv <= u) u = 0;\n        /* previous */\n\n        v = u + 1;\n        if (nv <= v) v = 0;\n        /* new v    */\n\n        w = v + 1;\n        if (nv <= w) w = 0;\n        /* next     */\n\n        if (snip(contour, u, v, w, nv, verts)) {\n          var a, b, c, s, t;\n          /* true names of the vertices */\n\n          a = verts[u];\n          b = verts[v];\n          c = verts[w];\n          /* output Triangle */\n\n          result.push([contour[a], contour[b], contour[c]]);\n          vertIndices.push([verts[u], verts[v], verts[w]]);\n          /* remove v from the remaining polygon */\n\n          for (s = v, t = v + 1; t < nv; s++, t++) {\n            verts[s] = verts[t];\n          }\n\n          nv--;\n          /* reset error detection counter */\n\n          count = 2 * nv;\n        }\n      }\n\n      if (indices) return vertIndices;\n      return result;\n    };\n  }(),\n  triangulateShape: function (contour, holes) {\n    function removeDupEndPts(points) {\n      var l = points.length;\n\n      if (l > 2 && points[l - 1].equals(points[0])) {\n        points.pop();\n      }\n    }\n\n    removeDupEndPts(contour);\n    holes.forEach(removeDupEndPts);\n\n    function point_in_segment_2D_colin(inSegPt1, inSegPt2, inOtherPt) {\n      // inOtherPt needs to be collinear to the inSegment\n      if (inSegPt1.x !== inSegPt2.x) {\n        if (inSegPt1.x < inSegPt2.x) {\n          return inSegPt1.x <= inOtherPt.x && inOtherPt.x <= inSegPt2.x;\n        } else {\n          return inSegPt2.x <= inOtherPt.x && inOtherPt.x <= inSegPt1.x;\n        }\n      } else {\n        if (inSegPt1.y < inSegPt2.y) {\n          return inSegPt1.y <= inOtherPt.y && inOtherPt.y <= inSegPt2.y;\n        } else {\n          return inSegPt2.y <= inOtherPt.y && inOtherPt.y <= inSegPt1.y;\n        }\n      }\n    }\n\n    function intersect_segments_2D(inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs) {\n      var seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,\n          seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n      var seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,\n          seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n      var seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n      var seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n      var limit = seg1dy * seg2dx - seg1dx * seg2dy;\n      var perpSeg1 = seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n      if (Math.abs(limit) > Number.EPSILON) {\n        // not parallel\n        var perpSeg2;\n\n        if (limit > 0) {\n          if (perpSeg1 < 0 || perpSeg1 > limit) return [];\n          perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n          if (perpSeg2 < 0 || perpSeg2 > limit) return [];\n        } else {\n          if (perpSeg1 > 0 || perpSeg1 < limit) return [];\n          perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n          if (perpSeg2 > 0 || perpSeg2 < limit) return [];\n        } // i.e. to reduce rounding errors\n        // intersection at endpoint of segment#1?\n\n\n        if (perpSeg2 === 0) {\n          if (inExcludeAdjacentSegs && (perpSeg1 === 0 || perpSeg1 === limit)) return [];\n          return [inSeg1Pt1];\n        }\n\n        if (perpSeg2 === limit) {\n          if (inExcludeAdjacentSegs && (perpSeg1 === 0 || perpSeg1 === limit)) return [];\n          return [inSeg1Pt2];\n        } // intersection at endpoint of segment#2?\n\n\n        if (perpSeg1 === 0) return [inSeg2Pt1];\n        if (perpSeg1 === limit) return [inSeg2Pt2]; // return real intersection point\n\n        var factorSeg1 = perpSeg2 / limit;\n        return [{\n          x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n          y: inSeg1Pt1.y + factorSeg1 * seg1dy\n        }];\n      } else {\n        // parallel or collinear\n        if (perpSeg1 !== 0 || seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy) return []; // they are collinear or degenerate\n\n        var seg1Pt = seg1dx === 0 && seg1dy === 0; // segment1 is just a point?\n\n        var seg2Pt = seg2dx === 0 && seg2dy === 0; // segment2 is just a point?\n        // both segments are points\n\n        if (seg1Pt && seg2Pt) {\n          if (inSeg1Pt1.x !== inSeg2Pt1.x || inSeg1Pt1.y !== inSeg2Pt1.y) return []; // they are distinct  points\n\n          return [inSeg1Pt1]; // they are the same point\n        } // segment#1  is a single point\n\n\n        if (seg1Pt) {\n          if (!point_in_segment_2D_colin(inSeg2Pt1, inSeg2Pt2, inSeg1Pt1)) return []; // but not in segment#2\n\n          return [inSeg1Pt1];\n        } // segment#2  is a single point\n\n\n        if (seg2Pt) {\n          if (!point_in_segment_2D_colin(inSeg1Pt1, inSeg1Pt2, inSeg2Pt1)) return []; // but not in segment#1\n\n          return [inSeg2Pt1];\n        } // they are collinear segments, which might overlap\n\n\n        var seg1min, seg1max, seg1minVal, seg1maxVal;\n        var seg2min, seg2max, seg2minVal, seg2maxVal;\n\n        if (seg1dx !== 0) {\n          // the segments are NOT on a vertical line\n          if (inSeg1Pt1.x < inSeg1Pt2.x) {\n            seg1min = inSeg1Pt1;\n            seg1minVal = inSeg1Pt1.x;\n            seg1max = inSeg1Pt2;\n            seg1maxVal = inSeg1Pt2.x;\n          } else {\n            seg1min = inSeg1Pt2;\n            seg1minVal = inSeg1Pt2.x;\n            seg1max = inSeg1Pt1;\n            seg1maxVal = inSeg1Pt1.x;\n          }\n\n          if (inSeg2Pt1.x < inSeg2Pt2.x) {\n            seg2min = inSeg2Pt1;\n            seg2minVal = inSeg2Pt1.x;\n            seg2max = inSeg2Pt2;\n            seg2maxVal = inSeg2Pt2.x;\n          } else {\n            seg2min = inSeg2Pt2;\n            seg2minVal = inSeg2Pt2.x;\n            seg2max = inSeg2Pt1;\n            seg2maxVal = inSeg2Pt1.x;\n          }\n        } else {\n          // the segments are on a vertical line\n          if (inSeg1Pt1.y < inSeg1Pt2.y) {\n            seg1min = inSeg1Pt1;\n            seg1minVal = inSeg1Pt1.y;\n            seg1max = inSeg1Pt2;\n            seg1maxVal = inSeg1Pt2.y;\n          } else {\n            seg1min = inSeg1Pt2;\n            seg1minVal = inSeg1Pt2.y;\n            seg1max = inSeg1Pt1;\n            seg1maxVal = inSeg1Pt1.y;\n          }\n\n          if (inSeg2Pt1.y < inSeg2Pt2.y) {\n            seg2min = inSeg2Pt1;\n            seg2minVal = inSeg2Pt1.y;\n            seg2max = inSeg2Pt2;\n            seg2maxVal = inSeg2Pt2.y;\n          } else {\n            seg2min = inSeg2Pt2;\n            seg2minVal = inSeg2Pt2.y;\n            seg2max = inSeg2Pt1;\n            seg2maxVal = inSeg2Pt1.y;\n          }\n        }\n\n        if (seg1minVal <= seg2minVal) {\n          if (seg1maxVal < seg2minVal) return [];\n\n          if (seg1maxVal === seg2minVal) {\n            if (inExcludeAdjacentSegs) return [];\n            return [seg2min];\n          }\n\n          if (seg1maxVal <= seg2maxVal) return [seg2min, seg1max];\n          return [seg2min, seg2max];\n        } else {\n          if (seg1minVal > seg2maxVal) return [];\n\n          if (seg1minVal === seg2maxVal) {\n            if (inExcludeAdjacentSegs) return [];\n            return [seg1min];\n          }\n\n          if (seg1maxVal <= seg2maxVal) return [seg1min, seg1max];\n          return [seg1min, seg2max];\n        }\n      }\n    }\n\n    function isPointInsideAngle(inVertex, inLegFromPt, inLegToPt, inOtherPt) {\n      // The order of legs is important\n      // translation of all points, so that Vertex is at (0,0)\n      var legFromPtX = inLegFromPt.x - inVertex.x,\n          legFromPtY = inLegFromPt.y - inVertex.y;\n      var legToPtX = inLegToPt.x - inVertex.x,\n          legToPtY = inLegToPt.y - inVertex.y;\n      var otherPtX = inOtherPt.x - inVertex.x,\n          otherPtY = inOtherPt.y - inVertex.y; // main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\n      var from2toAngle = legFromPtX * legToPtY - legFromPtY * legToPtX;\n      var from2otherAngle = legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n      if (Math.abs(from2toAngle) > Number.EPSILON) {\n        // angle != 180 deg.\n        var other2toAngle = otherPtX * legToPtY - otherPtY * legToPtX; // console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n        if (from2toAngle > 0) {\n          // main angle < 180 deg.\n          return from2otherAngle >= 0 && other2toAngle >= 0;\n        } else {\n          // main angle > 180 deg.\n          return from2otherAngle >= 0 || other2toAngle >= 0;\n        }\n      } else {\n        // angle == 180 deg.\n        // console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n        return from2otherAngle > 0;\n      }\n    }\n\n    function removeHoles(contour, holes) {\n      var shape = contour.concat(); // work on this shape\n\n      var hole;\n\n      function isCutLineInsideAngles(inShapeIdx, inHoleIdx) {\n        // Check if hole point lies within angle around shape point\n        var lastShapeIdx = shape.length - 1;\n        var prevShapeIdx = inShapeIdx - 1;\n        if (prevShapeIdx < 0) prevShapeIdx = lastShapeIdx;\n        var nextShapeIdx = inShapeIdx + 1;\n        if (nextShapeIdx > lastShapeIdx) nextShapeIdx = 0;\n        var insideAngle = isPointInsideAngle(shape[inShapeIdx], shape[prevShapeIdx], shape[nextShapeIdx], hole[inHoleIdx]);\n\n        if (!insideAngle) {\n          // console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n          return false;\n        } // Check if shape point lies within angle around hole point\n\n\n        var lastHoleIdx = hole.length - 1;\n        var prevHoleIdx = inHoleIdx - 1;\n        if (prevHoleIdx < 0) prevHoleIdx = lastHoleIdx;\n        var nextHoleIdx = inHoleIdx + 1;\n        if (nextHoleIdx > lastHoleIdx) nextHoleIdx = 0;\n        insideAngle = isPointInsideAngle(hole[inHoleIdx], hole[prevHoleIdx], hole[nextHoleIdx], shape[inShapeIdx]);\n\n        if (!insideAngle) {\n          // console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n          return false;\n        }\n\n        return true;\n      }\n\n      function intersectsShapeEdge(inShapePt, inHolePt) {\n        // checks for intersections with shape edges\n        var sIdx, nextIdx, intersection;\n\n        for (sIdx = 0; sIdx < shape.length; sIdx++) {\n          nextIdx = sIdx + 1;\n          nextIdx %= shape.length;\n          intersection = intersect_segments_2D(inShapePt, inHolePt, shape[sIdx], shape[nextIdx], true);\n          if (intersection.length > 0) return true;\n        }\n\n        return false;\n      }\n\n      var indepHoles = [];\n\n      function intersectsHoleEdge(inShapePt, inHolePt) {\n        // checks for intersections with hole edges\n        var ihIdx, chkHole, hIdx, nextIdx, intersection;\n\n        for (ihIdx = 0; ihIdx < indepHoles.length; ihIdx++) {\n          chkHole = holes[indepHoles[ihIdx]];\n\n          for (hIdx = 0; hIdx < chkHole.length; hIdx++) {\n            nextIdx = hIdx + 1;\n            nextIdx %= chkHole.length;\n            intersection = intersect_segments_2D(inShapePt, inHolePt, chkHole[hIdx], chkHole[nextIdx], true);\n            if (intersection.length > 0) return true;\n          }\n        }\n\n        return false;\n      }\n\n      var holeIndex,\n          shapeIndex,\n          shapePt,\n          holePt,\n          holeIdx,\n          cutKey,\n          failedCuts = [],\n          tmpShape1,\n          tmpShape2,\n          tmpHole1,\n          tmpHole2;\n\n      for (var h = 0, hl = holes.length; h < hl; h++) {\n        indepHoles.push(h);\n      }\n\n      var minShapeIndex = 0;\n      var counter = indepHoles.length * 2;\n\n      while (indepHoles.length > 0) {\n        counter--;\n\n        if (counter < 0) {\n          console.log('THREE.ShapeUtils: Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!');\n          break;\n        } // search for shape-vertex and hole-vertex,\n        // which can be connected without intersections\n\n\n        for (shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex++) {\n          shapePt = shape[shapeIndex];\n          holeIndex = -1; // search for hole which can be reached without intersections\n\n          for (var h = 0; h < indepHoles.length; h++) {\n            holeIdx = indepHoles[h]; // prevent multiple checks\n\n            cutKey = shapePt.x + ':' + shapePt.y + ':' + holeIdx;\n            if (failedCuts[cutKey] !== undefined) continue;\n            hole = holes[holeIdx];\n\n            for (var h2 = 0; h2 < hole.length; h2++) {\n              holePt = hole[h2];\n              if (!isCutLineInsideAngles(shapeIndex, h2)) continue;\n              if (intersectsShapeEdge(shapePt, holePt)) continue;\n              if (intersectsHoleEdge(shapePt, holePt)) continue;\n              holeIndex = h2;\n              indepHoles.splice(h, 1);\n              tmpShape1 = shape.slice(0, shapeIndex + 1);\n              tmpShape2 = shape.slice(shapeIndex);\n              tmpHole1 = hole.slice(holeIndex);\n              tmpHole2 = hole.slice(0, holeIndex + 1);\n              shape = tmpShape1.concat(tmpHole1).concat(tmpHole2).concat(tmpShape2);\n              minShapeIndex = shapeIndex; // Debug only, to show the selected cuts\n              // glob_CutLines.push( [ shapePt, holePt ] );\n\n              break;\n            }\n\n            if (holeIndex >= 0) break; // hole-vertex found\n\n            failedCuts[cutKey] = true; // remember failure\n          }\n\n          if (holeIndex >= 0) break; // hole-vertex found\n        }\n      }\n\n      return shape;\n      /* shape with no holes */\n    }\n\n    var i,\n        il,\n        f,\n        face,\n        key,\n        index,\n        allPointsMap = {}; // To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n    var allpoints = contour.concat();\n\n    for (var h = 0, hl = holes.length; h < hl; h++) {\n      Array.prototype.push.apply(allpoints, holes[h]);\n    } //console.log( \"allpoints\",allpoints, allpoints.length );\n    // prepare all points map\n\n\n    for (i = 0, il = allpoints.length; i < il; i++) {\n      key = allpoints[i].x + ':' + allpoints[i].y;\n\n      if (allPointsMap[key] !== undefined) {\n        console.warn('THREE.ShapeUtils: Duplicate point', key, i);\n      }\n\n      allPointsMap[key] = i;\n    } // remove holes by cutting paths to holes and adding them to the shape\n\n\n    var shapeWithoutHoles = removeHoles(contour, holes);\n    var triangles = ShapeUtils.triangulate(shapeWithoutHoles, false); // True returns indices for points of spooled shape\n    //console.log( \"triangles\",triangles, triangles.length );\n    // check all face vertices against all points map\n\n    for (i = 0, il = triangles.length; i < il; i++) {\n      face = triangles[i];\n\n      for (f = 0; f < 3; f++) {\n        key = face[f].x + ':' + face[f].y;\n        index = allPointsMap[key];\n\n        if (index !== undefined) {\n          face[f] = index;\n        }\n      }\n    }\n\n    return triangles.concat();\n  },\n  isClockWise: function (pts) {\n    return ShapeUtils.area(pts) < 0;\n  }\n};\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  amount: <int>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *  frames: <Object> // containing arrays of tangents, normals, binormals\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry(shapes, options) {\n  Geometry.call(this);\n  this.type = 'ExtrudeGeometry';\n  this.parameters = {\n    shapes: shapes,\n    options: options\n  };\n  this.fromBufferGeometry(new ExtrudeBufferGeometry(shapes, options));\n  this.mergeVertices();\n}\n\nExtrudeGeometry.prototype = Object.create(Geometry.prototype);\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry; // ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry(shapes, options) {\n  if (typeof shapes === \"undefined\") {\n    return;\n  }\n\n  BufferGeometry.call(this);\n  this.type = 'ExtrudeBufferGeometry';\n  shapes = Array.isArray(shapes) ? shapes : [shapes];\n  this.addShapeList(shapes, options);\n  this.computeVertexNormals(); // can't really use automatic vertex normals\n  // as then front and back sides get smoothed too\n  // should do separate smoothing just for sides\n  //this.computeVertexNormals();\n  //console.log( \"took\", ( Date.now() - startTime ) );\n}\n\nExtrudeBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.getArrays = function () {\n  var positionAttribute = this.getAttribute(\"position\");\n  var verticesArray = positionAttribute ? Array.prototype.slice.call(positionAttribute.array) : [];\n  var uvAttribute = this.getAttribute(\"uv\");\n  var uvArray = uvAttribute ? Array.prototype.slice.call(uvAttribute.array) : [];\n  var IndexAttribute = this.index;\n  var indicesArray = IndexAttribute ? Array.prototype.slice.call(IndexAttribute.array) : [];\n  return {\n    position: verticesArray,\n    uv: uvArray,\n    index: indicesArray\n  };\n};\n\nExtrudeBufferGeometry.prototype.addShapeList = function (shapes, options) {\n  var sl = shapes.length;\n  options.arrays = this.getArrays();\n\n  for (var s = 0; s < sl; s++) {\n    var shape = shapes[s];\n    this.addShape(shape, options);\n  }\n\n  this.setIndex(options.arrays.index);\n  this.addAttribute('position', new Float32BufferAttribute(options.arrays.position, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(options.arrays.uv, 2));\n};\n\nExtrudeBufferGeometry.prototype.addShape = function (shape, options) {\n  var arrays = options.arrays ? options.arrays : this.getArrays();\n  var verticesArray = arrays.position;\n  var indicesArray = arrays.index;\n  var uvArray = arrays.uv;\n  var placeholder = [];\n  var amount = options.amount !== undefined ? options.amount : 100;\n  var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\n  var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\n  var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n  var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n  var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n  var steps = options.steps !== undefined ? options.steps : 1;\n  var extrudePath = options.extrudePath;\n  var extrudePts,\n      extrudeByPath = false; // Use default WorldUVGenerator if no UV generators are specified.\n\n  var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;\n  var splineTube, binormal, normal, position2;\n\n  if (extrudePath) {\n    extrudePts = extrudePath.getSpacedPoints(steps);\n    extrudeByPath = true;\n    bevelEnabled = false; // bevels not supported for path extrusion\n    // SETUP TNB variables\n    // TODO1 - have a .isClosed in spline?\n\n    splineTube = options.frames !== undefined ? options.frames : extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n    binormal = new Vector3();\n    normal = new Vector3();\n    position2 = new Vector3();\n  } // Safeguards if bevels are not enabled\n\n\n  if (!bevelEnabled) {\n    bevelSegments = 0;\n    bevelThickness = 0;\n    bevelSize = 0;\n  } // Variables initialization\n\n\n  var ahole, h, hl; // looping of holes\n\n  var scope = this;\n  var shapePoints = shape.extractPoints(curveSegments);\n  var vertices = shapePoints.shape;\n  var holes = shapePoints.holes;\n  var reverse = !ShapeUtils.isClockWise(vertices);\n\n  if (reverse) {\n    vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n\n      if (ShapeUtils.isClockWise(ahole)) {\n        holes[h] = ahole.reverse();\n      }\n    }\n  }\n\n  var faces = ShapeUtils.triangulateShape(vertices, holes);\n  /* Vertices */\n\n  var contour = vertices; // vertices has all points but contour has only points of circumference\n\n  for (h = 0, hl = holes.length; h < hl; h++) {\n    ahole = holes[h];\n    vertices = vertices.concat(ahole);\n  }\n\n  function scalePt2(pt, vec, size) {\n    if (!vec) console.error(\"THREE.ExtrudeGeometry: vec does not exist\");\n    return vec.clone().multiplyScalar(size).add(pt);\n  }\n\n  var b,\n      bs,\n      t,\n      z,\n      vert,\n      vlen = vertices.length,\n      face,\n      flen = faces.length; // Find directions for point movement\n\n  function getBevelVec(inPt, inPrev, inNext) {\n    // computes for inPt the corresponding point inPt' on a new contour\n    //   shifted by 1 unit (length of normalized vector) to the left\n    // if we walk along contour clockwise, this new contour is outside the old one\n    //\n    // inPt' is the intersection of the two lines parallel to the two\n    //  adjacent edges of inPt at a distance of 1 unit on the left side.\n    var v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n    // good reading for geometry algorithms (here: line-line intersection)\n    // http://geomalgorithms.com/a05-_intersect-1.html\n\n    var v_prev_x = inPt.x - inPrev.x,\n        v_prev_y = inPt.y - inPrev.y;\n    var v_next_x = inNext.x - inPt.x,\n        v_next_y = inNext.y - inPt.y;\n    var v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n    var collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n    if (Math.abs(collinear0) > Number.EPSILON) {\n      // not collinear\n      // length of vectors for normalizing\n      var v_prev_len = Math.sqrt(v_prev_lensq);\n      var v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n      var ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n      var ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n      var ptNextShift_x = inNext.x - v_next_y / v_next_len;\n      var ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n      var sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n      v_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n      v_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n      //  but prevent crazy spikes\n\n      var v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n      if (v_trans_lensq <= 2) {\n        return new Vector2(v_trans_x, v_trans_y);\n      } else {\n        shrink_by = Math.sqrt(v_trans_lensq / 2);\n      }\n    } else {\n      // handle special case of collinear edges\n      var direction_eq = false; // assumes: opposite\n\n      if (v_prev_x > Number.EPSILON) {\n        if (v_next_x > Number.EPSILON) {\n          direction_eq = true;\n        }\n      } else {\n        if (v_prev_x < -Number.EPSILON) {\n          if (v_next_x < -Number.EPSILON) {\n            direction_eq = true;\n          }\n        } else {\n          if (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n            direction_eq = true;\n          }\n        }\n      }\n\n      if (direction_eq) {\n        // console.log(\"Warning: lines are a straight sequence\");\n        v_trans_x = -v_prev_y;\n        v_trans_y = v_prev_x;\n        shrink_by = Math.sqrt(v_prev_lensq);\n      } else {\n        // console.log(\"Warning: lines are a straight spike\");\n        v_trans_x = v_prev_x;\n        v_trans_y = v_prev_y;\n        shrink_by = Math.sqrt(v_prev_lensq / 2);\n      }\n    }\n\n    return new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n  }\n\n  var contourMovements = [];\n\n  for (var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n    if (j === il) j = 0;\n    if (k === il) k = 0; //  (j)---(i)---(k)\n    // console.log('i,j,k', i, j , k)\n\n    contourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n  }\n\n  var holesMovements = [],\n      oneHoleMovements,\n      verticesMovements = contourMovements.concat();\n\n  for (h = 0, hl = holes.length; h < hl; h++) {\n    ahole = holes[h];\n    oneHoleMovements = [];\n\n    for (i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n      if (j === il) j = 0;\n      if (k === il) k = 0; //  (j)---(i)---(k)\n\n      oneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n    }\n\n    holesMovements.push(oneHoleMovements);\n    verticesMovements = verticesMovements.concat(oneHoleMovements);\n  } // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n  for (b = 0; b < bevelSegments; b++) {\n    //for ( b = bevelSegments; b > 0; b -- ) {\n    t = b / bevelSegments;\n    z = bevelThickness * Math.cos(t * Math.PI / 2);\n    bs = bevelSize * Math.sin(t * Math.PI / 2); // contract shape\n\n    for (i = 0, il = contour.length; i < il; i++) {\n      vert = scalePt2(contour[i], contourMovements[i], bs);\n      v(vert.x, vert.y, -z);\n    } // expand holes\n\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      oneHoleMovements = holesMovements[h];\n\n      for (i = 0, il = ahole.length; i < il; i++) {\n        vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n        v(vert.x, vert.y, -z);\n      }\n    }\n  }\n\n  bs = bevelSize; // Back facing vertices\n\n  for (i = 0; i < vlen; i++) {\n    vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n    if (!extrudeByPath) {\n      v(vert.x, vert.y, 0);\n    } else {\n      // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n      normal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n      binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n      position2.copy(extrudePts[0]).add(normal).add(binormal);\n      v(position2.x, position2.y, position2.z);\n    }\n  } // Add stepped vertices...\n  // Including front facing vertices\n\n\n  var s;\n\n  for (s = 1; s <= steps; s++) {\n    for (i = 0; i < vlen; i++) {\n      vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n      if (!extrudeByPath) {\n        v(vert.x, vert.y, amount / steps * s);\n      } else {\n        // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n        normal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n        binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n        position2.copy(extrudePts[s]).add(normal).add(binormal);\n        v(position2.x, position2.y, position2.z);\n      }\n    }\n  } // Add bevel segments planes\n  //for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n  for (b = bevelSegments - 1; b >= 0; b--) {\n    t = b / bevelSegments;\n    z = bevelThickness * Math.cos(t * Math.PI / 2);\n    bs = bevelSize * Math.sin(t * Math.PI / 2); // contract shape\n\n    for (i = 0, il = contour.length; i < il; i++) {\n      vert = scalePt2(contour[i], contourMovements[i], bs);\n      v(vert.x, vert.y, amount + z);\n    } // expand holes\n\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      oneHoleMovements = holesMovements[h];\n\n      for (i = 0, il = ahole.length; i < il; i++) {\n        vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n        if (!extrudeByPath) {\n          v(vert.x, vert.y, amount + z);\n        } else {\n          v(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\n        }\n      }\n    }\n  }\n  /* Faces */\n  // Top and bottom faces\n\n\n  buildLidFaces(); // Sides faces\n\n  buildSideFaces(); /////  Internal functions\n\n  function buildLidFaces() {\n    var start = verticesArray.length / 3;\n\n    if (bevelEnabled) {\n      var layer = 0; // steps + 1\n\n      var offset = vlen * layer; // Bottom faces\n\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[2] + offset, face[1] + offset, face[0] + offset);\n      }\n\n      layer = steps + bevelSegments * 2;\n      offset = vlen * layer; // Top faces\n\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[0] + offset, face[1] + offset, face[2] + offset);\n      }\n    } else {\n      // Bottom faces\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[2], face[1], face[0]);\n      } // Top faces\n\n\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\n      }\n    }\n\n    scope.addGroup(start, verticesArray.length / 3 - start, options.material !== undefined ? options.material : 0);\n  } // Create faces for the z-sides of the shape\n\n\n  function buildSideFaces() {\n    var start = verticesArray.length / 3;\n    var layeroffset = 0;\n    sidewalls(contour, layeroffset);\n    layeroffset += contour.length;\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      sidewalls(ahole, layeroffset); //, true\n\n      layeroffset += ahole.length;\n    }\n\n    scope.addGroup(start, verticesArray.length / 3 - start, options.extrudeMaterial !== undefined ? options.extrudeMaterial : 1);\n  }\n\n  function sidewalls(contour, layeroffset) {\n    var j, k;\n    i = contour.length;\n\n    while (--i >= 0) {\n      j = i;\n      k = i - 1;\n      if (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n      var s = 0,\n          sl = steps + bevelSegments * 2;\n\n      for (s = 0; s < sl; s++) {\n        var slen1 = vlen * s;\n        var slen2 = vlen * (s + 1);\n        var a = layeroffset + j + slen1,\n            b = layeroffset + k + slen1,\n            c = layeroffset + k + slen2,\n            d = layeroffset + j + slen2;\n        f4(a, b, c, d, contour, s, sl, j, k);\n      }\n    }\n  }\n\n  function v(x, y, z) {\n    placeholder.push(x);\n    placeholder.push(y);\n    placeholder.push(z);\n  }\n\n  function f3(a, b, c) {\n    addVertex(a);\n    addVertex(b);\n    addVertex(c);\n    var nextIndex = verticesArray.length / 3;\n    var uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n    addUV(uvs[0]);\n    addUV(uvs[1]);\n    addUV(uvs[2]);\n  }\n\n  function f4(a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2) {\n    addVertex(a);\n    addVertex(b);\n    addVertex(d);\n    addVertex(b);\n    addVertex(c);\n    addVertex(d);\n    var nextIndex = verticesArray.length / 3;\n    var uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n    addUV(uvs[0]);\n    addUV(uvs[1]);\n    addUV(uvs[3]);\n    addUV(uvs[1]);\n    addUV(uvs[2]);\n    addUV(uvs[3]);\n  }\n\n  function addVertex(index) {\n    indicesArray.push(verticesArray.length / 3);\n    verticesArray.push(placeholder[index * 3 + 0]);\n    verticesArray.push(placeholder[index * 3 + 1]);\n    verticesArray.push(placeholder[index * 3 + 2]);\n  }\n\n  function addUV(vector2) {\n    uvArray.push(vector2.x);\n    uvArray.push(vector2.y);\n  }\n\n  if (!options.arrays) {\n    this.setIndex(indicesArray);\n    this.addAttribute('position', new Float32BufferAttribute(verticesArray, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(options.arrays.uv, 2));\n  }\n};\n\nExtrudeGeometry.WorldUVGenerator = {\n  generateTopUV: function (geometry, vertices, indexA, indexB, indexC) {\n    var a_x = vertices[indexA * 3];\n    var a_y = vertices[indexA * 3 + 1];\n    var b_x = vertices[indexB * 3];\n    var b_y = vertices[indexB * 3 + 1];\n    var c_x = vertices[indexC * 3];\n    var c_y = vertices[indexC * 3 + 1];\n    return [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\n  },\n  generateSideWallUV: function (geometry, vertices, indexA, indexB, indexC, indexD) {\n    var a_x = vertices[indexA * 3];\n    var a_y = vertices[indexA * 3 + 1];\n    var a_z = vertices[indexA * 3 + 2];\n    var b_x = vertices[indexB * 3];\n    var b_y = vertices[indexB * 3 + 1];\n    var b_z = vertices[indexB * 3 + 2];\n    var c_x = vertices[indexC * 3];\n    var c_y = vertices[indexC * 3 + 1];\n    var c_z = vertices[indexC * 3 + 2];\n    var d_x = vertices[indexD * 3];\n    var d_y = vertices[indexD * 3 + 1];\n    var d_z = vertices[indexD * 3 + 2];\n\n    if (Math.abs(a_y - b_y) < 0.01) {\n      return [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\n    } else {\n      return [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\n    }\n  }\n};\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n// TextGeometry\n\nfunction TextGeometry(text, parameters) {\n  Geometry.call(this);\n  this.type = 'TextGeometry';\n  this.parameters = {\n    text: text,\n    parameters: parameters\n  };\n  this.fromBufferGeometry(new TextBufferGeometry(text, parameters));\n  this.mergeVertices();\n}\n\nTextGeometry.prototype = Object.create(Geometry.prototype);\nTextGeometry.prototype.constructor = TextGeometry; // TextBufferGeometry\n\nfunction TextBufferGeometry(text, parameters) {\n  parameters = parameters || {};\n  var font = parameters.font;\n\n  if (!(font && font.isFont)) {\n    console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');\n    return new Geometry();\n  }\n\n  var shapes = font.generateShapes(text, parameters.size, parameters.curveSegments); // translate parameters to ExtrudeGeometry API\n\n  parameters.amount = parameters.height !== undefined ? parameters.height : 50; // defaults\n\n  if (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\n  if (parameters.bevelSize === undefined) parameters.bevelSize = 8;\n  if (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\n  ExtrudeBufferGeometry.call(this, shapes, parameters);\n  this.type = 'TextBufferGeometry';\n}\n\nTextBufferGeometry.prototype = Object.create(ExtrudeBufferGeometry.prototype);\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n// SphereGeometry\n\nfunction SphereGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n  Geometry.call(this);\n  this.type = 'SphereGeometry';\n  this.parameters = {\n    radius: radius,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    phiStart: phiStart,\n    phiLength: phiLength,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength));\n  this.mergeVertices();\n}\n\nSphereGeometry.prototype = Object.create(Geometry.prototype);\nSphereGeometry.prototype.constructor = SphereGeometry; // SphereBufferGeometry\n\nfunction SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n  BufferGeometry.call(this);\n  this.type = 'SphereBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    phiStart: phiStart,\n    phiLength: phiLength,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  radius = radius || 50;\n  widthSegments = Math.max(3, Math.floor(widthSegments) || 8);\n  heightSegments = Math.max(2, Math.floor(heightSegments) || 6);\n  phiStart = phiStart !== undefined ? phiStart : 0;\n  phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n  var thetaEnd = thetaStart + thetaLength;\n  var ix, iy;\n  var index = 0;\n  var grid = [];\n  var vertex = new Vector3();\n  var normal = new Vector3(); // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = []; // generate vertices, normals and uvs\n\n  for (iy = 0; iy <= heightSegments; iy++) {\n    var verticesRow = [];\n    var v = iy / heightSegments;\n\n    for (ix = 0; ix <= widthSegments; ix++) {\n      var u = ix / widthSegments; // vertex\n\n      vertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n      vertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n      normal.set(vertex.x, vertex.y, vertex.z).normalize();\n      normals.push(normal.x, normal.y, normal.z); // uv\n\n      uvs.push(u, 1 - v);\n      verticesRow.push(index++);\n    }\n\n    grid.push(verticesRow);\n  } // indices\n\n\n  for (iy = 0; iy < heightSegments; iy++) {\n    for (ix = 0; ix < widthSegments; ix++) {\n      var a = grid[iy][ix + 1];\n      var b = grid[iy][ix];\n      var c = grid[iy + 1][ix];\n      var d = grid[iy + 1][ix + 1];\n      if (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\n      if (iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n}\n\nSphereBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n// RingGeometry\n\nfunction RingGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n  Geometry.call(this);\n  this.type = 'RingGeometry';\n  this.parameters = {\n    innerRadius: innerRadius,\n    outerRadius: outerRadius,\n    thetaSegments: thetaSegments,\n    phiSegments: phiSegments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new RingBufferGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength));\n  this.mergeVertices();\n}\n\nRingGeometry.prototype = Object.create(Geometry.prototype);\nRingGeometry.prototype.constructor = RingGeometry; // RingBufferGeometry\n\nfunction RingBufferGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n  BufferGeometry.call(this);\n  this.type = 'RingBufferGeometry';\n  this.parameters = {\n    innerRadius: innerRadius,\n    outerRadius: outerRadius,\n    thetaSegments: thetaSegments,\n    phiSegments: phiSegments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  innerRadius = innerRadius || 20;\n  outerRadius = outerRadius || 50;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n  thetaSegments = thetaSegments !== undefined ? Math.max(3, thetaSegments) : 8;\n  phiSegments = phiSegments !== undefined ? Math.max(1, phiSegments) : 1; // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = []; // some helper variables\n\n  var segment;\n  var radius = innerRadius;\n  var radiusStep = (outerRadius - innerRadius) / phiSegments;\n  var vertex = new Vector3();\n  var uv = new Vector2();\n  var j, i; // generate vertices, normals and uvs\n\n  for (j = 0; j <= phiSegments; j++) {\n    for (i = 0; i <= thetaSegments; i++) {\n      // values are generate from the inside of the ring to the outside\n      segment = thetaStart + i / thetaSegments * thetaLength; // vertex\n\n      vertex.x = radius * Math.cos(segment);\n      vertex.y = radius * Math.sin(segment);\n      vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n      normals.push(0, 0, 1); // uv\n\n      uv.x = (vertex.x / outerRadius + 1) / 2;\n      uv.y = (vertex.y / outerRadius + 1) / 2;\n      uvs.push(uv.x, uv.y);\n    } // increase the radius for next row of vertices\n\n\n    radius += radiusStep;\n  } // indices\n\n\n  for (j = 0; j < phiSegments; j++) {\n    var thetaSegmentLevel = j * (thetaSegments + 1);\n\n    for (i = 0; i < thetaSegments; i++) {\n      segment = i + thetaSegmentLevel;\n      var a = segment;\n      var b = segment + thetaSegments + 1;\n      var c = segment + thetaSegments + 2;\n      var d = segment + 1; // faces\n\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n}\n\nRingBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n// LatheGeometry\n\nfunction LatheGeometry(points, segments, phiStart, phiLength) {\n  Geometry.call(this);\n  this.type = 'LatheGeometry';\n  this.parameters = {\n    points: points,\n    segments: segments,\n    phiStart: phiStart,\n    phiLength: phiLength\n  };\n  this.fromBufferGeometry(new LatheBufferGeometry(points, segments, phiStart, phiLength));\n  this.mergeVertices();\n}\n\nLatheGeometry.prototype = Object.create(Geometry.prototype);\nLatheGeometry.prototype.constructor = LatheGeometry; // LatheBufferGeometry\n\nfunction LatheBufferGeometry(points, segments, phiStart, phiLength) {\n  BufferGeometry.call(this);\n  this.type = 'LatheBufferGeometry';\n  this.parameters = {\n    points: points,\n    segments: segments,\n    phiStart: phiStart,\n    phiLength: phiLength\n  };\n  segments = Math.floor(segments) || 12;\n  phiStart = phiStart || 0;\n  phiLength = phiLength || Math.PI * 2; // clamp phiLength so it's in range of [ 0, 2PI ]\n\n  phiLength = _Math.clamp(phiLength, 0, Math.PI * 2); // buffers\n\n  var indices = [];\n  var vertices = [];\n  var uvs = []; // helper variables\n\n  var base;\n  var inverseSegments = 1.0 / segments;\n  var vertex = new Vector3();\n  var uv = new Vector2();\n  var i, j; // generate vertices and uvs\n\n  for (i = 0; i <= segments; i++) {\n    var phi = phiStart + i * inverseSegments * phiLength;\n    var sin = Math.sin(phi);\n    var cos = Math.cos(phi);\n\n    for (j = 0; j <= points.length - 1; j++) {\n      // vertex\n      vertex.x = points[j].x * sin;\n      vertex.y = points[j].y;\n      vertex.z = points[j].x * cos;\n      vertices.push(vertex.x, vertex.y, vertex.z); // uv\n\n      uv.x = i / segments;\n      uv.y = j / (points.length - 1);\n      uvs.push(uv.x, uv.y);\n    }\n  } // indices\n\n\n  for (i = 0; i < segments; i++) {\n    for (j = 0; j < points.length - 1; j++) {\n      base = j + i * points.length;\n      var a = base;\n      var b = base + points.length;\n      var c = base + points.length + 1;\n      var d = base + 1; // faces\n\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // generate normals\n\n  this.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\n  // because the corresponding vertices are identical (but still have different UVs).\n\n  if (phiLength === Math.PI * 2) {\n    var normals = this.attributes.normal.array;\n    var n1 = new Vector3();\n    var n2 = new Vector3();\n    var n = new Vector3(); // this is the buffer offset for the last line of vertices\n\n    base = segments * points.length * 3;\n\n    for (i = 0, j = 0; i < points.length; i++, j += 3) {\n      // select the normal of the vertex in the first line\n      n1.x = normals[j + 0];\n      n1.y = normals[j + 1];\n      n1.z = normals[j + 2]; // select the normal of the vertex in the last line\n\n      n2.x = normals[base + j + 0];\n      n2.y = normals[base + j + 1];\n      n2.z = normals[base + j + 2]; // average normals\n\n      n.addVectors(n1, n2).normalize(); // assign the new values to both normals\n\n      normals[j + 0] = normals[base + j + 0] = n.x;\n      normals[j + 1] = normals[base + j + 1] = n.y;\n      normals[j + 2] = normals[base + j + 2] = n.z;\n    }\n  }\n}\n\nLatheBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n// ShapeGeometry\n\nfunction ShapeGeometry(shapes, curveSegments) {\n  Geometry.call(this);\n  this.type = 'ShapeGeometry';\n\n  if (typeof curveSegments === 'object') {\n    console.warn('THREE.ShapeGeometry: Options parameter has been removed.');\n    curveSegments = curveSegments.curveSegments;\n  }\n\n  this.parameters = {\n    shapes: shapes,\n    curveSegments: curveSegments\n  };\n  this.fromBufferGeometry(new ShapeBufferGeometry(shapes, curveSegments));\n  this.mergeVertices();\n}\n\nShapeGeometry.prototype = Object.create(Geometry.prototype);\nShapeGeometry.prototype.constructor = ShapeGeometry; // ShapeBufferGeometry\n\nfunction ShapeBufferGeometry(shapes, curveSegments) {\n  BufferGeometry.call(this);\n  this.type = 'ShapeBufferGeometry';\n  this.parameters = {\n    shapes: shapes,\n    curveSegments: curveSegments\n  };\n  curveSegments = curveSegments || 12; // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = []; // helper variables\n\n  var groupStart = 0;\n  var groupCount = 0; // allow single and array values for \"shapes\" parameter\n\n  if (Array.isArray(shapes) === false) {\n    addShape(shapes);\n  } else {\n    for (var i = 0; i < shapes.length; i++) {\n      addShape(shapes[i]);\n      this.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\n\n      groupStart += groupCount;\n      groupCount = 0;\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\n\n  function addShape(shape) {\n    var i, l, shapeHole;\n    var indexOffset = vertices.length / 3;\n    var points = shape.extractPoints(curveSegments);\n    var shapeVertices = points.shape;\n    var shapeHoles = points.holes; // check direction of vertices\n\n    if (ShapeUtils.isClockWise(shapeVertices) === false) {\n      shapeVertices = shapeVertices.reverse(); // also check if holes are in the opposite direction\n\n      for (i = 0, l = shapeHoles.length; i < l; i++) {\n        shapeHole = shapeHoles[i];\n\n        if (ShapeUtils.isClockWise(shapeHole) === true) {\n          shapeHoles[i] = shapeHole.reverse();\n        }\n      }\n    }\n\n    var faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\n\n    for (i = 0, l = shapeHoles.length; i < l; i++) {\n      shapeHole = shapeHoles[i];\n      shapeVertices = shapeVertices.concat(shapeHole);\n    } // vertices, normals, uvs\n\n\n    for (i = 0, l = shapeVertices.length; i < l; i++) {\n      var vertex = shapeVertices[i];\n      vertices.push(vertex.x, vertex.y, 0);\n      normals.push(0, 0, 1);\n      uvs.push(vertex.x, vertex.y); // world uvs\n    } // incides\n\n\n    for (i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n      var a = face[0] + indexOffset;\n      var b = face[1] + indexOffset;\n      var c = face[2] + indexOffset;\n      indices.push(a, b, c);\n      groupCount += 3;\n    }\n  }\n}\n\nShapeBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry(geometry, thresholdAngle) {\n  BufferGeometry.call(this);\n  this.type = 'EdgesGeometry';\n  this.parameters = {\n    thresholdAngle: thresholdAngle\n  };\n  thresholdAngle = thresholdAngle !== undefined ? thresholdAngle : 1; // buffer\n\n  var vertices = []; // helper variables\n\n  var thresholdDot = Math.cos(_Math.DEG2RAD * thresholdAngle);\n  var edge = [0, 0],\n      edges = {},\n      edge1,\n      edge2;\n  var key,\n      keys = ['a', 'b', 'c']; // prepare source geometry\n\n  var geometry2;\n\n  if (geometry.isBufferGeometry) {\n    geometry2 = new Geometry();\n    geometry2.fromBufferGeometry(geometry);\n  } else {\n    geometry2 = geometry.clone();\n  }\n\n  geometry2.mergeVertices();\n  geometry2.computeFaceNormals();\n  var sourceVertices = geometry2.vertices;\n  var faces = geometry2.faces; // now create a data structure where each entry represents an edge with its adjoining faces\n\n  for (var i = 0, l = faces.length; i < l; i++) {\n    var face = faces[i];\n\n    for (var j = 0; j < 3; j++) {\n      edge1 = face[keys[j]];\n      edge2 = face[keys[(j + 1) % 3]];\n      edge[0] = Math.min(edge1, edge2);\n      edge[1] = Math.max(edge1, edge2);\n      key = edge[0] + ',' + edge[1];\n\n      if (edges[key] === undefined) {\n        edges[key] = {\n          index1: edge[0],\n          index2: edge[1],\n          face1: i,\n          face2: undefined\n        };\n      } else {\n        edges[key].face2 = i;\n      }\n    }\n  } // generate vertices\n\n\n  for (key in edges) {\n    var e = edges[key]; // an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n    if (e.face2 === undefined || faces[e.face1].normal.dot(faces[e.face2].normal) <= thresholdDot) {\n      var vertex = sourceVertices[e.index1];\n      vertices.push(vertex.x, vertex.y, vertex.z);\n      vertex = sourceVertices[e.index2];\n      vertices.push(vertex.x, vertex.y, vertex.z);\n    }\n  } // build geometry\n\n\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n}\n\nEdgesGeometry.prototype = Object.create(BufferGeometry.prototype);\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n// CylinderGeometry\n\nfunction CylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  Geometry.call(this);\n  this.type = 'CylinderGeometry';\n  this.parameters = {\n    radiusTop: radiusTop,\n    radiusBottom: radiusBottom,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    openEnded: openEnded,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new CylinderBufferGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength));\n  this.mergeVertices();\n}\n\nCylinderGeometry.prototype = Object.create(Geometry.prototype);\nCylinderGeometry.prototype.constructor = CylinderGeometry; // CylinderBufferGeometry\n\nfunction CylinderBufferGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  BufferGeometry.call(this);\n  this.type = 'CylinderBufferGeometry';\n  this.parameters = {\n    radiusTop: radiusTop,\n    radiusBottom: radiusBottom,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    openEnded: openEnded,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  var scope = this;\n  radiusTop = radiusTop !== undefined ? radiusTop : 20;\n  radiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n  height = height !== undefined ? height : 100;\n  radialSegments = Math.floor(radialSegments) || 8;\n  heightSegments = Math.floor(heightSegments) || 1;\n  openEnded = openEnded !== undefined ? openEnded : false;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n  thetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI; // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = []; // helper variables\n\n  var index = 0;\n  var indexArray = [];\n  var halfHeight = height / 2;\n  var groupStart = 0; // generate geometry\n\n  generateTorso();\n\n  if (openEnded === false) {\n    if (radiusTop > 0) generateCap(true);\n    if (radiusBottom > 0) generateCap(false);\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n  function generateTorso() {\n    var x, y;\n    var normal = new Vector3();\n    var vertex = new Vector3();\n    var groupCount = 0; // this will be used to calculate the normal\n\n    var slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n    for (y = 0; y <= heightSegments; y++) {\n      var indexRow = [];\n      var v = y / heightSegments; // calculate the radius of the current row\n\n      var radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n      for (x = 0; x <= radialSegments; x++) {\n        var u = x / radialSegments;\n        var theta = u * thetaLength + thetaStart;\n        var sinTheta = Math.sin(theta);\n        var cosTheta = Math.cos(theta); // vertex\n\n        vertex.x = radius * sinTheta;\n        vertex.y = -v * height + halfHeight;\n        vertex.z = radius * cosTheta;\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normal.set(sinTheta, slope, cosTheta).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(u, 1 - v); // save index of vertex in respective row\n\n        indexRow.push(index++);\n      } // now save vertices of the row in our index array\n\n\n      indexArray.push(indexRow);\n    } // generate indices\n\n\n    for (x = 0; x < radialSegments; x++) {\n      for (y = 0; y < heightSegments; y++) {\n        // we use the index array to access the correct indices\n        var a = indexArray[y][x];\n        var b = indexArray[y + 1][x];\n        var c = indexArray[y + 1][x + 1];\n        var d = indexArray[y][x + 1]; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d); // update group counter\n\n        groupCount += 6;\n      }\n    } // add a group to the geometry. this will ensure multi material support\n\n\n    scope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n    groupStart += groupCount;\n  }\n\n  function generateCap(top) {\n    var x, centerIndexStart, centerIndexEnd;\n    var uv = new Vector2();\n    var vertex = new Vector3();\n    var groupCount = 0;\n    var radius = top === true ? radiusTop : radiusBottom;\n    var sign = top === true ? 1 : -1; // save the index of the first center vertex\n\n    centerIndexStart = index; // first we generate the center vertex data of the cap.\n    // because the geometry needs one set of uvs per face,\n    // we must generate a center vertex per face/segment\n\n    for (x = 1; x <= radialSegments; x++) {\n      // vertex\n      vertices.push(0, halfHeight * sign, 0); // normal\n\n      normals.push(0, sign, 0); // uv\n\n      uvs.push(0.5, 0.5); // increase index\n\n      index++;\n    } // save the index of the last center vertex\n\n\n    centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n    for (x = 0; x <= radialSegments; x++) {\n      var u = x / radialSegments;\n      var theta = u * thetaLength + thetaStart;\n      var cosTheta = Math.cos(theta);\n      var sinTheta = Math.sin(theta); // vertex\n\n      vertex.x = radius * sinTheta;\n      vertex.y = halfHeight * sign;\n      vertex.z = radius * cosTheta;\n      vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n      normals.push(0, sign, 0); // uv\n\n      uv.x = cosTheta * 0.5 + 0.5;\n      uv.y = sinTheta * 0.5 * sign + 0.5;\n      uvs.push(uv.x, uv.y); // increase index\n\n      index++;\n    } // generate indices\n\n\n    for (x = 0; x < radialSegments; x++) {\n      var c = centerIndexStart + x;\n      var i = centerIndexEnd + x;\n\n      if (top === true) {\n        // face top\n        indices.push(i, i + 1, c);\n      } else {\n        // face bottom\n        indices.push(i + 1, i, c);\n      }\n\n      groupCount += 3;\n    } // add a group to the geometry. this will ensure multi material support\n\n\n    scope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n    groupStart += groupCount;\n  }\n}\n\nCylinderBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n/**\n * @author abelnation / http://github.com/abelnation\n */\n// ConeGeometry\n\nfunction ConeGeometry(radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  CylinderGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n  this.type = 'ConeGeometry';\n  this.parameters = {\n    radius: radius,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    openEnded: openEnded,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n}\n\nConeGeometry.prototype = Object.create(CylinderGeometry.prototype);\nConeGeometry.prototype.constructor = ConeGeometry; // ConeBufferGeometry\n\nfunction ConeBufferGeometry(radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  CylinderBufferGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n  this.type = 'ConeBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    openEnded: openEnded,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n}\n\nConeBufferGeometry.prototype = Object.create(CylinderBufferGeometry.prototype);\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n// CircleGeometry\n\nfunction CircleGeometry(radius, segments, thetaStart, thetaLength) {\n  Geometry.call(this);\n  this.type = 'CircleGeometry';\n  this.parameters = {\n    radius: radius,\n    segments: segments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new CircleBufferGeometry(radius, segments, thetaStart, thetaLength));\n  this.mergeVertices();\n}\n\nCircleGeometry.prototype = Object.create(Geometry.prototype);\nCircleGeometry.prototype.constructor = CircleGeometry; // CircleBufferGeometry\n\nfunction CircleBufferGeometry(radius, segments, thetaStart, thetaLength) {\n  BufferGeometry.call(this);\n  this.type = 'CircleBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    segments: segments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  radius = radius || 50;\n  segments = segments !== undefined ? Math.max(3, segments) : 8;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2; // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = []; // helper variables\n\n  var i, s;\n  var vertex = new Vector3();\n  var uv = new Vector2(); // center point\n\n  vertices.push(0, 0, 0);\n  normals.push(0, 0, 1);\n  uvs.push(0.5, 0.5);\n\n  for (s = 0, i = 3; s <= segments; s++, i += 3) {\n    var segment = thetaStart + s / segments * thetaLength; // vertex\n\n    vertex.x = radius * Math.cos(segment);\n    vertex.y = radius * Math.sin(segment);\n    vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n    normals.push(0, 0, 1); // uvs\n\n    uv.x = (vertices[i] / radius + 1) / 2;\n    uv.y = (vertices[i + 1] / radius + 1) / 2;\n    uvs.push(uv.x, uv.y);\n  } // indices\n\n\n  for (i = 1; i <= segments; i++) {\n    indices.push(i, i + 1, 0);\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n}\n\nCircleBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\nvar Geometries = Object.freeze({\n  WireframeGeometry: WireframeGeometry,\n  ParametricGeometry: ParametricGeometry,\n  ParametricBufferGeometry: ParametricBufferGeometry,\n  TetrahedronGeometry: TetrahedronGeometry,\n  TetrahedronBufferGeometry: TetrahedronBufferGeometry,\n  OctahedronGeometry: OctahedronGeometry,\n  OctahedronBufferGeometry: OctahedronBufferGeometry,\n  IcosahedronGeometry: IcosahedronGeometry,\n  IcosahedronBufferGeometry: IcosahedronBufferGeometry,\n  DodecahedronGeometry: DodecahedronGeometry,\n  DodecahedronBufferGeometry: DodecahedronBufferGeometry,\n  PolyhedronGeometry: PolyhedronGeometry,\n  PolyhedronBufferGeometry: PolyhedronBufferGeometry,\n  TubeGeometry: TubeGeometry,\n  TubeBufferGeometry: TubeBufferGeometry,\n  TorusKnotGeometry: TorusKnotGeometry,\n  TorusKnotBufferGeometry: TorusKnotBufferGeometry,\n  TorusGeometry: TorusGeometry,\n  TorusBufferGeometry: TorusBufferGeometry,\n  TextGeometry: TextGeometry,\n  TextBufferGeometry: TextBufferGeometry,\n  SphereGeometry: SphereGeometry,\n  SphereBufferGeometry: SphereBufferGeometry,\n  RingGeometry: RingGeometry,\n  RingBufferGeometry: RingBufferGeometry,\n  PlaneGeometry: PlaneGeometry,\n  PlaneBufferGeometry: PlaneBufferGeometry,\n  LatheGeometry: LatheGeometry,\n  LatheBufferGeometry: LatheBufferGeometry,\n  ShapeGeometry: ShapeGeometry,\n  ShapeBufferGeometry: ShapeBufferGeometry,\n  ExtrudeGeometry: ExtrudeGeometry,\n  ExtrudeBufferGeometry: ExtrudeBufferGeometry,\n  EdgesGeometry: EdgesGeometry,\n  ConeGeometry: ConeGeometry,\n  ConeBufferGeometry: ConeBufferGeometry,\n  CylinderGeometry: CylinderGeometry,\n  CylinderBufferGeometry: CylinderBufferGeometry,\n  CircleGeometry: CircleGeometry,\n  CircleBufferGeometry: CircleBufferGeometry,\n  BoxGeometry: BoxGeometry,\n  BoxBufferGeometry: BoxBufferGeometry\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>,\n *  opacity: <float>\n * }\n */\n\nfunction ShadowMaterial(parameters) {\n  Material.call(this);\n  this.type = 'ShadowMaterial';\n  this.color = new Color(0x000000);\n  this.opacity = 1.0;\n  this.lights = true;\n  this.transparent = true;\n  this.setValues(parameters);\n}\n\nShadowMaterial.prototype = Object.create(Material.prototype);\nShadowMaterial.prototype.constructor = ShadowMaterial;\nShadowMaterial.prototype.isShadowMaterial = true;\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial(parameters) {\n  ShaderMaterial.call(this, parameters);\n  this.type = 'RawShaderMaterial';\n}\n\nRawShaderMaterial.prototype = Object.create(ShaderMaterial.prototype);\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial(parameters) {\n  Material.call(this);\n  this.defines = {\n    'STANDARD': ''\n  };\n  this.type = 'MeshStandardMaterial';\n  this.color = new Color(0xffffff); // diffuse\n\n  this.roughness = 0.5;\n  this.metalness = 0.5;\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissive = new Color(0x000000);\n  this.emissiveIntensity = 1.0;\n  this.emissiveMap = null;\n  this.bumpMap = null;\n  this.bumpScale = 1;\n  this.normalMap = null;\n  this.normalScale = new Vector2(1, 1);\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.roughnessMap = null;\n  this.metalnessMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.envMapIntensity = 1.0;\n  this.refractionRatio = 0.98;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n}\n\nMeshStandardMaterial.prototype = Object.create(Material.prototype);\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.defines = {\n    'STANDARD': ''\n  };\n  this.color.copy(source.color);\n  this.roughness = source.roughness;\n  this.metalness = source.metalness;\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissive.copy(source.emissive);\n  this.emissiveMap = source.emissiveMap;\n  this.emissiveIntensity = source.emissiveIntensity;\n  this.bumpMap = source.bumpMap;\n  this.bumpScale = source.bumpScale;\n  this.normalMap = source.normalMap;\n  this.normalScale.copy(source.normalScale);\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.roughnessMap = source.roughnessMap;\n  this.metalnessMap = source.metalnessMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.envMapIntensity = source.envMapIntensity;\n  this.refractionRatio = source.refractionRatio;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n};\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\n\nfunction MeshPhysicalMaterial(parameters) {\n  MeshStandardMaterial.call(this);\n  this.defines = {\n    'PHYSICAL': ''\n  };\n  this.type = 'MeshPhysicalMaterial';\n  this.reflectivity = 0.5; // maps to F0 = 0.04\n\n  this.clearCoat = 0.0;\n  this.clearCoatRoughness = 0.0;\n  this.setValues(parameters);\n}\n\nMeshPhysicalMaterial.prototype = Object.create(MeshStandardMaterial.prototype);\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function (source) {\n  MeshStandardMaterial.prototype.copy.call(this, source);\n  this.defines = {\n    'PHYSICAL': ''\n  };\n  this.reflectivity = source.reflectivity;\n  this.clearCoat = source.clearCoat;\n  this.clearCoatRoughness = source.clearCoatRoughness;\n  return this;\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\n\nfunction MeshPhongMaterial(parameters) {\n  Material.call(this);\n  this.type = 'MeshPhongMaterial';\n  this.color = new Color(0xffffff); // diffuse\n\n  this.specular = new Color(0x111111);\n  this.shininess = 30;\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissive = new Color(0x000000);\n  this.emissiveIntensity = 1.0;\n  this.emissiveMap = null;\n  this.bumpMap = null;\n  this.bumpScale = 1;\n  this.normalMap = null;\n  this.normalScale = new Vector2(1, 1);\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n}\n\nMeshPhongMaterial.prototype = Object.create(Material.prototype);\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.specular.copy(source.specular);\n  this.shininess = source.shininess;\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissive.copy(source.emissive);\n  this.emissiveMap = source.emissiveMap;\n  this.emissiveIntensity = source.emissiveIntensity;\n  this.bumpMap = source.bumpMap;\n  this.bumpScale = source.bumpScale;\n  this.normalMap = source.normalMap;\n  this.normalScale.copy(source.normalScale);\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n};\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\n\nfunction MeshToonMaterial(parameters) {\n  MeshPhongMaterial.call(this);\n  this.defines = {\n    'TOON': ''\n  };\n  this.type = 'MeshToonMaterial';\n  this.gradientMap = null;\n  this.setValues(parameters);\n}\n\nMeshToonMaterial.prototype = Object.create(MeshPhongMaterial.prototype);\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function (source) {\n  MeshPhongMaterial.prototype.copy.call(this, source);\n  this.gradientMap = source.gradientMap;\n  return this;\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\n\nfunction MeshNormalMaterial(parameters) {\n  Material.call(this);\n  this.type = 'MeshNormalMaterial';\n  this.bumpMap = null;\n  this.bumpScale = 1;\n  this.normalMap = null;\n  this.normalScale = new Vector2(1, 1);\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.fog = false;\n  this.lights = false;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n}\n\nMeshNormalMaterial.prototype = Object.create(Material.prototype);\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.bumpMap = source.bumpMap;\n  this.bumpScale = source.bumpScale;\n  this.normalMap = source.normalMap;\n  this.normalScale.copy(source.normalScale);\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\n\nfunction MeshLambertMaterial(parameters) {\n  Material.call(this);\n  this.type = 'MeshLambertMaterial';\n  this.color = new Color(0xffffff); // diffuse\n\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissive = new Color(0x000000);\n  this.emissiveIntensity = 1.0;\n  this.emissiveMap = null;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n}\n\nMeshLambertMaterial.prototype = Object.create(Material.prototype);\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissive.copy(source.emissive);\n  this.emissiveMap = source.emissiveMap;\n  this.emissiveIntensity = source.emissiveIntensity;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n};\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\n\nfunction LineDashedMaterial(parameters) {\n  LineBasicMaterial.call(this);\n  this.type = 'LineDashedMaterial';\n  this.scale = 1;\n  this.dashSize = 3;\n  this.gapSize = 1;\n  this.setValues(parameters);\n}\n\nLineDashedMaterial.prototype = Object.create(LineBasicMaterial.prototype);\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function (source) {\n  LineBasicMaterial.prototype.copy.call(this, source);\n  this.scale = source.scale;\n  this.dashSize = source.dashSize;\n  this.gapSize = source.gapSize;\n  return this;\n};\n\nvar Materials = Object.freeze({\n  ShadowMaterial: ShadowMaterial,\n  SpriteMaterial: SpriteMaterial,\n  RawShaderMaterial: RawShaderMaterial,\n  ShaderMaterial: ShaderMaterial,\n  PointsMaterial: PointsMaterial,\n  MeshPhysicalMaterial: MeshPhysicalMaterial,\n  MeshStandardMaterial: MeshStandardMaterial,\n  MeshPhongMaterial: MeshPhongMaterial,\n  MeshToonMaterial: MeshToonMaterial,\n  MeshNormalMaterial: MeshNormalMaterial,\n  MeshLambertMaterial: MeshLambertMaterial,\n  MeshDepthMaterial: MeshDepthMaterial,\n  MeshDistanceMaterial: MeshDistanceMaterial,\n  MeshBasicMaterial: MeshBasicMaterial,\n  LineDashedMaterial: LineDashedMaterial,\n  LineBasicMaterial: LineBasicMaterial,\n  Material: Material\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n  enabled: false,\n  files: {},\n  add: function (key, file) {\n    if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n    this.files[key] = file;\n  },\n  get: function (key) {\n    if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n    return this.files[key];\n  },\n  remove: function (key) {\n    delete this.files[key];\n  },\n  clear: function () {\n    this.files = {};\n  }\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager(onLoad, onProgress, onError) {\n  var scope = this;\n  var isLoading = false,\n      itemsLoaded = 0,\n      itemsTotal = 0;\n  this.onStart = undefined;\n  this.onLoad = onLoad;\n  this.onProgress = onProgress;\n  this.onError = onError;\n\n  this.itemStart = function (url) {\n    itemsTotal++;\n\n    if (isLoading === false) {\n      if (scope.onStart !== undefined) {\n        scope.onStart(url, itemsLoaded, itemsTotal);\n      }\n    }\n\n    isLoading = true;\n  };\n\n  this.itemEnd = function (url) {\n    itemsLoaded++;\n\n    if (scope.onProgress !== undefined) {\n      scope.onProgress(url, itemsLoaded, itemsTotal);\n    }\n\n    if (itemsLoaded === itemsTotal) {\n      isLoading = false;\n\n      if (scope.onLoad !== undefined) {\n        scope.onLoad();\n      }\n    }\n  };\n\n  this.itemError = function (url) {\n    if (scope.onError !== undefined) {\n      scope.onError(url);\n    }\n  };\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FileLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n}\n\nObject.assign(FileLoader.prototype, {\n  load: function (url, onLoad, onProgress, onError) {\n    if (url === undefined) url = '';\n    if (this.path !== undefined) url = this.path + url;\n    var scope = this;\n    var cached = Cache.get(url);\n\n    if (cached !== undefined) {\n      scope.manager.itemStart(url);\n      setTimeout(function () {\n        if (onLoad) onLoad(cached);\n        scope.manager.itemEnd(url);\n      }, 0);\n      return cached;\n    } // Check for data: URI\n\n\n    var dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n    var dataUriRegexResult = url.match(dataUriRegex); // Safari can not handle Data URIs through XMLHttpRequest so process manually\n\n    if (dataUriRegexResult) {\n      var mimeType = dataUriRegexResult[1];\n      var isBase64 = !!dataUriRegexResult[2];\n      var data = dataUriRegexResult[3];\n      data = window.decodeURIComponent(data);\n      if (isBase64) data = window.atob(data);\n\n      try {\n        var response;\n        var responseType = (this.responseType || '').toLowerCase();\n\n        switch (responseType) {\n          case 'arraybuffer':\n          case 'blob':\n            response = new ArrayBuffer(data.length);\n            var view = new Uint8Array(response);\n\n            for (var i = 0; i < data.length; i++) {\n              view[i] = data.charCodeAt(i);\n            }\n\n            if (responseType === 'blob') {\n              response = new Blob([response], {\n                type: mimeType\n              });\n            }\n\n            break;\n\n          case 'document':\n            var parser = new DOMParser();\n            response = parser.parseFromString(data, mimeType);\n            break;\n\n          case 'json':\n            response = JSON.parse(data);\n            break;\n\n          default:\n            // 'text' or other\n            response = data;\n            break;\n        } // Wait for next browser tick\n\n\n        window.setTimeout(function () {\n          if (onLoad) onLoad(response);\n          scope.manager.itemEnd(url);\n        }, 0);\n      } catch (error) {\n        // Wait for next browser tick\n        window.setTimeout(function () {\n          if (onError) onError(error);\n          scope.manager.itemEnd(url);\n          scope.manager.itemError(url);\n        }, 0);\n      }\n    } else {\n      var request = new XMLHttpRequest();\n      request.open('GET', url, true);\n      request.addEventListener('load', function (event) {\n        var response = event.target.response;\n        Cache.add(url, response);\n\n        if (this.status === 200) {\n          if (onLoad) onLoad(response);\n          scope.manager.itemEnd(url);\n        } else if (this.status === 0) {\n          // Some browsers return HTTP Status 0 when using non-http protocol\n          // e.g. 'file://' or 'data://'. Handle as success.\n          console.warn('THREE.FileLoader: HTTP Status 0 received.');\n          if (onLoad) onLoad(response);\n          scope.manager.itemEnd(url);\n        } else {\n          if (onError) onError(event);\n          scope.manager.itemEnd(url);\n          scope.manager.itemError(url);\n        }\n      }, false);\n\n      if (onProgress !== undefined) {\n        request.addEventListener('progress', function (event) {\n          onProgress(event);\n        }, false);\n      }\n\n      request.addEventListener('error', function (event) {\n        if (onError) onError(event);\n        scope.manager.itemEnd(url);\n        scope.manager.itemError(url);\n      }, false);\n      if (this.responseType !== undefined) request.responseType = this.responseType;\n      if (this.withCredentials !== undefined) request.withCredentials = this.withCredentials;\n      if (request.overrideMimeType) request.overrideMimeType(this.mimeType !== undefined ? this.mimeType : 'text/plain');\n\n      for (var header in this.requestHeader) {\n        request.setRequestHeader(header, this.requestHeader[header]);\n      }\n\n      request.send(null);\n    }\n\n    scope.manager.itemStart(url);\n    return request;\n  },\n  setPath: function (value) {\n    this.path = value;\n    return this;\n  },\n  setResponseType: function (value) {\n    this.responseType = value;\n    return this;\n  },\n  setWithCredentials: function (value) {\n    this.withCredentials = value;\n    return this;\n  },\n  setMimeType: function (value) {\n    this.mimeType = value;\n    return this;\n  },\n  setRequestHeader: function (value) {\n    this.requestHeader = value;\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager; // override in sub classes\n\n  this._parser = null;\n}\n\nObject.assign(CompressedTextureLoader.prototype, {\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var images = [];\n    var texture = new CompressedTexture();\n    texture.image = images;\n    var loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n\n    function loadTexture(i) {\n      loader.load(url[i], function (buffer) {\n        var texDatas = scope._parser(buffer, true);\n\n        images[i] = {\n          width: texDatas.width,\n          height: texDatas.height,\n          format: texDatas.format,\n          mipmaps: texDatas.mipmaps\n        };\n        loaded += 1;\n\n        if (loaded === 6) {\n          if (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\n          texture.format = texDatas.format;\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, onProgress, onError);\n    }\n\n    if (Array.isArray(url)) {\n      var loaded = 0;\n\n      for (var i = 0, il = url.length; i < il; ++i) {\n        loadTexture(i);\n      }\n    } else {\n      // compressed cubemap texture stored in a single DDS file\n      loader.load(url, function (buffer) {\n        var texDatas = scope._parser(buffer, true);\n\n        if (texDatas.isCubemap) {\n          var faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n          for (var f = 0; f < faces; f++) {\n            images[f] = {\n              mipmaps: []\n            };\n\n            for (var i = 0; i < texDatas.mipmapCount; i++) {\n              images[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n              images[f].format = texDatas.format;\n              images[f].width = texDatas.width;\n              images[f].height = texDatas.height;\n            }\n          }\n        } else {\n          texture.image.width = texDatas.width;\n          texture.image.height = texDatas.height;\n          texture.mipmaps = texDatas.mipmaps;\n        }\n\n        if (texDatas.mipmapCount === 1) {\n          texture.minFilter = LinearFilter;\n        }\n\n        texture.format = texDatas.format;\n        texture.needsUpdate = true;\n        if (onLoad) onLoad(texture);\n      }, onProgress, onError);\n    }\n\n    return texture;\n  },\n  setPath: function (value) {\n    this.path = value;\n    return this;\n  }\n});\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager; // override in sub classes\n\n  this._parser = null;\n}\n\nObject.assign(DataTextureLoader.prototype, {\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var texture = new DataTexture();\n    var loader = new FileLoader(this.manager);\n    loader.setResponseType('arraybuffer');\n    loader.load(url, function (buffer) {\n      var texData = scope._parser(buffer);\n\n      if (!texData) return;\n\n      if (undefined !== texData.image) {\n        texture.image = texData.image;\n      } else if (undefined !== texData.data) {\n        texture.image.width = texData.width;\n        texture.image.height = texData.height;\n        texture.image.data = texData.data;\n      }\n\n      texture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n      texture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n      texture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n      texture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n      texture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n      if (undefined !== texData.format) {\n        texture.format = texData.format;\n      }\n\n      if (undefined !== texData.type) {\n        texture.type = texData.type;\n      }\n\n      if (undefined !== texData.mipmaps) {\n        texture.mipmaps = texData.mipmaps;\n      }\n\n      if (1 === texData.mipmapCount) {\n        texture.minFilter = LinearFilter;\n      }\n\n      texture.needsUpdate = true;\n      if (onLoad) onLoad(texture, texData);\n    }, onProgress, onError);\n    return texture;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ImageLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n}\n\nObject.assign(ImageLoader.prototype, {\n  crossOrigin: 'Anonymous',\n  load: function (url, onLoad, onProgress, onError) {\n    if (url === undefined) url = '';\n    if (this.path !== undefined) url = this.path + url;\n    var scope = this;\n    var cached = Cache.get(url);\n\n    if (cached !== undefined) {\n      scope.manager.itemStart(url);\n      setTimeout(function () {\n        if (onLoad) onLoad(cached);\n        scope.manager.itemEnd(url);\n      }, 0);\n      return cached;\n    }\n\n    var image = document.createElementNS('http://www.w3.org/1999/xhtml', 'img');\n    image.addEventListener('load', function () {\n      Cache.add(url, this);\n      if (onLoad) onLoad(this);\n      scope.manager.itemEnd(url);\n    }, false);\n    /*\n    image.addEventListener( 'progress', function ( event ) {\n    \t\tif ( onProgress ) onProgress( event );\n    \t}, false );\n    */\n\n    image.addEventListener('error', function (event) {\n      if (onError) onError(event);\n      scope.manager.itemEnd(url);\n      scope.manager.itemError(url);\n    }, false);\n\n    if (url.substr(0, 5) !== 'data:') {\n      if (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n    }\n\n    scope.manager.itemStart(url);\n    image.src = url;\n    return image;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n    return this;\n  },\n  setPath: function (value) {\n    this.path = value;\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTextureLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n}\n\nObject.assign(CubeTextureLoader.prototype, {\n  crossOrigin: 'Anonymous',\n  load: function (urls, onLoad, onProgress, onError) {\n    var texture = new CubeTexture();\n    var loader = new ImageLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setPath(this.path);\n    var loaded = 0;\n\n    function loadTexture(i) {\n      loader.load(urls[i], function (image) {\n        texture.images[i] = image;\n        loaded++;\n\n        if (loaded === 6) {\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, undefined, onError);\n    }\n\n    for (var i = 0; i < urls.length; ++i) {\n      loadTexture(i);\n    }\n\n    return texture;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n    return this;\n  },\n  setPath: function (value) {\n    this.path = value;\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction TextureLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n}\n\nObject.assign(TextureLoader.prototype, {\n  crossOrigin: 'Anonymous',\n  load: function (url, onLoad, onProgress, onError) {\n    var loader = new ImageLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setPath(this.path);\n    var texture = new Texture();\n    texture.image = loader.load(url, function () {\n      // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n      var isJPEG = url.search(/\\.(jpg|jpeg)$/) > 0 || url.search(/^data\\:image\\/jpeg/) === 0;\n      texture.format = isJPEG ? RGBFormat : RGBAFormat;\n      texture.needsUpdate = true;\n\n      if (onLoad !== undefined) {\n        onLoad(texture);\n      }\n    }, onProgress, onError);\n    return texture;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n    return this;\n  },\n  setPath: function (value) {\n    this.path = value;\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light(color, intensity) {\n  Object3D.call(this);\n  this.type = 'Light';\n  this.color = new Color(color);\n  this.intensity = intensity !== undefined ? intensity : 1;\n  this.receiveShadow = undefined;\n}\n\nLight.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Light,\n  isLight: true,\n  copy: function (source) {\n    Object3D.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.intensity = source.intensity;\n    return this;\n  },\n  toJSON: function (meta) {\n    var data = Object3D.prototype.toJSON.call(this, meta);\n    data.object.color = this.color.getHex();\n    data.object.intensity = this.intensity;\n    if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n    if (this.distance !== undefined) data.object.distance = this.distance;\n    if (this.angle !== undefined) data.object.angle = this.angle;\n    if (this.decay !== undefined) data.object.decay = this.decay;\n    if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n    if (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n    return data;\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight(skyColor, groundColor, intensity) {\n  Light.call(this, skyColor, intensity);\n  this.type = 'HemisphereLight';\n  this.castShadow = undefined;\n  this.position.copy(Object3D.DefaultUp);\n  this.updateMatrix();\n  this.groundColor = new Color(groundColor);\n}\n\nHemisphereLight.prototype = Object.assign(Object.create(Light.prototype), {\n  constructor: HemisphereLight,\n  isHemisphereLight: true,\n  copy: function (source) {\n    Light.prototype.copy.call(this, source);\n    this.groundColor.copy(source.groundColor);\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow(camera) {\n  this.camera = camera;\n  this.bias = 0;\n  this.radius = 1;\n  this.mapSize = new Vector2(512, 512);\n  this.map = null;\n  this.matrix = new Matrix4();\n}\n\nObject.assign(LightShadow.prototype, {\n  copy: function (source) {\n    this.camera = source.camera.clone();\n    this.bias = source.bias;\n    this.radius = source.radius;\n    this.mapSize.copy(source.mapSize);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  toJSON: function () {\n    var object = {};\n    if (this.bias !== 0) object.bias = this.bias;\n    if (this.radius !== 1) object.radius = this.radius;\n    if (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n    object.camera = this.camera.toJSON(false).object;\n    delete object.camera.matrix;\n    return object;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n  LightShadow.call(this, new PerspectiveCamera(50, 1, 0.5, 500));\n}\n\nSpotLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n  constructor: SpotLightShadow,\n  isSpotLightShadow: true,\n  update: function (light) {\n    var camera = this.camera;\n    var fov = _Math.RAD2DEG * 2 * light.angle;\n    var aspect = this.mapSize.width / this.mapSize.height;\n    var far = light.distance || camera.far;\n\n    if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n      camera.fov = fov;\n      camera.aspect = aspect;\n      camera.far = far;\n      camera.updateProjectionMatrix();\n    }\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight(color, intensity, distance, angle, penumbra, decay) {\n  Light.call(this, color, intensity);\n  this.type = 'SpotLight';\n  this.position.copy(Object3D.DefaultUp);\n  this.updateMatrix();\n  this.target = new Object3D();\n  Object.defineProperty(this, 'power', {\n    get: function () {\n      // intensity = power per solid angle.\n      // ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n      return this.intensity * Math.PI;\n    },\n    set: function (power) {\n      // intensity = power per solid angle.\n      // ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n      this.intensity = power / Math.PI;\n    }\n  });\n  this.distance = distance !== undefined ? distance : 0;\n  this.angle = angle !== undefined ? angle : Math.PI / 3;\n  this.penumbra = penumbra !== undefined ? penumbra : 0;\n  this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n  this.shadow = new SpotLightShadow();\n}\n\nSpotLight.prototype = Object.assign(Object.create(Light.prototype), {\n  constructor: SpotLight,\n  isSpotLight: true,\n  copy: function (source) {\n    Light.prototype.copy.call(this, source);\n    this.distance = source.distance;\n    this.angle = source.angle;\n    this.penumbra = source.penumbra;\n    this.decay = source.decay;\n    this.target = source.target.clone();\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLight(color, intensity, distance, decay) {\n  Light.call(this, color, intensity);\n  this.type = 'PointLight';\n  Object.defineProperty(this, 'power', {\n    get: function () {\n      // intensity = power per solid angle.\n      // ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n      return this.intensity * 4 * Math.PI;\n    },\n    set: function (power) {\n      // intensity = power per solid angle.\n      // ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n      this.intensity = power / (4 * Math.PI);\n    }\n  });\n  this.distance = distance !== undefined ? distance : 0;\n  this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n  this.shadow = new LightShadow(new PerspectiveCamera(90, 1, 0.5, 500));\n}\n\nPointLight.prototype = Object.assign(Object.create(Light.prototype), {\n  constructor: PointLight,\n  isPointLight: true,\n  copy: function (source) {\n    Light.prototype.copy.call(this, source);\n    this.distance = source.distance;\n    this.decay = source.decay;\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow() {\n  LightShadow.call(this, new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n}\n\nDirectionalLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n  constructor: DirectionalLightShadow\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight(color, intensity) {\n  Light.call(this, color, intensity);\n  this.type = 'DirectionalLight';\n  this.position.copy(Object3D.DefaultUp);\n  this.updateMatrix();\n  this.target = new Object3D();\n  this.shadow = new DirectionalLightShadow();\n}\n\nDirectionalLight.prototype = Object.assign(Object.create(Light.prototype), {\n  constructor: DirectionalLight,\n  isDirectionalLight: true,\n  copy: function (source) {\n    Light.prototype.copy.call(this, source);\n    this.target = source.target.clone();\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight(color, intensity) {\n  Light.call(this, color, intensity);\n  this.type = 'AmbientLight';\n  this.castShadow = undefined;\n}\n\nAmbientLight.prototype = Object.assign(Object.create(Light.prototype), {\n  constructor: AmbientLight,\n  isAmbientLight: true\n});\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight(color, intensity, width, height) {\n  Light.call(this, color, intensity);\n  this.type = 'RectAreaLight';\n  this.position.set(0, 1, 0);\n  this.updateMatrix();\n  this.width = width !== undefined ? width : 10;\n  this.height = height !== undefined ? height : 10; // TODO (abelnation): distance/decay\n  // TODO (abelnation): update method for RectAreaLight to update transform to lookat target\n  // TODO (abelnation): shadows\n} // TODO (abelnation): RectAreaLight update when light shape is changed\n\n\nRectAreaLight.prototype = Object.assign(Object.create(Light.prototype), {\n  constructor: RectAreaLight,\n  isRectAreaLight: true,\n  copy: function (source) {\n    Light.prototype.copy.call(this, source);\n    this.width = source.width;\n    this.height = source.height;\n    return this;\n  },\n  toJSON: function (meta) {\n    var data = Light.prototype.toJSON.call(this, meta);\n    data.object.width = this.width;\n    data.object.height = this.height;\n    return data;\n  }\n});\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n  // same as Array.prototype.slice, but also works on typed arrays\n  arraySlice: function (array, from, to) {\n    if (AnimationUtils.isTypedArray(array)) {\n      // in ios9 array.subarray(from, undefined) will return empty array\n      // but array.subarray(from) or array.subarray(from, len) is correct\n      return new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\n    }\n\n    return array.slice(from, to);\n  },\n  // converts an array to a specific type\n  convertArray: function (array, type, forceClone) {\n    if (!array || // let 'undefined' and 'null' pass\n    !forceClone && array.constructor === type) return array;\n\n    if (typeof type.BYTES_PER_ELEMENT === 'number') {\n      return new type(array); // create typed array\n    }\n\n    return Array.prototype.slice.call(array); // create Array\n  },\n  isTypedArray: function (object) {\n    return ArrayBuffer.isView(object) && !(object instanceof DataView);\n  },\n  // returns an array by which times and values can be sorted\n  getKeyframeOrder: function (times) {\n    function compareTime(i, j) {\n      return times[i] - times[j];\n    }\n\n    var n = times.length;\n    var result = new Array(n);\n\n    for (var i = 0; i !== n; ++i) result[i] = i;\n\n    result.sort(compareTime);\n    return result;\n  },\n  // uses the array previously returned by 'getKeyframeOrder' to sort data\n  sortedArray: function (values, stride, order) {\n    var nValues = values.length;\n    var result = new values.constructor(nValues);\n\n    for (var i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n      var srcOffset = order[i] * stride;\n\n      for (var j = 0; j !== stride; ++j) {\n        result[dstOffset++] = values[srcOffset + j];\n      }\n    }\n\n    return result;\n  },\n  // function for parsing AOS keyframe formats\n  flattenJSON: function (jsonKeys, times, values, valuePropertyName) {\n    var i = 1,\n        key = jsonKeys[0];\n\n    while (key !== undefined && key[valuePropertyName] === undefined) {\n      key = jsonKeys[i++];\n    }\n\n    if (key === undefined) return; // no data\n\n    var value = key[valuePropertyName];\n    if (value === undefined) return; // no data\n\n    if (Array.isArray(value)) {\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          values.push.apply(values, value); // push all elements\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    } else if (value.toArray !== undefined) {\n      // ...assume THREE.Math-ish\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          value.toArray(values, values.length);\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    } else {\n      // otherwise push as-is\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          values.push(value);\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    }\n  }\n};\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  this.parameterPositions = parameterPositions;\n  this._cachedIndex = 0;\n  this.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n  this.sampleValues = sampleValues;\n  this.valueSize = sampleSize;\n}\n\nObject.assign(Interpolant.prototype, {\n  evaluate: function (t) {\n    var pp = this.parameterPositions,\n        i1 = this._cachedIndex,\n        t1 = pp[i1],\n        t0 = pp[i1 - 1];\n\n    validate_interval: {\n      seek: {\n        var right;\n\n        linear_scan: {\n          //- See http://jsperf.com/comparison-to-undefined/3\n          //- slower code:\n          //-\n          //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n          forward_scan: if (!(t < t1)) {\n            for (var giveUpAt = i1 + 2;;) {\n              if (t1 === undefined) {\n                if (t < t0) break forward_scan; // after end\n\n                i1 = pp.length;\n                this._cachedIndex = i1;\n                return this.afterEnd_(i1 - 1, t, t0);\n              }\n\n              if (i1 === giveUpAt) break; // this loop\n\n              t0 = t1;\n              t1 = pp[++i1];\n\n              if (t < t1) {\n                // we have arrived at the sought interval\n                break seek;\n              }\n            } // prepare binary search on the right side of the index\n\n\n            right = pp.length;\n            break linear_scan;\n          } //- slower code:\n          //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n          if (!(t >= t0)) {\n            // looping?\n            var t1global = pp[1];\n\n            if (t < t1global) {\n              i1 = 2; // + 1, using the scan for the details\n\n              t0 = t1global;\n            } // linear reverse scan\n\n\n            for (var giveUpAt = i1 - 2;;) {\n              if (t0 === undefined) {\n                // before start\n                this._cachedIndex = 0;\n                return this.beforeStart_(0, t, t1);\n              }\n\n              if (i1 === giveUpAt) break; // this loop\n\n              t1 = t0;\n              t0 = pp[--i1 - 1];\n\n              if (t >= t0) {\n                // we have arrived at the sought interval\n                break seek;\n              }\n            } // prepare binary search on the left side of the index\n\n\n            right = i1;\n            i1 = 0;\n            break linear_scan;\n          } // the interval is valid\n\n\n          break validate_interval;\n        } // linear scan\n        // binary search\n\n\n        while (i1 < right) {\n          var mid = i1 + right >>> 1;\n\n          if (t < pp[mid]) {\n            right = mid;\n          } else {\n            i1 = mid + 1;\n          }\n        }\n\n        t1 = pp[i1];\n        t0 = pp[i1 - 1]; // check boundary cases, again\n\n        if (t0 === undefined) {\n          this._cachedIndex = 0;\n          return this.beforeStart_(0, t, t1);\n        }\n\n        if (t1 === undefined) {\n          i1 = pp.length;\n          this._cachedIndex = i1;\n          return this.afterEnd_(i1 - 1, t0, t);\n        }\n      } // seek\n\n\n      this._cachedIndex = i1;\n      this.intervalChanged_(i1, t0, t1);\n    } // validate_interval\n\n\n    return this.interpolate_(i1, t0, t, t1);\n  },\n  settings: null,\n  // optional, subclass-specific settings structure\n  // Note: The indirection allows central control of many interpolants.\n  // --- Protected interface\n  DefaultSettings_: {},\n  getSettings_: function () {\n    return this.settings || this.DefaultSettings_;\n  },\n  copySampleValue_: function (index) {\n    // copies a sample value to the result buffer\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        stride = this.valueSize,\n        offset = index * stride;\n\n    for (var i = 0; i !== stride; ++i) {\n      result[i] = values[offset + i];\n    }\n\n    return result;\n  },\n  // Template methods for derived classes:\n  interpolate_: function (i1, t0, t, t1) {\n    throw new Error(\"call to abstract method\"); // implementations shall return this.resultBuffer\n  },\n  intervalChanged_: function (i1, t0, t1) {// empty\n  }\n}); //!\\ DECLARE ALIAS AFTER assign prototype !\n\nObject.assign(Interpolant.prototype, {\n  //( 0, t, t0 ), returns this.resultBuffer\n  beforeStart_: Interpolant.prototype.copySampleValue_,\n  //( N-1, tN-1, t ), returns this.resultBuffer\n  afterEnd_: Interpolant.prototype.copySampleValue_\n});\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  this._weightPrev = -0;\n  this._offsetPrev = -0;\n  this._weightNext = -0;\n  this._offsetNext = -0;\n}\n\nCubicInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n  constructor: CubicInterpolant,\n  DefaultSettings_: {\n    endingStart: ZeroCurvatureEnding,\n    endingEnd: ZeroCurvatureEnding\n  },\n  intervalChanged_: function (i1, t0, t1) {\n    var pp = this.parameterPositions,\n        iPrev = i1 - 2,\n        iNext = i1 + 1,\n        tPrev = pp[iPrev],\n        tNext = pp[iNext];\n\n    if (tPrev === undefined) {\n      switch (this.getSettings_().endingStart) {\n        case ZeroSlopeEnding:\n          // f'(t0) = 0\n          iPrev = i1;\n          tPrev = 2 * t0 - t1;\n          break;\n\n        case WrapAroundEnding:\n          // use the other end of the curve\n          iPrev = pp.length - 2;\n          tPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n          break;\n\n        default:\n          // ZeroCurvatureEnding\n          // f''(t0) = 0 a.k.a. Natural Spline\n          iPrev = i1;\n          tPrev = t1;\n      }\n    }\n\n    if (tNext === undefined) {\n      switch (this.getSettings_().endingEnd) {\n        case ZeroSlopeEnding:\n          // f'(tN) = 0\n          iNext = i1;\n          tNext = 2 * t1 - t0;\n          break;\n\n        case WrapAroundEnding:\n          // use the other end of the curve\n          iNext = 1;\n          tNext = t1 + pp[1] - pp[0];\n          break;\n\n        default:\n          // ZeroCurvatureEnding\n          // f''(tN) = 0, a.k.a. Natural Spline\n          iNext = i1 - 1;\n          tNext = t0;\n      }\n    }\n\n    var halfDt = (t1 - t0) * 0.5,\n        stride = this.valueSize;\n    this._weightPrev = halfDt / (t0 - tPrev);\n    this._weightNext = halfDt / (tNext - t1);\n    this._offsetPrev = iPrev * stride;\n    this._offsetNext = iNext * stride;\n  },\n  interpolate_: function (i1, t0, t, t1) {\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        stride = this.valueSize,\n        o1 = i1 * stride,\n        o0 = o1 - stride,\n        oP = this._offsetPrev,\n        oN = this._offsetNext,\n        wP = this._weightPrev,\n        wN = this._weightNext,\n        p = (t - t0) / (t1 - t0),\n        pp = p * p,\n        ppp = pp * p; // evaluate polynomials\n\n    var sP = -wP * ppp + 2 * wP * pp - wP * p;\n    var s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n    var s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n    var sN = wN * ppp - wN * pp; // combine data linearly\n\n    for (var i = 0; i !== stride; ++i) {\n      result[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n    }\n\n    return result;\n  }\n});\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n}\n\nLinearInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n  constructor: LinearInterpolant,\n  interpolate_: function (i1, t0, t, t1) {\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        stride = this.valueSize,\n        offset1 = i1 * stride,\n        offset0 = offset1 - stride,\n        weight1 = (t - t0) / (t1 - t0),\n        weight0 = 1 - weight1;\n\n    for (var i = 0; i !== stride; ++i) {\n      result[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n    }\n\n    return result;\n  }\n});\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n}\n\nDiscreteInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n  constructor: DiscreteInterpolant,\n  interpolate_: function (i1, t0, t, t1) {\n    return this.copySampleValue_(i1 - 1);\n  }\n});\nvar KeyframeTrackPrototype;\nKeyframeTrackPrototype = {\n  TimeBufferType: Float32Array,\n  ValueBufferType: Float32Array,\n  DefaultInterpolation: InterpolateLinear,\n  InterpolantFactoryMethodDiscrete: function (result) {\n    return new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n  },\n  InterpolantFactoryMethodLinear: function (result) {\n    return new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n  },\n  InterpolantFactoryMethodSmooth: function (result) {\n    return new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n  },\n  setInterpolation: function (interpolation) {\n    var factoryMethod;\n\n    switch (interpolation) {\n      case InterpolateDiscrete:\n        factoryMethod = this.InterpolantFactoryMethodDiscrete;\n        break;\n\n      case InterpolateLinear:\n        factoryMethod = this.InterpolantFactoryMethodLinear;\n        break;\n\n      case InterpolateSmooth:\n        factoryMethod = this.InterpolantFactoryMethodSmooth;\n        break;\n    }\n\n    if (factoryMethod === undefined) {\n      var message = \"unsupported interpolation for \" + this.ValueTypeName + \" keyframe track named \" + this.name;\n\n      if (this.createInterpolant === undefined) {\n        // fall back to default, unless the default itself is messed up\n        if (interpolation !== this.DefaultInterpolation) {\n          this.setInterpolation(this.DefaultInterpolation);\n        } else {\n          throw new Error(message); // fatal, in this case\n        }\n      }\n\n      console.warn('THREE.KeyframeTrackPrototype:', message);\n      return;\n    }\n\n    this.createInterpolant = factoryMethod;\n  },\n  getInterpolation: function () {\n    switch (this.createInterpolant) {\n      case this.InterpolantFactoryMethodDiscrete:\n        return InterpolateDiscrete;\n\n      case this.InterpolantFactoryMethodLinear:\n        return InterpolateLinear;\n\n      case this.InterpolantFactoryMethodSmooth:\n        return InterpolateSmooth;\n    }\n  },\n  getValueSize: function () {\n    return this.values.length / this.times.length;\n  },\n  // move all keyframes either forwards or backwards in time\n  shift: function (timeOffset) {\n    if (timeOffset !== 0.0) {\n      var times = this.times;\n\n      for (var i = 0, n = times.length; i !== n; ++i) {\n        times[i] += timeOffset;\n      }\n    }\n\n    return this;\n  },\n  // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n  scale: function (timeScale) {\n    if (timeScale !== 1.0) {\n      var times = this.times;\n\n      for (var i = 0, n = times.length; i !== n; ++i) {\n        times[i] *= timeScale;\n      }\n    }\n\n    return this;\n  },\n  // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n  // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n  trim: function (startTime, endTime) {\n    var times = this.times,\n        nKeys = times.length,\n        from = 0,\n        to = nKeys - 1;\n\n    while (from !== nKeys && times[from] < startTime) ++from;\n\n    while (to !== -1 && times[to] > endTime) --to;\n\n    ++to; // inclusive -> exclusive bound\n\n    if (from !== 0 || to !== nKeys) {\n      // empty tracks are forbidden, so keep at least one keyframe\n      if (from >= to) to = Math.max(to, 1), from = to - 1;\n      var stride = this.getValueSize();\n      this.times = AnimationUtils.arraySlice(times, from, to);\n      this.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n    }\n\n    return this;\n  },\n  // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n  validate: function () {\n    var valid = true;\n    var valueSize = this.getValueSize();\n\n    if (valueSize - Math.floor(valueSize) !== 0) {\n      console.error('THREE.KeyframeTrackPrototype: Invalid value size in track.', this);\n      valid = false;\n    }\n\n    var times = this.times,\n        values = this.values,\n        nKeys = times.length;\n\n    if (nKeys === 0) {\n      console.error('THREE.KeyframeTrackPrototype: Track is empty.', this);\n      valid = false;\n    }\n\n    var prevTime = null;\n\n    for (var i = 0; i !== nKeys; i++) {\n      var currTime = times[i];\n\n      if (typeof currTime === 'number' && isNaN(currTime)) {\n        console.error('THREE.KeyframeTrackPrototype: Time is not a valid number.', this, i, currTime);\n        valid = false;\n        break;\n      }\n\n      if (prevTime !== null && prevTime > currTime) {\n        console.error('THREE.KeyframeTrackPrototype: Out of order keys.', this, i, currTime, prevTime);\n        valid = false;\n        break;\n      }\n\n      prevTime = currTime;\n    }\n\n    if (values !== undefined) {\n      if (AnimationUtils.isTypedArray(values)) {\n        for (var i = 0, n = values.length; i !== n; ++i) {\n          var value = values[i];\n\n          if (isNaN(value)) {\n            console.error('THREE.KeyframeTrackPrototype: Value is not a valid number.', this, i, value);\n            valid = false;\n            break;\n          }\n        }\n      }\n    }\n\n    return valid;\n  },\n  // removes equivalent sequential keys as common in morph target sequences\n  // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n  optimize: function () {\n    var times = this.times,\n        values = this.values,\n        stride = this.getValueSize(),\n        smoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n        writeIndex = 1,\n        lastIndex = times.length - 1;\n\n    for (var i = 1; i < lastIndex; ++i) {\n      var keep = false;\n      var time = times[i];\n      var timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\n\n      if (time !== timeNext && (i !== 1 || time !== time[0])) {\n        if (!smoothInterpolation) {\n          // remove unnecessary keyframes same as their neighbors\n          var offset = i * stride,\n              offsetP = offset - stride,\n              offsetN = offset + stride;\n\n          for (var j = 0; j !== stride; ++j) {\n            var value = values[offset + j];\n\n            if (value !== values[offsetP + j] || value !== values[offsetN + j]) {\n              keep = true;\n              break;\n            }\n          }\n        } else keep = true;\n      } // in-place compaction\n\n\n      if (keep) {\n        if (i !== writeIndex) {\n          times[writeIndex] = times[i];\n          var readOffset = i * stride,\n              writeOffset = writeIndex * stride;\n\n          for (var j = 0; j !== stride; ++j) values[writeOffset + j] = values[readOffset + j];\n        }\n\n        ++writeIndex;\n      }\n    } // flush last keyframe (compaction looks ahead)\n\n\n    if (lastIndex > 0) {\n      times[writeIndex] = times[lastIndex];\n\n      for (var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++j) values[writeOffset + j] = values[readOffset + j];\n\n      ++writeIndex;\n    }\n\n    if (writeIndex !== times.length) {\n      this.times = AnimationUtils.arraySlice(times, 0, writeIndex);\n      this.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n    }\n\n    return this;\n  }\n};\n\nfunction KeyframeTrackConstructor(name, times, values, interpolation) {\n  if (name === undefined) throw new Error(\"track name is undefined\");\n\n  if (times === undefined || times.length === 0) {\n    throw new Error(\"no keyframes in track named \" + name);\n  }\n\n  this.name = name;\n  this.times = AnimationUtils.convertArray(times, this.TimeBufferType);\n  this.values = AnimationUtils.convertArray(values, this.ValueBufferType);\n  this.setInterpolation(interpolation || this.DefaultInterpolation);\n  this.validate();\n  this.optimize();\n}\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n\nfunction VectorKeyframeTrack(name, times, values, interpolation) {\n  KeyframeTrackConstructor.call(this, name, times, values, interpolation);\n}\n\nVectorKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrackPrototype), {\n  constructor: VectorKeyframeTrack,\n  ValueTypeName: 'vector' // ValueBufferType is inherited\n  // DefaultInterpolation is inherited\n\n});\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n  constructor: QuaternionLinearInterpolant,\n  interpolate_: function (i1, t0, t, t1) {\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        stride = this.valueSize,\n        offset = i1 * stride,\n        alpha = (t - t0) / (t1 - t0);\n\n    for (var end = offset + stride; offset !== end; offset += 4) {\n      Quaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n    }\n\n    return result;\n  }\n});\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack(name, times, values, interpolation) {\n  KeyframeTrackConstructor.call(this, name, times, values, interpolation);\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrackPrototype), {\n  constructor: QuaternionKeyframeTrack,\n  ValueTypeName: 'quaternion',\n  // ValueBufferType is inherited\n  DefaultInterpolation: InterpolateLinear,\n  InterpolantFactoryMethodLinear: function (result) {\n    return new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n  },\n  InterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n});\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack(name, times, values, interpolation) {\n  KeyframeTrackConstructor.call(this, name, times, values, interpolation);\n}\n\nNumberKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrackPrototype), {\n  constructor: NumberKeyframeTrack,\n  ValueTypeName: 'number' // ValueBufferType is inherited\n  // DefaultInterpolation is inherited\n\n});\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack(name, times, values, interpolation) {\n  KeyframeTrackConstructor.call(this, name, times, values, interpolation);\n}\n\nStringKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrackPrototype), {\n  constructor: StringKeyframeTrack,\n  ValueTypeName: 'string',\n  ValueBufferType: Array,\n  DefaultInterpolation: InterpolateDiscrete,\n  InterpolantFactoryMethodLinear: undefined,\n  InterpolantFactoryMethodSmooth: undefined\n});\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack(name, times, values) {\n  KeyframeTrackConstructor.call(this, name, times, values);\n}\n\nBooleanKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrackPrototype), {\n  constructor: BooleanKeyframeTrack,\n  ValueTypeName: 'bool',\n  ValueBufferType: Array,\n  DefaultInterpolation: InterpolateDiscrete,\n  InterpolantFactoryMethodLinear: undefined,\n  InterpolantFactoryMethodSmooth: undefined // Note: Actually this track could have a optimized / compressed\n  // representation of a single value and a custom interpolant that\n  // computes \"firstValue ^ isOdd( index )\".\n\n});\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack(name, times, values, interpolation) {\n  KeyframeTrackConstructor.call(this, name, times, values, interpolation);\n}\n\nColorKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrackPrototype), {\n  constructor: ColorKeyframeTrack,\n  ValueTypeName: 'color' // ValueBufferType is inherited\n  // DefaultInterpolation is inherited\n  // Note: Very basic implementation and nothing special yet.\n  // However, this is the place for color space parameterization.\n\n});\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack(name, times, values, interpolation) {\n  KeyframeTrackConstructor.apply(this, arguments);\n}\n\nKeyframeTrack.prototype = KeyframeTrackPrototype;\nKeyframeTrackPrototype.constructor = KeyframeTrack; // Static methods:\n\nObject.assign(KeyframeTrack, {\n  // Serialization (in static context, because of constructor invocation\n  // and automatic invocation of .toJSON):\n  parse: function (json) {\n    if (json.type === undefined) {\n      throw new Error(\"track type undefined, can not parse\");\n    }\n\n    var trackType = KeyframeTrack._getTrackTypeForValueTypeName(json.type);\n\n    if (json.times === undefined) {\n      var times = [],\n          values = [];\n      AnimationUtils.flattenJSON(json.keys, times, values, 'value');\n      json.times = times;\n      json.values = values;\n    } // derived classes can define a static parse method\n\n\n    if (trackType.parse !== undefined) {\n      return trackType.parse(json);\n    } else {\n      // by default, we assume a constructor compatible with the base\n      return new trackType(json.name, json.times, json.values, json.interpolation);\n    }\n  },\n  toJSON: function (track) {\n    var trackType = track.constructor;\n    var json; // derived classes can define a static toJSON method\n\n    if (trackType.toJSON !== undefined) {\n      json = trackType.toJSON(track);\n    } else {\n      // by default, we assume the data can be serialized as-is\n      json = {\n        'name': track.name,\n        'times': AnimationUtils.convertArray(track.times, Array),\n        'values': AnimationUtils.convertArray(track.values, Array)\n      };\n      var interpolation = track.getInterpolation();\n\n      if (interpolation !== track.DefaultInterpolation) {\n        json.interpolation = interpolation;\n      }\n    }\n\n    json.type = track.ValueTypeName; // mandatory\n\n    return json;\n  },\n  _getTrackTypeForValueTypeName: function (typeName) {\n    switch (typeName.toLowerCase()) {\n      case \"scalar\":\n      case \"double\":\n      case \"float\":\n      case \"number\":\n      case \"integer\":\n        return NumberKeyframeTrack;\n\n      case \"vector\":\n      case \"vector2\":\n      case \"vector3\":\n      case \"vector4\":\n        return VectorKeyframeTrack;\n\n      case \"color\":\n        return ColorKeyframeTrack;\n\n      case \"quaternion\":\n        return QuaternionKeyframeTrack;\n\n      case \"bool\":\n      case \"boolean\":\n        return BooleanKeyframeTrack;\n\n      case \"string\":\n        return StringKeyframeTrack;\n    }\n\n    throw new Error(\"Unsupported typeName: \" + typeName);\n  }\n});\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip(name, duration, tracks) {\n  this.name = name;\n  this.tracks = tracks;\n  this.duration = duration !== undefined ? duration : -1;\n  this.uuid = _Math.generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n  if (this.duration < 0) {\n    this.resetDuration();\n  }\n\n  this.optimize();\n}\n\nObject.assign(AnimationClip, {\n  parse: function (json) {\n    var tracks = [],\n        jsonTracks = json.tracks,\n        frameTime = 1.0 / (json.fps || 1.0);\n\n    for (var i = 0, n = jsonTracks.length; i !== n; ++i) {\n      tracks.push(KeyframeTrack.parse(jsonTracks[i]).scale(frameTime));\n    }\n\n    return new AnimationClip(json.name, json.duration, tracks);\n  },\n  toJSON: function (clip) {\n    var tracks = [],\n        clipTracks = clip.tracks;\n    var json = {\n      'name': clip.name,\n      'duration': clip.duration,\n      'tracks': tracks\n    };\n\n    for (var i = 0, n = clipTracks.length; i !== n; ++i) {\n      tracks.push(KeyframeTrack.toJSON(clipTracks[i]));\n    }\n\n    return json;\n  },\n  CreateFromMorphTargetSequence: function (name, morphTargetSequence, fps, noLoop) {\n    var numMorphTargets = morphTargetSequence.length;\n    var tracks = [];\n\n    for (var i = 0; i < numMorphTargets; i++) {\n      var times = [];\n      var values = [];\n      times.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n      values.push(0, 1, 0);\n      var order = AnimationUtils.getKeyframeOrder(times);\n      times = AnimationUtils.sortedArray(times, 1, order);\n      values = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n      // last frame as well for perfect loop.\n\n      if (!noLoop && times[0] === 0) {\n        times.push(numMorphTargets);\n        values.push(values[0]);\n      }\n\n      tracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n    }\n\n    return new AnimationClip(name, -1, tracks);\n  },\n  findByName: function (objectOrClipArray, name) {\n    var clipArray = objectOrClipArray;\n\n    if (!Array.isArray(objectOrClipArray)) {\n      var o = objectOrClipArray;\n      clipArray = o.geometry && o.geometry.animations || o.animations;\n    }\n\n    for (var i = 0; i < clipArray.length; i++) {\n      if (clipArray[i].name === name) {\n        return clipArray[i];\n      }\n    }\n\n    return null;\n  },\n  CreateClipsFromMorphTargetSequences: function (morphTargets, fps, noLoop) {\n    var animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n    // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n    var pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n    // patterns like Walk_001, Walk_002, Run_001, Run_002\n\n    for (var i = 0, il = morphTargets.length; i < il; i++) {\n      var morphTarget = morphTargets[i];\n      var parts = morphTarget.name.match(pattern);\n\n      if (parts && parts.length > 1) {\n        var name = parts[1];\n        var animationMorphTargets = animationToMorphTargets[name];\n\n        if (!animationMorphTargets) {\n          animationToMorphTargets[name] = animationMorphTargets = [];\n        }\n\n        animationMorphTargets.push(morphTarget);\n      }\n    }\n\n    var clips = [];\n\n    for (var name in animationToMorphTargets) {\n      clips.push(AnimationClip.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop));\n    }\n\n    return clips;\n  },\n  // parse the animation.hierarchy format\n  parseAnimation: function (animation, bones) {\n    if (!animation) {\n      console.error('THREE.AnimationClip: No animation in JSONLoader data.');\n      return null;\n    }\n\n    var addNonemptyTrack = function (trackType, trackName, animationKeys, propertyName, destTracks) {\n      // only return track if there are actually keys.\n      if (animationKeys.length !== 0) {\n        var times = [];\n        var values = [];\n        AnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n        if (times.length !== 0) {\n          destTracks.push(new trackType(trackName, times, values));\n        }\n      }\n    };\n\n    var tracks = [];\n    var clipName = animation.name || 'default'; // automatic length determination in AnimationClip.\n\n    var duration = animation.length || -1;\n    var fps = animation.fps || 30;\n    var hierarchyTracks = animation.hierarchy || [];\n\n    for (var h = 0; h < hierarchyTracks.length; h++) {\n      var animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n      if (!animationKeys || animationKeys.length === 0) continue; // process morph targets\n\n      if (animationKeys[0].morphTargets) {\n        // figure out all morph targets used in this track\n        var morphTargetNames = {};\n\n        for (var k = 0; k < animationKeys.length; k++) {\n          if (animationKeys[k].morphTargets) {\n            for (var m = 0; m < animationKeys[k].morphTargets.length; m++) {\n              morphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n            }\n          }\n        } // create a track for each morph target with all zero\n        // morphTargetInfluences except for the keys in which\n        // the morphTarget is named.\n\n\n        for (var morphTargetName in morphTargetNames) {\n          var times = [];\n          var values = [];\n\n          for (var m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\n            var animationKey = animationKeys[k];\n            times.push(animationKey.time);\n            values.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n          }\n\n          tracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n        }\n\n        duration = morphTargetNames.length * (fps || 1.0);\n      } else {\n        // ...assume skeletal animation\n        var boneName = '.bones[' + bones[h].name + ']';\n        addNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n        addNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n        addNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n      }\n    }\n\n    if (tracks.length === 0) {\n      return null;\n    }\n\n    var clip = new AnimationClip(clipName, duration, tracks);\n    return clip;\n  }\n});\nObject.assign(AnimationClip.prototype, {\n  resetDuration: function () {\n    var tracks = this.tracks,\n        duration = 0;\n\n    for (var i = 0, n = tracks.length; i !== n; ++i) {\n      var track = this.tracks[i];\n      duration = Math.max(duration, track.times[track.times.length - 1]);\n    }\n\n    this.duration = duration;\n  },\n  trim: function () {\n    for (var i = 0; i < this.tracks.length; i++) {\n      this.tracks[i].trim(0, this.duration);\n    }\n\n    return this;\n  },\n  optimize: function () {\n    for (var i = 0; i < this.tracks.length; i++) {\n      this.tracks[i].optimize();\n    }\n\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  this.textures = {};\n}\n\nObject.assign(MaterialLoader.prototype, {\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.load(url, function (text) {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n  },\n  setTextures: function (value) {\n    this.textures = value;\n  },\n  parse: function (json) {\n    var textures = this.textures;\n\n    function getTexture(name) {\n      if (textures[name] === undefined) {\n        console.warn('THREE.MaterialLoader: Undefined texture', name);\n      }\n\n      return textures[name];\n    }\n\n    var material = new Materials[json.type]();\n    if (json.uuid !== undefined) material.uuid = json.uuid;\n    if (json.name !== undefined) material.name = json.name;\n    if (json.color !== undefined) material.color.setHex(json.color);\n    if (json.roughness !== undefined) material.roughness = json.roughness;\n    if (json.metalness !== undefined) material.metalness = json.metalness;\n    if (json.emissive !== undefined) material.emissive.setHex(json.emissive);\n    if (json.specular !== undefined) material.specular.setHex(json.specular);\n    if (json.shininess !== undefined) material.shininess = json.shininess;\n    if (json.clearCoat !== undefined) material.clearCoat = json.clearCoat;\n    if (json.clearCoatRoughness !== undefined) material.clearCoatRoughness = json.clearCoatRoughness;\n    if (json.uniforms !== undefined) material.uniforms = json.uniforms;\n    if (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n    if (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n    if (json.vertexColors !== undefined) material.vertexColors = json.vertexColors;\n    if (json.fog !== undefined) material.fog = json.fog;\n    if (json.flatShading !== undefined) material.flatShading = json.flatShading;\n    if (json.blending !== undefined) material.blending = json.blending;\n    if (json.side !== undefined) material.side = json.side;\n    if (json.opacity !== undefined) material.opacity = json.opacity;\n    if (json.transparent !== undefined) material.transparent = json.transparent;\n    if (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n    if (json.depthTest !== undefined) material.depthTest = json.depthTest;\n    if (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n    if (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n    if (json.wireframe !== undefined) material.wireframe = json.wireframe;\n    if (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n    if (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n    if (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n    if (json.skinning !== undefined) material.skinning = json.skinning;\n    if (json.morphTargets !== undefined) material.morphTargets = json.morphTargets;\n    if (json.dithering !== undefined) material.dithering = json.dithering;\n    if (json.visible !== undefined) material.visible = json.visible;\n    if (json.userData !== undefined) material.userData = json.userData; // Deprecated\n\n    if (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\n    // for PointsMaterial\n\n    if (json.size !== undefined) material.size = json.size;\n    if (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n    if (json.map !== undefined) material.map = getTexture(json.map);\n\n    if (json.alphaMap !== undefined) {\n      material.alphaMap = getTexture(json.alphaMap);\n      material.transparent = true;\n    }\n\n    if (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n    if (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n    if (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n\n    if (json.normalScale !== undefined) {\n      var normalScale = json.normalScale;\n\n      if (Array.isArray(normalScale) === false) {\n        // Blender exporter used to export a scalar. See #7459\n        normalScale = [normalScale, normalScale];\n      }\n\n      material.normalScale = new Vector2().fromArray(normalScale);\n    }\n\n    if (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n    if (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n    if (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n    if (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n    if (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n    if (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n    if (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n    if (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n    if (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n    if (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n    if (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n    if (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n    if (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n    if (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n    if (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\n    return material;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n}\n\nObject.assign(BufferGeometryLoader.prototype, {\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.load(url, function (text) {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n  },\n  parse: function (json) {\n    var geometry = new BufferGeometry();\n    var index = json.data.index;\n\n    if (index !== undefined) {\n      var typedArray = new TYPED_ARRAYS[index.type](index.array);\n      geometry.setIndex(new BufferAttribute(typedArray, 1));\n    }\n\n    var attributes = json.data.attributes;\n\n    for (var key in attributes) {\n      var attribute = attributes[key];\n      var typedArray = new TYPED_ARRAYS[attribute.type](attribute.array);\n      geometry.addAttribute(key, new BufferAttribute(typedArray, attribute.itemSize, attribute.normalized));\n    }\n\n    var groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n    if (groups !== undefined) {\n      for (var i = 0, n = groups.length; i !== n; ++i) {\n        var group = groups[i];\n        geometry.addGroup(group.start, group.count, group.materialIndex);\n      }\n    }\n\n    var boundingSphere = json.data.boundingSphere;\n\n    if (boundingSphere !== undefined) {\n      var center = new Vector3();\n\n      if (boundingSphere.center !== undefined) {\n        center.fromArray(boundingSphere.center);\n      }\n\n      geometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n    }\n\n    return geometry;\n  }\n});\nvar TYPED_ARRAYS = {\n  Int8Array: Int8Array,\n  Uint8Array: Uint8Array,\n  // Workaround for IE11 pre KB2929437. See #11440\n  Uint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n  Int16Array: Int16Array,\n  Uint16Array: Uint16Array,\n  Int32Array: Int32Array,\n  Uint32Array: Uint32Array,\n  Float32Array: Float32Array,\n  Float64Array: Float64Array\n};\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {\n  this.onLoadStart = function () {};\n\n  this.onLoadProgress = function () {};\n\n  this.onLoadComplete = function () {};\n}\n\nLoader.Handlers = {\n  handlers: [],\n  add: function (regex, loader) {\n    this.handlers.push(regex, loader);\n  },\n  get: function (file) {\n    var handlers = this.handlers;\n\n    for (var i = 0, l = handlers.length; i < l; i += 2) {\n      var regex = handlers[i];\n      var loader = handlers[i + 1];\n\n      if (regex.test(file)) {\n        return loader;\n      }\n    }\n\n    return null;\n  }\n};\nObject.assign(Loader.prototype, {\n  crossOrigin: undefined,\n  extractUrlBase: function (url) {\n    var parts = url.split('/');\n    if (parts.length === 1) return './';\n    parts.pop();\n    return parts.join('/') + '/';\n  },\n  initMaterials: function (materials, texturePath, crossOrigin) {\n    var array = [];\n\n    for (var i = 0; i < materials.length; ++i) {\n      array[i] = this.createMaterial(materials[i], texturePath, crossOrigin);\n    }\n\n    return array;\n  },\n  createMaterial: function () {\n    var BlendingMode = {\n      NoBlending: NoBlending,\n      NormalBlending: NormalBlending,\n      AdditiveBlending: AdditiveBlending,\n      SubtractiveBlending: SubtractiveBlending,\n      MultiplyBlending: MultiplyBlending,\n      CustomBlending: CustomBlending\n    };\n    var color = new Color();\n    var textureLoader = new TextureLoader();\n    var materialLoader = new MaterialLoader();\n    return function createMaterial(m, texturePath, crossOrigin) {\n      // convert from old material format\n      var textures = {};\n\n      function loadTexture(path, repeat, offset, wrap, anisotropy) {\n        var fullPath = texturePath + path;\n        var loader = Loader.Handlers.get(fullPath);\n        var texture;\n\n        if (loader !== null) {\n          texture = loader.load(fullPath);\n        } else {\n          textureLoader.setCrossOrigin(crossOrigin);\n          texture = textureLoader.load(fullPath);\n        }\n\n        if (repeat !== undefined) {\n          texture.repeat.fromArray(repeat);\n          if (repeat[0] !== 1) texture.wrapS = RepeatWrapping;\n          if (repeat[1] !== 1) texture.wrapT = RepeatWrapping;\n        }\n\n        if (offset !== undefined) {\n          texture.offset.fromArray(offset);\n        }\n\n        if (wrap !== undefined) {\n          if (wrap[0] === 'repeat') texture.wrapS = RepeatWrapping;\n          if (wrap[0] === 'mirror') texture.wrapS = MirroredRepeatWrapping;\n          if (wrap[1] === 'repeat') texture.wrapT = RepeatWrapping;\n          if (wrap[1] === 'mirror') texture.wrapT = MirroredRepeatWrapping;\n        }\n\n        if (anisotropy !== undefined) {\n          texture.anisotropy = anisotropy;\n        }\n\n        var uuid = _Math.generateUUID();\n\n        textures[uuid] = texture;\n        return uuid;\n      } //\n\n\n      var json = {\n        uuid: _Math.generateUUID(),\n        type: 'MeshLambertMaterial'\n      };\n\n      for (var name in m) {\n        var value = m[name];\n\n        switch (name) {\n          case 'DbgColor':\n          case 'DbgIndex':\n          case 'opticalDensity':\n          case 'illumination':\n            break;\n\n          case 'DbgName':\n            json.name = value;\n            break;\n\n          case 'blending':\n            json.blending = BlendingMode[value];\n            break;\n\n          case 'colorAmbient':\n          case 'mapAmbient':\n            console.warn('THREE.Loader.createMaterial:', name, 'is no longer supported.');\n            break;\n\n          case 'colorDiffuse':\n            json.color = color.fromArray(value).getHex();\n            break;\n\n          case 'colorSpecular':\n            json.specular = color.fromArray(value).getHex();\n            break;\n\n          case 'colorEmissive':\n            json.emissive = color.fromArray(value).getHex();\n            break;\n\n          case 'specularCoef':\n            json.shininess = value;\n            break;\n\n          case 'shading':\n            if (value.toLowerCase() === 'basic') json.type = 'MeshBasicMaterial';\n            if (value.toLowerCase() === 'phong') json.type = 'MeshPhongMaterial';\n            if (value.toLowerCase() === 'standard') json.type = 'MeshStandardMaterial';\n            break;\n\n          case 'mapDiffuse':\n            json.map = loadTexture(value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy);\n            break;\n\n          case 'mapDiffuseRepeat':\n          case 'mapDiffuseOffset':\n          case 'mapDiffuseWrap':\n          case 'mapDiffuseAnisotropy':\n            break;\n\n          case 'mapEmissive':\n            json.emissiveMap = loadTexture(value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy);\n            break;\n\n          case 'mapEmissiveRepeat':\n          case 'mapEmissiveOffset':\n          case 'mapEmissiveWrap':\n          case 'mapEmissiveAnisotropy':\n            break;\n\n          case 'mapLight':\n            json.lightMap = loadTexture(value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy);\n            break;\n\n          case 'mapLightRepeat':\n          case 'mapLightOffset':\n          case 'mapLightWrap':\n          case 'mapLightAnisotropy':\n            break;\n\n          case 'mapAO':\n            json.aoMap = loadTexture(value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy);\n            break;\n\n          case 'mapAORepeat':\n          case 'mapAOOffset':\n          case 'mapAOWrap':\n          case 'mapAOAnisotropy':\n            break;\n\n          case 'mapBump':\n            json.bumpMap = loadTexture(value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy);\n            break;\n\n          case 'mapBumpScale':\n            json.bumpScale = value;\n            break;\n\n          case 'mapBumpRepeat':\n          case 'mapBumpOffset':\n          case 'mapBumpWrap':\n          case 'mapBumpAnisotropy':\n            break;\n\n          case 'mapNormal':\n            json.normalMap = loadTexture(value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy);\n            break;\n\n          case 'mapNormalFactor':\n            json.normalScale = [value, value];\n            break;\n\n          case 'mapNormalRepeat':\n          case 'mapNormalOffset':\n          case 'mapNormalWrap':\n          case 'mapNormalAnisotropy':\n            break;\n\n          case 'mapSpecular':\n            json.specularMap = loadTexture(value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy);\n            break;\n\n          case 'mapSpecularRepeat':\n          case 'mapSpecularOffset':\n          case 'mapSpecularWrap':\n          case 'mapSpecularAnisotropy':\n            break;\n\n          case 'mapMetalness':\n            json.metalnessMap = loadTexture(value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy);\n            break;\n\n          case 'mapMetalnessRepeat':\n          case 'mapMetalnessOffset':\n          case 'mapMetalnessWrap':\n          case 'mapMetalnessAnisotropy':\n            break;\n\n          case 'mapRoughness':\n            json.roughnessMap = loadTexture(value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy);\n            break;\n\n          case 'mapRoughnessRepeat':\n          case 'mapRoughnessOffset':\n          case 'mapRoughnessWrap':\n          case 'mapRoughnessAnisotropy':\n            break;\n\n          case 'mapAlpha':\n            json.alphaMap = loadTexture(value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy);\n            break;\n\n          case 'mapAlphaRepeat':\n          case 'mapAlphaOffset':\n          case 'mapAlphaWrap':\n          case 'mapAlphaAnisotropy':\n            break;\n\n          case 'flipSided':\n            json.side = BackSide;\n            break;\n\n          case 'doubleSided':\n            json.side = DoubleSide;\n            break;\n\n          case 'transparency':\n            console.warn('THREE.Loader.createMaterial: transparency has been renamed to opacity');\n            json.opacity = value;\n            break;\n\n          case 'depthTest':\n          case 'depthWrite':\n          case 'colorWrite':\n          case 'opacity':\n          case 'reflectivity':\n          case 'transparent':\n          case 'visible':\n          case 'wireframe':\n            json[name] = value;\n            break;\n\n          case 'vertexColors':\n            if (value === true) json.vertexColors = VertexColors;\n            if (value === 'face') json.vertexColors = FaceColors;\n            break;\n\n          default:\n            console.error('THREE.Loader.createMaterial: Unsupported', name, value);\n            break;\n        }\n      }\n\n      if (json.type === 'MeshBasicMaterial') delete json.emissive;\n      if (json.type !== 'MeshPhongMaterial') delete json.specular;\n      if (json.opacity < 1) json.transparent = true;\n      materialLoader.setTextures(textures);\n      return materialLoader.parse(json);\n    };\n  }()\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction JSONLoader(manager) {\n  if (typeof manager === 'boolean') {\n    console.warn('THREE.JSONLoader: showStatus parameter has been removed from constructor.');\n    manager = undefined;\n  }\n\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  this.withCredentials = false;\n}\n\nObject.assign(JSONLoader.prototype, {\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var texturePath = this.texturePath && typeof this.texturePath === \"string\" ? this.texturePath : Loader.prototype.extractUrlBase(url);\n    var loader = new FileLoader(this.manager);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (text) {\n      var json = JSON.parse(text);\n      var metadata = json.metadata;\n\n      if (metadata !== undefined) {\n        var type = metadata.type;\n\n        if (type !== undefined) {\n          if (type.toLowerCase() === 'object') {\n            console.error('THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.');\n            return;\n          }\n\n          if (type.toLowerCase() === 'scene') {\n            console.error('THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.');\n            return;\n          }\n        }\n      }\n\n      var object = scope.parse(json, texturePath);\n      onLoad(object.geometry, object.materials);\n    }, onProgress, onError);\n  },\n  setTexturePath: function (value) {\n    this.texturePath = value;\n  },\n  parse: function () {\n    function parseModel(json, geometry) {\n      function isBitSet(value, position) {\n        return value & 1 << position;\n      }\n\n      var i,\n          j,\n          fi,\n          offset,\n          zLength,\n          colorIndex,\n          normalIndex,\n          uvIndex,\n          materialIndex,\n          type,\n          isQuad,\n          hasMaterial,\n          hasFaceVertexUv,\n          hasFaceNormal,\n          hasFaceVertexNormal,\n          hasFaceColor,\n          hasFaceVertexColor,\n          vertex,\n          face,\n          faceA,\n          faceB,\n          hex,\n          normal,\n          uvLayer,\n          uv,\n          u,\n          v,\n          faces = json.faces,\n          vertices = json.vertices,\n          normals = json.normals,\n          colors = json.colors,\n          scale = json.scale,\n          nUvLayers = 0;\n\n      if (json.uvs !== undefined) {\n        // disregard empty arrays\n        for (i = 0; i < json.uvs.length; i++) {\n          if (json.uvs[i].length) nUvLayers++;\n        }\n\n        for (i = 0; i < nUvLayers; i++) {\n          geometry.faceVertexUvs[i] = [];\n        }\n      }\n\n      offset = 0;\n      zLength = vertices.length;\n\n      while (offset < zLength) {\n        vertex = new Vector3();\n        vertex.x = vertices[offset++] * scale;\n        vertex.y = vertices[offset++] * scale;\n        vertex.z = vertices[offset++] * scale;\n        geometry.vertices.push(vertex);\n      }\n\n      offset = 0;\n      zLength = faces.length;\n\n      while (offset < zLength) {\n        type = faces[offset++];\n        isQuad = isBitSet(type, 0);\n        hasMaterial = isBitSet(type, 1);\n        hasFaceVertexUv = isBitSet(type, 3);\n        hasFaceNormal = isBitSet(type, 4);\n        hasFaceVertexNormal = isBitSet(type, 5);\n        hasFaceColor = isBitSet(type, 6);\n        hasFaceVertexColor = isBitSet(type, 7); // console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n        if (isQuad) {\n          faceA = new Face3();\n          faceA.a = faces[offset];\n          faceA.b = faces[offset + 1];\n          faceA.c = faces[offset + 3];\n          faceB = new Face3();\n          faceB.a = faces[offset + 1];\n          faceB.b = faces[offset + 2];\n          faceB.c = faces[offset + 3];\n          offset += 4;\n\n          if (hasMaterial) {\n            materialIndex = faces[offset++];\n            faceA.materialIndex = materialIndex;\n            faceB.materialIndex = materialIndex;\n          } // to get face <=> uv index correspondence\n\n\n          fi = geometry.faces.length;\n\n          if (hasFaceVertexUv) {\n            for (i = 0; i < nUvLayers; i++) {\n              uvLayer = json.uvs[i];\n              geometry.faceVertexUvs[i][fi] = [];\n              geometry.faceVertexUvs[i][fi + 1] = [];\n\n              for (j = 0; j < 4; j++) {\n                uvIndex = faces[offset++];\n                u = uvLayer[uvIndex * 2];\n                v = uvLayer[uvIndex * 2 + 1];\n                uv = new Vector2(u, v);\n                if (j !== 2) geometry.faceVertexUvs[i][fi].push(uv);\n                if (j !== 0) geometry.faceVertexUvs[i][fi + 1].push(uv);\n              }\n            }\n          }\n\n          if (hasFaceNormal) {\n            normalIndex = faces[offset++] * 3;\n            faceA.normal.set(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n            faceB.normal.copy(faceA.normal);\n          }\n\n          if (hasFaceVertexNormal) {\n            for (i = 0; i < 4; i++) {\n              normalIndex = faces[offset++] * 3;\n              normal = new Vector3(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n              if (i !== 2) faceA.vertexNormals.push(normal);\n              if (i !== 0) faceB.vertexNormals.push(normal);\n            }\n          }\n\n          if (hasFaceColor) {\n            colorIndex = faces[offset++];\n            hex = colors[colorIndex];\n            faceA.color.setHex(hex);\n            faceB.color.setHex(hex);\n          }\n\n          if (hasFaceVertexColor) {\n            for (i = 0; i < 4; i++) {\n              colorIndex = faces[offset++];\n              hex = colors[colorIndex];\n              if (i !== 2) faceA.vertexColors.push(new Color(hex));\n              if (i !== 0) faceB.vertexColors.push(new Color(hex));\n            }\n          }\n\n          geometry.faces.push(faceA);\n          geometry.faces.push(faceB);\n        } else {\n          face = new Face3();\n          face.a = faces[offset++];\n          face.b = faces[offset++];\n          face.c = faces[offset++];\n\n          if (hasMaterial) {\n            materialIndex = faces[offset++];\n            face.materialIndex = materialIndex;\n          } // to get face <=> uv index correspondence\n\n\n          fi = geometry.faces.length;\n\n          if (hasFaceVertexUv) {\n            for (i = 0; i < nUvLayers; i++) {\n              uvLayer = json.uvs[i];\n              geometry.faceVertexUvs[i][fi] = [];\n\n              for (j = 0; j < 3; j++) {\n                uvIndex = faces[offset++];\n                u = uvLayer[uvIndex * 2];\n                v = uvLayer[uvIndex * 2 + 1];\n                uv = new Vector2(u, v);\n                geometry.faceVertexUvs[i][fi].push(uv);\n              }\n            }\n          }\n\n          if (hasFaceNormal) {\n            normalIndex = faces[offset++] * 3;\n            face.normal.set(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n          }\n\n          if (hasFaceVertexNormal) {\n            for (i = 0; i < 3; i++) {\n              normalIndex = faces[offset++] * 3;\n              normal = new Vector3(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n              face.vertexNormals.push(normal);\n            }\n          }\n\n          if (hasFaceColor) {\n            colorIndex = faces[offset++];\n            face.color.setHex(colors[colorIndex]);\n          }\n\n          if (hasFaceVertexColor) {\n            for (i = 0; i < 3; i++) {\n              colorIndex = faces[offset++];\n              face.vertexColors.push(new Color(colors[colorIndex]));\n            }\n          }\n\n          geometry.faces.push(face);\n        }\n      }\n    }\n\n    function parseSkin(json, geometry) {\n      var influencesPerVertex = json.influencesPerVertex !== undefined ? json.influencesPerVertex : 2;\n\n      if (json.skinWeights) {\n        for (var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex) {\n          var x = json.skinWeights[i];\n          var y = influencesPerVertex > 1 ? json.skinWeights[i + 1] : 0;\n          var z = influencesPerVertex > 2 ? json.skinWeights[i + 2] : 0;\n          var w = influencesPerVertex > 3 ? json.skinWeights[i + 3] : 0;\n          geometry.skinWeights.push(new Vector4(x, y, z, w));\n        }\n      }\n\n      if (json.skinIndices) {\n        for (var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex) {\n          var a = json.skinIndices[i];\n          var b = influencesPerVertex > 1 ? json.skinIndices[i + 1] : 0;\n          var c = influencesPerVertex > 2 ? json.skinIndices[i + 2] : 0;\n          var d = influencesPerVertex > 3 ? json.skinIndices[i + 3] : 0;\n          geometry.skinIndices.push(new Vector4(a, b, c, d));\n        }\n      }\n\n      geometry.bones = json.bones;\n\n      if (geometry.bones && geometry.bones.length > 0 && (geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length)) {\n        console.warn('When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' + geometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.');\n      }\n    }\n\n    function parseMorphing(json, geometry) {\n      var scale = json.scale;\n\n      if (json.morphTargets !== undefined) {\n        for (var i = 0, l = json.morphTargets.length; i < l; i++) {\n          geometry.morphTargets[i] = {};\n          geometry.morphTargets[i].name = json.morphTargets[i].name;\n          geometry.morphTargets[i].vertices = [];\n          var dstVertices = geometry.morphTargets[i].vertices;\n          var srcVertices = json.morphTargets[i].vertices;\n\n          for (var v = 0, vl = srcVertices.length; v < vl; v += 3) {\n            var vertex = new Vector3();\n            vertex.x = srcVertices[v] * scale;\n            vertex.y = srcVertices[v + 1] * scale;\n            vertex.z = srcVertices[v + 2] * scale;\n            dstVertices.push(vertex);\n          }\n        }\n      }\n\n      if (json.morphColors !== undefined && json.morphColors.length > 0) {\n        console.warn('THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.');\n        var faces = geometry.faces;\n        var morphColors = json.morphColors[0].colors;\n\n        for (var i = 0, l = faces.length; i < l; i++) {\n          faces[i].color.fromArray(morphColors, i * 3);\n        }\n      }\n    }\n\n    function parseAnimations(json, geometry) {\n      var outputAnimations = []; // parse old style Bone/Hierarchy animations\n\n      var animations = [];\n\n      if (json.animation !== undefined) {\n        animations.push(json.animation);\n      }\n\n      if (json.animations !== undefined) {\n        if (json.animations.length) {\n          animations = animations.concat(json.animations);\n        } else {\n          animations.push(json.animations);\n        }\n      }\n\n      for (var i = 0; i < animations.length; i++) {\n        var clip = AnimationClip.parseAnimation(animations[i], geometry.bones);\n        if (clip) outputAnimations.push(clip);\n      } // parse implicit morph animations\n\n\n      if (geometry.morphTargets) {\n        // TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n        var morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences(geometry.morphTargets, 10);\n        outputAnimations = outputAnimations.concat(morphAnimationClips);\n      }\n\n      if (outputAnimations.length > 0) geometry.animations = outputAnimations;\n    }\n\n    return function (json, texturePath) {\n      if (json.data !== undefined) {\n        // Geometry 4.0 spec\n        json = json.data;\n      }\n\n      if (json.scale !== undefined) {\n        json.scale = 1.0 / json.scale;\n      } else {\n        json.scale = 1.0;\n      }\n\n      var geometry = new Geometry();\n      parseModel(json, geometry);\n      parseSkin(json, geometry);\n      parseMorphing(json, geometry);\n      parseAnimations(json, geometry);\n      geometry.computeFaceNormals();\n      geometry.computeBoundingSphere();\n\n      if (json.materials === undefined || json.materials.length === 0) {\n        return {\n          geometry: geometry\n        };\n      } else {\n        var materials = Loader.prototype.initMaterials(json.materials, texturePath, this.crossOrigin);\n        return {\n          geometry: geometry,\n          materials: materials\n        };\n      }\n    };\n  }()\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  this.texturePath = '';\n}\n\nObject.assign(ObjectLoader.prototype, {\n  load: function (url, onLoad, onProgress, onError) {\n    if (this.texturePath === '') {\n      this.texturePath = url.substring(0, url.lastIndexOf('/') + 1);\n    }\n\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.load(url, function (text) {\n      var json = null;\n\n      try {\n        json = JSON.parse(text);\n      } catch (error) {\n        if (onError !== undefined) onError(error);\n        console.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n        return;\n      }\n\n      var metadata = json.metadata;\n\n      if (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n        console.error('THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.');\n        return;\n      }\n\n      scope.parse(json, onLoad);\n    }, onProgress, onError);\n  },\n  setTexturePath: function (value) {\n    this.texturePath = value;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  },\n  parse: function (json, onLoad) {\n    var geometries = this.parseGeometries(json.geometries);\n    var images = this.parseImages(json.images, function () {\n      if (onLoad !== undefined) onLoad(object);\n    });\n    var textures = this.parseTextures(json.textures, images);\n    var materials = this.parseMaterials(json.materials, textures);\n    var object = this.parseObject(json.object, geometries, materials);\n\n    if (json.animations) {\n      object.animations = this.parseAnimations(json.animations);\n    }\n\n    if (json.images === undefined || json.images.length === 0) {\n      if (onLoad !== undefined) onLoad(object);\n    }\n\n    return object;\n  },\n  parseGeometries: function (json) {\n    var geometries = {};\n\n    if (json !== undefined) {\n      var geometryLoader = new JSONLoader();\n      var bufferGeometryLoader = new BufferGeometryLoader();\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var geometry;\n        var data = json[i];\n\n        switch (data.type) {\n          case 'PlaneGeometry':\n          case 'PlaneBufferGeometry':\n            geometry = new Geometries[data.type](data.width, data.height, data.widthSegments, data.heightSegments);\n            break;\n\n          case 'BoxGeometry':\n          case 'BoxBufferGeometry':\n          case 'CubeGeometry':\n            // backwards compatible\n            geometry = new Geometries[data.type](data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n            break;\n\n          case 'CircleGeometry':\n          case 'CircleBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.segments, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'CylinderGeometry':\n          case 'CylinderBufferGeometry':\n            geometry = new Geometries[data.type](data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'ConeGeometry':\n          case 'ConeBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'SphereGeometry':\n          case 'SphereBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'DodecahedronGeometry':\n          case 'IcosahedronGeometry':\n          case 'OctahedronGeometry':\n          case 'TetrahedronGeometry':\n            geometry = new Geometries[data.type](data.radius, data.detail);\n            break;\n\n          case 'RingGeometry':\n          case 'RingBufferGeometry':\n            geometry = new Geometries[data.type](data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'TorusGeometry':\n          case 'TorusBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n            break;\n\n          case 'TorusKnotGeometry':\n          case 'TorusKnotBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n            break;\n\n          case 'LatheGeometry':\n          case 'LatheBufferGeometry':\n            geometry = new Geometries[data.type](data.points, data.segments, data.phiStart, data.phiLength);\n            break;\n\n          case 'BufferGeometry':\n            geometry = bufferGeometryLoader.parse(data);\n            break;\n\n          case 'Geometry':\n            geometry = geometryLoader.parse(data, this.texturePath).geometry;\n            break;\n\n          default:\n            console.warn('THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"');\n            continue;\n        }\n\n        geometry.uuid = data.uuid;\n        if (data.name !== undefined) geometry.name = data.name;\n        geometries[data.uuid] = geometry;\n      }\n    }\n\n    return geometries;\n  },\n  parseMaterials: function (json, textures) {\n    var materials = {};\n\n    if (json !== undefined) {\n      var loader = new MaterialLoader();\n      loader.setTextures(textures);\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var data = json[i];\n\n        if (data.type === 'MultiMaterial') {\n          // Deprecated\n          var array = [];\n\n          for (var j = 0; j < data.materials.length; j++) {\n            array.push(loader.parse(data.materials[j]));\n          }\n\n          materials[data.uuid] = array;\n        } else {\n          materials[data.uuid] = loader.parse(data);\n        }\n      }\n    }\n\n    return materials;\n  },\n  parseAnimations: function (json) {\n    var animations = [];\n\n    for (var i = 0; i < json.length; i++) {\n      var clip = AnimationClip.parse(json[i]);\n      animations.push(clip);\n    }\n\n    return animations;\n  },\n  parseImages: function (json, onLoad) {\n    var scope = this;\n    var images = {};\n\n    function loadImage(url) {\n      scope.manager.itemStart(url);\n      return loader.load(url, function () {\n        scope.manager.itemEnd(url);\n      }, undefined, function () {\n        scope.manager.itemEnd(url);\n        scope.manager.itemError(url);\n      });\n    }\n\n    if (json !== undefined && json.length > 0) {\n      var manager = new LoadingManager(onLoad);\n      var loader = new ImageLoader(manager);\n      loader.setCrossOrigin(this.crossOrigin);\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var image = json[i];\n        var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(image.url) ? image.url : scope.texturePath + image.url;\n        images[image.uuid] = loadImage(path);\n      }\n    }\n\n    return images;\n  },\n  parseTextures: function (json, images) {\n    function parseConstant(value, type) {\n      if (typeof value === 'number') return value;\n      console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n      return type[value];\n    }\n\n    var textures = {};\n\n    if (json !== undefined) {\n      for (var i = 0, l = json.length; i < l; i++) {\n        var data = json[i];\n\n        if (data.image === undefined) {\n          console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n        }\n\n        if (images[data.image] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined image', data.image);\n        }\n\n        var texture = new Texture(images[data.image]);\n        texture.needsUpdate = true;\n        texture.uuid = data.uuid;\n        if (data.name !== undefined) texture.name = data.name;\n        if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n        if (data.offset !== undefined) texture.offset.fromArray(data.offset);\n        if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n\n        if (data.wrap !== undefined) {\n          texture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n          texture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n        }\n\n        if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n        if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n        if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n        if (data.flipY !== undefined) texture.flipY = data.flipY;\n        textures[data.uuid] = texture;\n      }\n    }\n\n    return textures;\n  },\n  parseObject: function () {\n    var matrix = new Matrix4();\n    return function parseObject(data, geometries, materials) {\n      var object;\n\n      function getGeometry(name) {\n        if (geometries[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined geometry', name);\n        }\n\n        return geometries[name];\n      }\n\n      function getMaterial(name) {\n        if (name === undefined) return undefined;\n\n        if (Array.isArray(name)) {\n          var array = [];\n\n          for (var i = 0, l = name.length; i < l; i++) {\n            var uuid = name[i];\n\n            if (materials[uuid] === undefined) {\n              console.warn('THREE.ObjectLoader: Undefined material', uuid);\n            }\n\n            array.push(materials[uuid]);\n          }\n\n          return array;\n        }\n\n        if (materials[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined material', name);\n        }\n\n        return materials[name];\n      }\n\n      switch (data.type) {\n        case 'Scene':\n          object = new Scene();\n\n          if (data.background !== undefined) {\n            if (Number.isInteger(data.background)) {\n              object.background = new Color(data.background);\n            }\n          }\n\n          if (data.fog !== undefined) {\n            if (data.fog.type === 'Fog') {\n              object.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n            } else if (data.fog.type === 'FogExp2') {\n              object.fog = new FogExp2(data.fog.color, data.fog.density);\n            }\n          }\n\n          break;\n\n        case 'PerspectiveCamera':\n          object = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n          if (data.focus !== undefined) object.focus = data.focus;\n          if (data.zoom !== undefined) object.zoom = data.zoom;\n          if (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n          if (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n          if (data.view !== undefined) object.view = Object.assign({}, data.view);\n          break;\n\n        case 'OrthographicCamera':\n          object = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n          break;\n\n        case 'AmbientLight':\n          object = new AmbientLight(data.color, data.intensity);\n          break;\n\n        case 'DirectionalLight':\n          object = new DirectionalLight(data.color, data.intensity);\n          break;\n\n        case 'PointLight':\n          object = new PointLight(data.color, data.intensity, data.distance, data.decay);\n          break;\n\n        case 'RectAreaLight':\n          object = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n          break;\n\n        case 'SpotLight':\n          object = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n          break;\n\n        case 'HemisphereLight':\n          object = new HemisphereLight(data.color, data.groundColor, data.intensity);\n          break;\n\n        case 'SkinnedMesh':\n          console.warn('THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.');\n\n        case 'Mesh':\n          var geometry = getGeometry(data.geometry);\n          var material = getMaterial(data.material);\n\n          if (geometry.bones && geometry.bones.length > 0) {\n            object = new SkinnedMesh(geometry, material);\n          } else {\n            object = new Mesh(geometry, material);\n          }\n\n          break;\n\n        case 'LOD':\n          object = new LOD();\n          break;\n\n        case 'Line':\n          object = new Line(getGeometry(data.geometry), getMaterial(data.material), data.mode);\n          break;\n\n        case 'LineLoop':\n          object = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'LineSegments':\n          object = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'PointCloud':\n        case 'Points':\n          object = new Points(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'Sprite':\n          object = new Sprite(getMaterial(data.material));\n          break;\n\n        case 'Group':\n          object = new Group();\n          break;\n\n        default:\n          object = new Object3D();\n      }\n\n      object.uuid = data.uuid;\n      if (data.name !== undefined) object.name = data.name;\n\n      if (data.matrix !== undefined) {\n        matrix.fromArray(data.matrix);\n        matrix.decompose(object.position, object.quaternion, object.scale);\n      } else {\n        if (data.position !== undefined) object.position.fromArray(data.position);\n        if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n        if (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n        if (data.scale !== undefined) object.scale.fromArray(data.scale);\n      }\n\n      if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n      if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n\n      if (data.shadow) {\n        if (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n        if (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n        if (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n        if (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n      }\n\n      if (data.visible !== undefined) object.visible = data.visible;\n      if (data.userData !== undefined) object.userData = data.userData;\n\n      if (data.children !== undefined) {\n        var children = data.children;\n\n        for (var i = 0; i < children.length; i++) {\n          object.add(this.parseObject(children[i], geometries, materials));\n        }\n      }\n\n      if (data.type === 'LOD') {\n        var levels = data.levels;\n\n        for (var l = 0; l < levels.length; l++) {\n          var level = levels[l];\n          var child = object.getObjectByProperty('uuid', level.object);\n\n          if (child !== undefined) {\n            object.addLevel(child, level.distance);\n          }\n        }\n      }\n\n      return object;\n    };\n  }()\n});\nvar TEXTURE_MAPPING = {\n  UVMapping: UVMapping,\n  CubeReflectionMapping: CubeReflectionMapping,\n  CubeRefractionMapping: CubeRefractionMapping,\n  EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n  EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n  SphericalReflectionMapping: SphericalReflectionMapping,\n  CubeUVReflectionMapping: CubeUVReflectionMapping,\n  CubeUVRefractionMapping: CubeUVRefractionMapping\n};\nvar TEXTURE_WRAPPING = {\n  RepeatWrapping: RepeatWrapping,\n  ClampToEdgeWrapping: ClampToEdgeWrapping,\n  MirroredRepeatWrapping: MirroredRepeatWrapping\n};\nvar TEXTURE_FILTER = {\n  NearestFilter: NearestFilter,\n  NearestMipMapNearestFilter: NearestMipMapNearestFilter,\n  NearestMipMapLinearFilter: NearestMipMapLinearFilter,\n  LinearFilter: LinearFilter,\n  LinearMipMapNearestFilter: LinearMipMapNearestFilter,\n  LinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom(t, p0, p1, p2, p3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  var t2 = t * t;\n  var t3 = t * t2;\n  return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n} //\n\n\nfunction QuadraticBezierP0(t, p) {\n  var k = 1 - t;\n  return k * k * p;\n}\n\nfunction QuadraticBezierP1(t, p) {\n  return 2 * (1 - t) * t * p;\n}\n\nfunction QuadraticBezierP2(t, p) {\n  return t * t * p;\n}\n\nfunction QuadraticBezier(t, p0, p1, p2) {\n  return QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\n} //\n\n\nfunction CubicBezierP0(t, p) {\n  var k = 1 - t;\n  return k * k * k * p;\n}\n\nfunction CubicBezierP1(t, p) {\n  var k = 1 - t;\n  return 3 * k * k * t * p;\n}\n\nfunction CubicBezierP2(t, p) {\n  return 3 * (1 - t) * t * t * p;\n}\n\nfunction CubicBezierP3(t, p) {\n  return t * t * t * p;\n}\n\nfunction CubicBezier(t, p0, p1, p2, p3) {\n  return CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n}\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint(t), getTangent(t)\n * .getPointAt(u), getTangentAt(u)\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\n\nfunction Curve() {\n  this.arcLengthDivisions = 200;\n}\n\nObject.assign(Curve.prototype, {\n  // Virtual base class method to overwrite and implement in subclasses\n  //\t- t [0 .. 1]\n  getPoint: function () {\n    console.warn('THREE.Curve: .getPoint() not implemented.');\n    return null;\n  },\n  // Get point at relative position in curve according to arc length\n  // - u [0 .. 1]\n  getPointAt: function (u) {\n    var t = this.getUtoTmapping(u);\n    return this.getPoint(t);\n  },\n  // Get sequence of points using getPoint( t )\n  getPoints: function (divisions) {\n    if (divisions === undefined) divisions = 5;\n    var points = [];\n\n    for (var d = 0; d <= divisions; d++) {\n      points.push(this.getPoint(d / divisions));\n    }\n\n    return points;\n  },\n  // Get sequence of points using getPointAt( u )\n  getSpacedPoints: function (divisions) {\n    if (divisions === undefined) divisions = 5;\n    var points = [];\n\n    for (var d = 0; d <= divisions; d++) {\n      points.push(this.getPointAt(d / divisions));\n    }\n\n    return points;\n  },\n  // Get total curve arc length\n  getLength: function () {\n    var lengths = this.getLengths();\n    return lengths[lengths.length - 1];\n  },\n  // Get list of cumulative segment lengths\n  getLengths: function (divisions) {\n    if (divisions === undefined) divisions = this.arcLengthDivisions;\n\n    if (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n      return this.cacheArcLengths;\n    }\n\n    this.needsUpdate = false;\n    var cache = [];\n    var current,\n        last = this.getPoint(0);\n    var p,\n        sum = 0;\n    cache.push(0);\n\n    for (p = 1; p <= divisions; p++) {\n      current = this.getPoint(p / divisions);\n      sum += current.distanceTo(last);\n      cache.push(sum);\n      last = current;\n    }\n\n    this.cacheArcLengths = cache;\n    return cache; // { sums: cache, sum: sum }; Sum is in the last element.\n  },\n  updateArcLengths: function () {\n    this.needsUpdate = true;\n    this.getLengths();\n  },\n  // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n  getUtoTmapping: function (u, distance) {\n    var arcLengths = this.getLengths();\n    var i = 0,\n        il = arcLengths.length;\n    var targetArcLength; // The targeted u distance value to get\n\n    if (distance) {\n      targetArcLength = distance;\n    } else {\n      targetArcLength = u * arcLengths[il - 1];\n    } // binary search for the index with largest value smaller than target u distance\n\n\n    var low = 0,\n        high = il - 1,\n        comparison;\n\n    while (low <= high) {\n      i = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n      comparison = arcLengths[i] - targetArcLength;\n\n      if (comparison < 0) {\n        low = i + 1;\n      } else if (comparison > 0) {\n        high = i - 1;\n      } else {\n        high = i;\n        break; // DONE\n      }\n    }\n\n    i = high;\n\n    if (arcLengths[i] === targetArcLength) {\n      return i / (il - 1);\n    } // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n    var lengthBefore = arcLengths[i];\n    var lengthAfter = arcLengths[i + 1];\n    var segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n    var segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n    var t = (i + segmentFraction) / (il - 1);\n    return t;\n  },\n  // Returns a unit vector tangent at t\n  // In case any sub curve does not implement its tangent derivation,\n  // 2 points a small delta apart will be used to find its gradient\n  // which seems to give a reasonable approximation\n  getTangent: function (t) {\n    var delta = 0.0001;\n    var t1 = t - delta;\n    var t2 = t + delta; // Capping in case of danger\n\n    if (t1 < 0) t1 = 0;\n    if (t2 > 1) t2 = 1;\n    var pt1 = this.getPoint(t1);\n    var pt2 = this.getPoint(t2);\n    var vec = pt2.clone().sub(pt1);\n    return vec.normalize();\n  },\n  getTangentAt: function (u) {\n    var t = this.getUtoTmapping(u);\n    return this.getTangent(t);\n  },\n  computeFrenetFrames: function (segments, closed) {\n    // see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n    var normal = new Vector3();\n    var tangents = [];\n    var normals = [];\n    var binormals = [];\n    var vec = new Vector3();\n    var mat = new Matrix4();\n    var i, u, theta; // compute the tangent vectors for each segment on the curve\n\n    for (i = 0; i <= segments; i++) {\n      u = i / segments;\n      tangents[i] = this.getTangentAt(u);\n      tangents[i].normalize();\n    } // select an initial normal vector perpendicular to the first tangent vector,\n    // and in the direction of the minimum tangent xyz component\n\n\n    normals[0] = new Vector3();\n    binormals[0] = new Vector3();\n    var min = Number.MAX_VALUE;\n    var tx = Math.abs(tangents[0].x);\n    var ty = Math.abs(tangents[0].y);\n    var tz = Math.abs(tangents[0].z);\n\n    if (tx <= min) {\n      min = tx;\n      normal.set(1, 0, 0);\n    }\n\n    if (ty <= min) {\n      min = ty;\n      normal.set(0, 1, 0);\n    }\n\n    if (tz <= min) {\n      normal.set(0, 0, 1);\n    }\n\n    vec.crossVectors(tangents[0], normal).normalize();\n    normals[0].crossVectors(tangents[0], vec);\n    binormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n    for (i = 1; i <= segments; i++) {\n      normals[i] = normals[i - 1].clone();\n      binormals[i] = binormals[i - 1].clone();\n      vec.crossVectors(tangents[i - 1], tangents[i]);\n\n      if (vec.length() > Number.EPSILON) {\n        vec.normalize();\n        theta = Math.acos(_Math.clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n        normals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n      }\n\n      binormals[i].crossVectors(tangents[i], normals[i]);\n    } // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n    if (closed === true) {\n      theta = Math.acos(_Math.clamp(normals[0].dot(normals[segments]), -1, 1));\n      theta /= segments;\n\n      if (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\n        theta = -theta;\n      }\n\n      for (i = 1; i <= segments; i++) {\n        // twist a little...\n        normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n        binormals[i].crossVectors(tangents[i], normals[i]);\n      }\n    }\n\n    return {\n      tangents: tangents,\n      normals: normals,\n      binormals: binormals\n    };\n  }\n});\n\nfunction LineCurve(v1, v2) {\n  Curve.call(this);\n  this.v1 = v1;\n  this.v2 = v2;\n}\n\nLineCurve.prototype = Object.create(Curve.prototype);\nLineCurve.prototype.constructor = LineCurve;\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function (t) {\n  if (t === 1) {\n    return this.v2.clone();\n  }\n\n  var point = this.v2.clone().sub(this.v1);\n  point.multiplyScalar(t).add(this.v1);\n  return point;\n}; // Line curve is linear, so we can overwrite default getPointAt\n\n\nLineCurve.prototype.getPointAt = function (u) {\n  return this.getPoint(u);\n};\n\nLineCurve.prototype.getTangent = function (t) {\n  var tangent = this.v2.clone().sub(this.v1);\n  return tangent.normalize();\n};\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\n\nfunction CurvePath() {\n  Curve.call(this);\n  this.curves = [];\n  this.autoClose = false; // Automatically closes the path\n}\n\nCurvePath.prototype = Object.assign(Object.create(Curve.prototype), {\n  constructor: CurvePath,\n  add: function (curve) {\n    this.curves.push(curve);\n  },\n  closePath: function () {\n    // Add a line curve if start and end of lines are not connected\n    var startPoint = this.curves[0].getPoint(0);\n    var endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n    if (!startPoint.equals(endPoint)) {\n      this.curves.push(new LineCurve(endPoint, startPoint));\n    }\n  },\n  // To get accurate point with reference to\n  // entire path distance at time t,\n  // following has to be done:\n  // 1. Length of each sub path have to be known\n  // 2. Locate and identify type of curve\n  // 3. Get t for the curve\n  // 4. Return curve.getPointAt(t')\n  getPoint: function (t) {\n    var d = t * this.getLength();\n    var curveLengths = this.getCurveLengths();\n    var i = 0; // To think about boundaries points.\n\n    while (i < curveLengths.length) {\n      if (curveLengths[i] >= d) {\n        var diff = curveLengths[i] - d;\n        var curve = this.curves[i];\n        var segmentLength = curve.getLength();\n        var u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n        return curve.getPointAt(u);\n      }\n\n      i++;\n    }\n\n    return null; // loop where sum != 0, sum > d , sum+1 <d\n  },\n  // We cannot use the default THREE.Curve getPoint() with getLength() because in\n  // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n  // getPoint() depends on getLength\n  getLength: function () {\n    var lens = this.getCurveLengths();\n    return lens[lens.length - 1];\n  },\n  // cacheLengths must be recalculated.\n  updateArcLengths: function () {\n    this.needsUpdate = true;\n    this.cacheLengths = null;\n    this.getCurveLengths();\n  },\n  // Compute lengths and cache them\n  // We cannot overwrite getLengths() because UtoT mapping uses it.\n  getCurveLengths: function () {\n    // We use cache values if curves and cache array are same length\n    if (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n      return this.cacheLengths;\n    } // Get length of sub-curve\n    // Push sums into cached array\n\n\n    var lengths = [],\n        sums = 0;\n\n    for (var i = 0, l = this.curves.length; i < l; i++) {\n      sums += this.curves[i].getLength();\n      lengths.push(sums);\n    }\n\n    this.cacheLengths = lengths;\n    return lengths;\n  },\n  getSpacedPoints: function (divisions) {\n    if (divisions === undefined) divisions = 40;\n    var points = [];\n\n    for (var i = 0; i <= divisions; i++) {\n      points.push(this.getPoint(i / divisions));\n    }\n\n    if (this.autoClose) {\n      points.push(points[0]);\n    }\n\n    return points;\n  },\n  getPoints: function (divisions) {\n    divisions = divisions || 12;\n    var points = [],\n        last;\n\n    for (var i = 0, curves = this.curves; i < curves.length; i++) {\n      var curve = curves[i];\n      var resolution = curve && curve.isEllipseCurve ? divisions * 2 : curve && curve.isLineCurve ? 1 : curve && curve.isSplineCurve ? divisions * curve.points.length : divisions;\n      var pts = curve.getPoints(resolution);\n\n      for (var j = 0; j < pts.length; j++) {\n        var point = pts[j];\n        if (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n\n        points.push(point);\n        last = point;\n      }\n    }\n\n    if (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n      points.push(points[0]);\n    }\n\n    return points;\n  },\n\n  /**************************************************************\n   *\tCreate Geometries Helpers\n   **************************************************************/\n  /// Generate geometry from path points (for Line or Points objects)\n  createPointsGeometry: function (divisions) {\n    var pts = this.getPoints(divisions);\n    return this.createGeometry(pts);\n  },\n  // Generate geometry from equidistant sampling along the path\n  createSpacedPointsGeometry: function (divisions) {\n    var pts = this.getSpacedPoints(divisions);\n    return this.createGeometry(pts);\n  },\n  createGeometry: function (points) {\n    var geometry = new Geometry();\n\n    for (var i = 0, l = points.length; i < l; i++) {\n      var point = points[i];\n      geometry.vertices.push(new Vector3(point.x, point.y, point.z || 0));\n    }\n\n    return geometry;\n  }\n});\n\nfunction EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n  Curve.call(this);\n  this.aX = aX;\n  this.aY = aY;\n  this.xRadius = xRadius;\n  this.yRadius = yRadius;\n  this.aStartAngle = aStartAngle;\n  this.aEndAngle = aEndAngle;\n  this.aClockwise = aClockwise;\n  this.aRotation = aRotation || 0;\n}\n\nEllipseCurve.prototype = Object.create(Curve.prototype);\nEllipseCurve.prototype.constructor = EllipseCurve;\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function (t) {\n  var twoPi = Math.PI * 2;\n  var deltaAngle = this.aEndAngle - this.aStartAngle;\n  var samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\n\n  while (deltaAngle < 0) deltaAngle += twoPi;\n\n  while (deltaAngle > twoPi) deltaAngle -= twoPi;\n\n  if (deltaAngle < Number.EPSILON) {\n    if (samePoints) {\n      deltaAngle = 0;\n    } else {\n      deltaAngle = twoPi;\n    }\n  }\n\n  if (this.aClockwise === true && !samePoints) {\n    if (deltaAngle === twoPi) {\n      deltaAngle = -twoPi;\n    } else {\n      deltaAngle = deltaAngle - twoPi;\n    }\n  }\n\n  var angle = this.aStartAngle + t * deltaAngle;\n  var x = this.aX + this.xRadius * Math.cos(angle);\n  var y = this.aY + this.yRadius * Math.sin(angle);\n\n  if (this.aRotation !== 0) {\n    var cos = Math.cos(this.aRotation);\n    var sin = Math.sin(this.aRotation);\n    var tx = x - this.aX;\n    var ty = y - this.aY; // Rotate the point about the center of the ellipse.\n\n    x = tx * cos - ty * sin + this.aX;\n    y = tx * sin + ty * cos + this.aY;\n  }\n\n  return new Vector2(x, y);\n};\n\nfunction SplineCurve(points\n/* array of Vector2 */\n) {\n  Curve.call(this);\n  this.points = points === undefined ? [] : points;\n}\n\nSplineCurve.prototype = Object.create(Curve.prototype);\nSplineCurve.prototype.constructor = SplineCurve;\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function (t) {\n  var points = this.points;\n  var point = (points.length - 1) * t;\n  var intPoint = Math.floor(point);\n  var weight = point - intPoint;\n  var point0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n  var point1 = points[intPoint];\n  var point2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n  var point3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n  return new Vector2(CatmullRom(weight, point0.x, point1.x, point2.x, point3.x), CatmullRom(weight, point0.y, point1.y, point2.y, point3.y));\n};\n\nfunction CubicBezierCurve(v0, v1, v2, v3) {\n  Curve.call(this);\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n  this.v3 = v3;\n}\n\nCubicBezierCurve.prototype = Object.create(Curve.prototype);\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.getPoint = function (t) {\n  var v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2,\n      v3 = this.v3;\n  return new Vector2(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\n};\n\nfunction QuadraticBezierCurve(v0, v1, v2) {\n  Curve.call(this);\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n}\n\nQuadraticBezierCurve.prototype = Object.create(Curve.prototype);\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.getPoint = function (t) {\n  var v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2;\n  return new Vector2(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n};\n\nvar PathPrototype = Object.assign(Object.create(CurvePath.prototype), {\n  fromPoints: function (vectors) {\n    this.moveTo(vectors[0].x, vectors[0].y);\n\n    for (var i = 1, l = vectors.length; i < l; i++) {\n      this.lineTo(vectors[i].x, vectors[i].y);\n    }\n  },\n  moveTo: function (x, y) {\n    this.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n  },\n  lineTo: function (x, y) {\n    var curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n    this.curves.push(curve);\n    this.currentPoint.set(x, y);\n  },\n  quadraticCurveTo: function (aCPx, aCPy, aX, aY) {\n    var curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\n    this.curves.push(curve);\n    this.currentPoint.set(aX, aY);\n  },\n  bezierCurveTo: function (aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n    var curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\n    this.curves.push(curve);\n    this.currentPoint.set(aX, aY);\n  },\n  splineThru: function (pts\n  /*Array of Vector*/\n  ) {\n    var npts = [this.currentPoint.clone()].concat(pts);\n    var curve = new SplineCurve(npts);\n    this.curves.push(curve);\n    this.currentPoint.copy(pts[pts.length - 1]);\n  },\n  arc: function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    var x0 = this.currentPoint.x;\n    var y0 = this.currentPoint.y;\n    this.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n  },\n  absarc: function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n  },\n  ellipse: function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n    var x0 = this.currentPoint.x;\n    var y0 = this.currentPoint.y;\n    this.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n  },\n  absellipse: function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n    var curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\n    if (this.curves.length > 0) {\n      // if a previous curve is present, attempt to join\n      var firstPoint = curve.getPoint(0);\n\n      if (!firstPoint.equals(this.currentPoint)) {\n        this.lineTo(firstPoint.x, firstPoint.y);\n      }\n    }\n\n    this.curves.push(curve);\n    var lastPoint = curve.getPoint(1);\n    this.currentPoint.copy(lastPoint);\n  }\n});\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path(points) {\n  CurvePath.call(this);\n  this.currentPoint = new Vector2();\n\n  if (points) {\n    this.fromPoints(points);\n  }\n}\n\nPath.prototype = PathPrototype;\nPathPrototype.constructor = Path;\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape() {\n  Path.apply(this, arguments);\n  this.holes = [];\n}\n\nShape.prototype = Object.assign(Object.create(PathPrototype), {\n  constructor: Shape,\n  getPointsHoles: function (divisions) {\n    var holesPts = [];\n\n    for (var i = 0, l = this.holes.length; i < l; i++) {\n      holesPts[i] = this.holes[i].getPoints(divisions);\n    }\n\n    return holesPts;\n  },\n  // Get points of shape and holes (keypoints based on segments parameter)\n  extractAllPoints: function (divisions) {\n    return {\n      shape: this.getPoints(divisions),\n      holes: this.getPointsHoles(divisions)\n    };\n  },\n  extractPoints: function (divisions) {\n    return this.extractAllPoints(divisions);\n  }\n});\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n  this.subPaths = [];\n  this.currentPath = null;\n}\n\nObject.assign(ShapePath.prototype, {\n  moveTo: function (x, y) {\n    this.currentPath = new Path();\n    this.subPaths.push(this.currentPath);\n    this.currentPath.moveTo(x, y);\n  },\n  lineTo: function (x, y) {\n    this.currentPath.lineTo(x, y);\n  },\n  quadraticCurveTo: function (aCPx, aCPy, aX, aY) {\n    this.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n  },\n  bezierCurveTo: function (aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n    this.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n  },\n  splineThru: function (pts) {\n    this.currentPath.splineThru(pts);\n  },\n  toShapes: function (isCCW, noHoles) {\n    function toShapesNoHoles(inSubpaths) {\n      var shapes = [];\n\n      for (var i = 0, l = inSubpaths.length; i < l; i++) {\n        var tmpPath = inSubpaths[i];\n        var tmpShape = new Shape();\n        tmpShape.curves = tmpPath.curves;\n        shapes.push(tmpShape);\n      }\n\n      return shapes;\n    }\n\n    function isPointInsidePolygon(inPt, inPolygon) {\n      var polyLen = inPolygon.length; // inPt on polygon contour => immediate success    or\n      // toggling of inside/outside at every single! intersection point of an edge\n      //  with the horizontal line through inPt, left of inPt\n      //  not counting lowerY endpoints of edges and whole edges on that line\n\n      var inside = false;\n\n      for (var p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n        var edgeLowPt = inPolygon[p];\n        var edgeHighPt = inPolygon[q];\n        var edgeDx = edgeHighPt.x - edgeLowPt.x;\n        var edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n        if (Math.abs(edgeDy) > Number.EPSILON) {\n          // not parallel\n          if (edgeDy < 0) {\n            edgeLowPt = inPolygon[q];\n            edgeDx = -edgeDx;\n            edgeHighPt = inPolygon[p];\n            edgeDy = -edgeDy;\n          }\n\n          if (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n          if (inPt.y === edgeLowPt.y) {\n            if (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n            // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n          } else {\n            var perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n            if (perpEdge === 0) return true; // inPt is on contour ?\n\n            if (perpEdge < 0) continue;\n            inside = !inside; // true intersection left of inPt\n          }\n        } else {\n          // parallel or collinear\n          if (inPt.y !== edgeLowPt.y) continue; // parallel\n          // edge lies on the same horizontal line as inPt\n\n          if (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n          // continue;\n        }\n      }\n\n      return inside;\n    }\n\n    var isClockWise = ShapeUtils.isClockWise;\n    var subPaths = this.subPaths;\n    if (subPaths.length === 0) return [];\n    if (noHoles === true) return toShapesNoHoles(subPaths);\n    var solid,\n        tmpPath,\n        tmpShape,\n        shapes = [];\n\n    if (subPaths.length === 1) {\n      tmpPath = subPaths[0];\n      tmpShape = new Shape();\n      tmpShape.curves = tmpPath.curves;\n      shapes.push(tmpShape);\n      return shapes;\n    }\n\n    var holesFirst = !isClockWise(subPaths[0].getPoints());\n    holesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n    var betterShapeHoles = [];\n    var newShapes = [];\n    var newShapeHoles = [];\n    var mainIdx = 0;\n    var tmpPoints;\n    newShapes[mainIdx] = undefined;\n    newShapeHoles[mainIdx] = [];\n\n    for (var i = 0, l = subPaths.length; i < l; i++) {\n      tmpPath = subPaths[i];\n      tmpPoints = tmpPath.getPoints();\n      solid = isClockWise(tmpPoints);\n      solid = isCCW ? !solid : solid;\n\n      if (solid) {\n        if (!holesFirst && newShapes[mainIdx]) mainIdx++;\n        newShapes[mainIdx] = {\n          s: new Shape(),\n          p: tmpPoints\n        };\n        newShapes[mainIdx].s.curves = tmpPath.curves;\n        if (holesFirst) mainIdx++;\n        newShapeHoles[mainIdx] = []; //console.log('cw', i);\n      } else {\n        newShapeHoles[mainIdx].push({\n          h: tmpPath,\n          p: tmpPoints[0]\n        }); //console.log('ccw', i);\n      }\n    } // only Holes? -> probably all Shapes with wrong orientation\n\n\n    if (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n    if (newShapes.length > 1) {\n      var ambiguous = false;\n      var toChange = [];\n\n      for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n        betterShapeHoles[sIdx] = [];\n      }\n\n      for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n        var sho = newShapeHoles[sIdx];\n\n        for (var hIdx = 0; hIdx < sho.length; hIdx++) {\n          var ho = sho[hIdx];\n          var hole_unassigned = true;\n\n          for (var s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n            if (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n              if (sIdx !== s2Idx) toChange.push({\n                froms: sIdx,\n                tos: s2Idx,\n                hole: hIdx\n              });\n\n              if (hole_unassigned) {\n                hole_unassigned = false;\n                betterShapeHoles[s2Idx].push(ho);\n              } else {\n                ambiguous = true;\n              }\n            }\n          }\n\n          if (hole_unassigned) {\n            betterShapeHoles[sIdx].push(ho);\n          }\n        }\n      } // console.log(\"ambiguous: \", ambiguous);\n\n\n      if (toChange.length > 0) {\n        // console.log(\"to change: \", toChange);\n        if (!ambiguous) newShapeHoles = betterShapeHoles;\n      }\n    }\n\n    var tmpHoles;\n\n    for (var i = 0, il = newShapes.length; i < il; i++) {\n      tmpShape = newShapes[i].s;\n      shapes.push(tmpShape);\n      tmpHoles = newShapeHoles[i];\n\n      for (var j = 0, jl = tmpHoles.length; j < jl; j++) {\n        tmpShape.holes.push(tmpHoles[j].h);\n      }\n    } //console.log(\"shape\", shapes);\n\n\n    return shapes;\n  }\n});\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Font(data) {\n  this.data = data;\n}\n\nObject.assign(Font.prototype, {\n  isFont: true,\n  generateShapes: function (text, size, divisions) {\n    function createPaths(text) {\n      var chars = String(text).split('');\n      var scale = size / data.resolution;\n      var line_height = (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale;\n      var offsetX = 0,\n          offsetY = 0;\n      var paths = [];\n\n      for (var i = 0; i < chars.length; i++) {\n        var char = chars[i];\n\n        if (char === '\\n') {\n          offsetX = 0;\n          offsetY -= line_height;\n        } else {\n          var ret = createPath(char, scale, offsetX, offsetY);\n          offsetX += ret.offsetX;\n          paths.push(ret.path);\n        }\n      }\n\n      return paths;\n    }\n\n    function createPath(c, scale, offsetX, offsetY) {\n      var glyph = data.glyphs[c] || data.glyphs['?'];\n      if (!glyph) return;\n      var path = new ShapePath();\n      var pts = [];\n      var x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n      if (glyph.o) {\n        var outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n\n        for (var i = 0, l = outline.length; i < l;) {\n          var action = outline[i++];\n\n          switch (action) {\n            case 'm':\n              // moveTo\n              x = outline[i++] * scale + offsetX;\n              y = outline[i++] * scale + offsetY;\n              path.moveTo(x, y);\n              break;\n\n            case 'l':\n              // lineTo\n              x = outline[i++] * scale + offsetX;\n              y = outline[i++] * scale + offsetY;\n              path.lineTo(x, y);\n              break;\n\n            case 'q':\n              // quadraticCurveTo\n              cpx = outline[i++] * scale + offsetX;\n              cpy = outline[i++] * scale + offsetY;\n              cpx1 = outline[i++] * scale + offsetX;\n              cpy1 = outline[i++] * scale + offsetY;\n              path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n              laste = pts[pts.length - 1];\n\n              if (laste) {\n                cpx0 = laste.x;\n                cpy0 = laste.y;\n\n                for (var i2 = 1; i2 <= divisions; i2++) {\n                  var t = i2 / divisions;\n                  QuadraticBezier(t, cpx0, cpx1, cpx);\n                  QuadraticBezier(t, cpy0, cpy1, cpy);\n                }\n              }\n\n              break;\n\n            case 'b':\n              // bezierCurveTo\n              cpx = outline[i++] * scale + offsetX;\n              cpy = outline[i++] * scale + offsetY;\n              cpx1 = outline[i++] * scale + offsetX;\n              cpy1 = outline[i++] * scale + offsetY;\n              cpx2 = outline[i++] * scale + offsetX;\n              cpy2 = outline[i++] * scale + offsetY;\n              path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n              laste = pts[pts.length - 1];\n\n              if (laste) {\n                cpx0 = laste.x;\n                cpy0 = laste.y;\n\n                for (var i2 = 1; i2 <= divisions; i2++) {\n                  var t = i2 / divisions;\n                  CubicBezier(t, cpx0, cpx1, cpx2, cpx);\n                  CubicBezier(t, cpy0, cpy1, cpy2, cpy);\n                }\n              }\n\n              break;\n          }\n        }\n      }\n\n      return {\n        offsetX: glyph.ha * scale,\n        path: path\n      };\n    } //\n\n\n    if (size === undefined) size = 100;\n    if (divisions === undefined) divisions = 4;\n    var data = this.data;\n    var paths = createPaths(text);\n    var shapes = [];\n\n    for (var p = 0, pl = paths.length; p < pl; p++) {\n      Array.prototype.push.apply(shapes, paths[p].toShapes());\n    }\n\n    return shapes;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n}\n\nObject.assign(FontLoader.prototype, {\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(this.manager);\n    loader.load(url, function (text) {\n      var json;\n\n      try {\n        json = JSON.parse(text);\n      } catch (e) {\n        console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');\n        json = JSON.parse(text.substring(65, text.length - 2));\n      }\n\n      var font = scope.parse(json);\n      if (onLoad) onLoad(font);\n    }, onProgress, onError);\n  },\n  parse: function (json) {\n    return new Font(json);\n  }\n});\nvar context;\nvar AudioContext = {\n  getContext: function () {\n    if (context === undefined) {\n      context = new (window.AudioContext || window.webkitAudioContext)();\n    }\n\n    return context;\n  },\n  setContext: function (value) {\n    context = value;\n  }\n};\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n}\n\nObject.assign(AudioLoader.prototype, {\n  load: function (url, onLoad, onProgress, onError) {\n    var loader = new FileLoader(this.manager);\n    loader.setResponseType('arraybuffer');\n    loader.load(url, function (buffer) {\n      var context = AudioContext.getContext();\n      context.decodeAudioData(buffer, function (audioBuffer) {\n        onLoad(audioBuffer);\n      });\n    }, onProgress, onError);\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n  this.type = 'StereoCamera';\n  this.aspect = 1;\n  this.eyeSep = 0.064;\n  this.cameraL = new PerspectiveCamera();\n  this.cameraL.layers.enable(1);\n  this.cameraL.matrixAutoUpdate = false;\n  this.cameraR = new PerspectiveCamera();\n  this.cameraR.layers.enable(2);\n  this.cameraR.matrixAutoUpdate = false;\n}\n\nObject.assign(StereoCamera.prototype, {\n  update: function () {\n    var instance, focus, fov, aspect, near, far, zoom, eyeSep;\n    var eyeRight = new Matrix4();\n    var eyeLeft = new Matrix4();\n    return function update(camera) {\n      var needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov || aspect !== camera.aspect * this.aspect || near !== camera.near || far !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n      if (needsUpdate) {\n        instance = this;\n        focus = camera.focus;\n        fov = camera.fov;\n        aspect = camera.aspect * this.aspect;\n        near = camera.near;\n        far = camera.far;\n        zoom = camera.zoom; // Off-axis stereoscopic effect based on\n        // http://paulbourke.net/stereographics/stereorender/\n\n        var projectionMatrix = camera.projectionMatrix.clone();\n        eyeSep = this.eyeSep / 2;\n        var eyeSepOnProjection = eyeSep * near / focus;\n        var ymax = near * Math.tan(_Math.DEG2RAD * fov * 0.5) / zoom;\n        var xmin, xmax; // translate xOffset\n\n        eyeLeft.elements[12] = -eyeSep;\n        eyeRight.elements[12] = eyeSep; // for left eye\n\n        xmin = -ymax * aspect + eyeSepOnProjection;\n        xmax = ymax * aspect + eyeSepOnProjection;\n        projectionMatrix.elements[0] = 2 * near / (xmax - xmin);\n        projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n        this.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\n\n        xmin = -ymax * aspect - eyeSepOnProjection;\n        xmax = ymax * aspect - eyeSepOnProjection;\n        projectionMatrix.elements[0] = 2 * near / (xmax - xmin);\n        projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n        this.cameraR.projectionMatrix.copy(projectionMatrix);\n      }\n\n      this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(eyeLeft);\n      this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(eyeRight);\n    };\n  }()\n});\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera(near, far, cubeResolution) {\n  Object3D.call(this);\n  this.type = 'CubeCamera';\n  var fov = 90,\n      aspect = 1;\n  var cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n  cameraPX.up.set(0, -1, 0);\n  cameraPX.lookAt(new Vector3(1, 0, 0));\n  this.add(cameraPX);\n  var cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n  cameraNX.up.set(0, -1, 0);\n  cameraNX.lookAt(new Vector3(-1, 0, 0));\n  this.add(cameraNX);\n  var cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n  cameraPY.up.set(0, 0, 1);\n  cameraPY.lookAt(new Vector3(0, 1, 0));\n  this.add(cameraPY);\n  var cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n  cameraNY.up.set(0, 0, -1);\n  cameraNY.lookAt(new Vector3(0, -1, 0));\n  this.add(cameraNY);\n  var cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n  cameraPZ.up.set(0, -1, 0);\n  cameraPZ.lookAt(new Vector3(0, 0, 1));\n  this.add(cameraPZ);\n  var cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n  cameraNZ.up.set(0, -1, 0);\n  cameraNZ.lookAt(new Vector3(0, 0, -1));\n  this.add(cameraNZ);\n  var options = {\n    format: RGBFormat,\n    magFilter: LinearFilter,\n    minFilter: LinearFilter\n  };\n  this.renderTarget = new WebGLRenderTargetCube(cubeResolution, cubeResolution, options);\n  this.renderTarget.texture.name = \"CubeCamera\";\n\n  this.update = function (renderer, scene) {\n    if (this.parent === null) this.updateMatrixWorld();\n    var renderTarget = this.renderTarget;\n    var generateMipmaps = renderTarget.texture.generateMipmaps;\n    renderTarget.texture.generateMipmaps = false;\n    renderTarget.activeCubeFace = 0;\n    renderer.render(scene, cameraPX, renderTarget);\n    renderTarget.activeCubeFace = 1;\n    renderer.render(scene, cameraNX, renderTarget);\n    renderTarget.activeCubeFace = 2;\n    renderer.render(scene, cameraPY, renderTarget);\n    renderTarget.activeCubeFace = 3;\n    renderer.render(scene, cameraNY, renderTarget);\n    renderTarget.activeCubeFace = 4;\n    renderer.render(scene, cameraPZ, renderTarget);\n    renderTarget.texture.generateMipmaps = generateMipmaps;\n    renderTarget.activeCubeFace = 5;\n    renderer.render(scene, cameraNZ, renderTarget);\n    renderer.setRenderTarget(null);\n  };\n\n  this.clear = function (renderer, color, depth, stencil) {\n    var renderTarget = this.renderTarget;\n\n    for (var i = 0; i < 6; i++) {\n      renderTarget.activeCubeFace = i;\n      renderer.setRenderTarget(renderTarget);\n      renderer.clear(color, depth, stencil);\n    }\n\n    renderer.setRenderTarget(null);\n  };\n}\n\nCubeCamera.prototype = Object.create(Object3D.prototype);\nCubeCamera.prototype.constructor = CubeCamera;\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n  Object3D.call(this);\n  this.type = 'AudioListener';\n  this.context = AudioContext.getContext();\n  this.gain = this.context.createGain();\n  this.gain.connect(this.context.destination);\n  this.filter = null;\n}\n\nAudioListener.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: AudioListener,\n  getInput: function () {\n    return this.gain;\n  },\n  removeFilter: function () {\n    if (this.filter !== null) {\n      this.gain.disconnect(this.filter);\n      this.filter.disconnect(this.context.destination);\n      this.gain.connect(this.context.destination);\n      this.filter = null;\n    }\n  },\n  getFilter: function () {\n    return this.filter;\n  },\n  setFilter: function (value) {\n    if (this.filter !== null) {\n      this.gain.disconnect(this.filter);\n      this.filter.disconnect(this.context.destination);\n    } else {\n      this.gain.disconnect(this.context.destination);\n    }\n\n    this.filter = value;\n    this.gain.connect(this.filter);\n    this.filter.connect(this.context.destination);\n  },\n  getMasterVolume: function () {\n    return this.gain.gain.value;\n  },\n  setMasterVolume: function (value) {\n    this.gain.gain.value = value;\n  },\n  updateMatrixWorld: function () {\n    var position = new Vector3();\n    var quaternion = new Quaternion();\n    var scale = new Vector3();\n    var orientation = new Vector3();\n    return function updateMatrixWorld(force) {\n      Object3D.prototype.updateMatrixWorld.call(this, force);\n      var listener = this.context.listener;\n      var up = this.up;\n      this.matrixWorld.decompose(position, quaternion, scale);\n      orientation.set(0, 0, -1).applyQuaternion(quaternion);\n\n      if (listener.positionX) {\n        listener.positionX.setValueAtTime(position.x, this.context.currentTime);\n        listener.positionY.setValueAtTime(position.y, this.context.currentTime);\n        listener.positionZ.setValueAtTime(position.z, this.context.currentTime);\n        listener.forwardX.setValueAtTime(orientation.x, this.context.currentTime);\n        listener.forwardY.setValueAtTime(orientation.y, this.context.currentTime);\n        listener.forwardZ.setValueAtTime(orientation.z, this.context.currentTime);\n        listener.upX.setValueAtTime(up.x, this.context.currentTime);\n        listener.upY.setValueAtTime(up.y, this.context.currentTime);\n        listener.upZ.setValueAtTime(up.z, this.context.currentTime);\n      } else {\n        listener.setPosition(position.x, position.y, position.z);\n        listener.setOrientation(orientation.x, orientation.y, orientation.z, up.x, up.y, up.z);\n      }\n    };\n  }()\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio(listener) {\n  Object3D.call(this);\n  this.type = 'Audio';\n  this.context = listener.context;\n  this.gain = this.context.createGain();\n  this.gain.connect(listener.getInput());\n  this.autoplay = false;\n  this.buffer = null;\n  this.loop = false;\n  this.startTime = 0;\n  this.playbackRate = 1;\n  this.isPlaying = false;\n  this.hasPlaybackControl = true;\n  this.sourceType = 'empty';\n  this.filters = [];\n}\n\nAudio.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Audio,\n  getOutput: function () {\n    return this.gain;\n  },\n  setNodeSource: function (audioNode) {\n    this.hasPlaybackControl = false;\n    this.sourceType = 'audioNode';\n    this.source = audioNode;\n    this.connect();\n    return this;\n  },\n  setBuffer: function (audioBuffer) {\n    this.buffer = audioBuffer;\n    this.sourceType = 'buffer';\n    if (this.autoplay) this.play();\n    return this;\n  },\n  play: function () {\n    if (this.isPlaying === true) {\n      console.warn('THREE.Audio: Audio is already playing.');\n      return;\n    }\n\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    var source = this.context.createBufferSource();\n    source.buffer = this.buffer;\n    source.loop = this.loop;\n    source.onended = this.onEnded.bind(this);\n    source.playbackRate.setValueAtTime(this.playbackRate, this.startTime);\n    source.start(0, this.startTime);\n    this.isPlaying = true;\n    this.source = source;\n    return this.connect();\n  },\n  pause: function () {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    this.source.stop();\n    this.startTime = this.context.currentTime;\n    this.isPlaying = false;\n    return this;\n  },\n  stop: function () {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    this.source.stop();\n    this.startTime = 0;\n    this.isPlaying = false;\n    return this;\n  },\n  connect: function () {\n    if (this.filters.length > 0) {\n      this.source.connect(this.filters[0]);\n\n      for (var i = 1, l = this.filters.length; i < l; i++) {\n        this.filters[i - 1].connect(this.filters[i]);\n      }\n\n      this.filters[this.filters.length - 1].connect(this.getOutput());\n    } else {\n      this.source.connect(this.getOutput());\n    }\n\n    return this;\n  },\n  disconnect: function () {\n    if (this.filters.length > 0) {\n      this.source.disconnect(this.filters[0]);\n\n      for (var i = 1, l = this.filters.length; i < l; i++) {\n        this.filters[i - 1].disconnect(this.filters[i]);\n      }\n\n      this.filters[this.filters.length - 1].disconnect(this.getOutput());\n    } else {\n      this.source.disconnect(this.getOutput());\n    }\n\n    return this;\n  },\n  getFilters: function () {\n    return this.filters;\n  },\n  setFilters: function (value) {\n    if (!value) value = [];\n\n    if (this.isPlaying === true) {\n      this.disconnect();\n      this.filters = value;\n      this.connect();\n    } else {\n      this.filters = value;\n    }\n\n    return this;\n  },\n  getFilter: function () {\n    return this.getFilters()[0];\n  },\n  setFilter: function (filter) {\n    return this.setFilters(filter ? [filter] : []);\n  },\n  setPlaybackRate: function (value) {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    this.playbackRate = value;\n\n    if (this.isPlaying === true) {\n      this.source.playbackRate.setValueAtTime(this.playbackRate, this.context.currentTime);\n    }\n\n    return this;\n  },\n  getPlaybackRate: function () {\n    return this.playbackRate;\n  },\n  onEnded: function () {\n    this.isPlaying = false;\n  },\n  getLoop: function () {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return false;\n    }\n\n    return this.loop;\n  },\n  setLoop: function (value) {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    this.loop = value;\n\n    if (this.isPlaying === true) {\n      this.source.loop = this.loop;\n    }\n\n    return this;\n  },\n  getVolume: function () {\n    return this.gain.gain.value;\n  },\n  setVolume: function (value) {\n    this.gain.gain.value = value;\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio(listener) {\n  Audio.call(this, listener);\n  this.panner = this.context.createPanner();\n  this.panner.connect(this.gain);\n}\n\nPositionalAudio.prototype = Object.assign(Object.create(Audio.prototype), {\n  constructor: PositionalAudio,\n  getOutput: function () {\n    return this.panner;\n  },\n  getRefDistance: function () {\n    return this.panner.refDistance;\n  },\n  setRefDistance: function (value) {\n    this.panner.refDistance = value;\n  },\n  getRolloffFactor: function () {\n    return this.panner.rolloffFactor;\n  },\n  setRolloffFactor: function (value) {\n    this.panner.rolloffFactor = value;\n  },\n  getDistanceModel: function () {\n    return this.panner.distanceModel;\n  },\n  setDistanceModel: function (value) {\n    this.panner.distanceModel = value;\n  },\n  getMaxDistance: function () {\n    return this.panner.maxDistance;\n  },\n  setMaxDistance: function (value) {\n    this.panner.maxDistance = value;\n  },\n  updateMatrixWorld: function () {\n    var position = new Vector3();\n    return function updateMatrixWorld(force) {\n      Object3D.prototype.updateMatrixWorld.call(this, force);\n      position.setFromMatrixPosition(this.matrixWorld);\n      this.panner.setPosition(position.x, position.y, position.z);\n    };\n  }()\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser(audio, fftSize) {\n  this.analyser = audio.context.createAnalyser();\n  this.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n  this.data = new Uint8Array(this.analyser.frequencyBinCount);\n  audio.getOutput().connect(this.analyser);\n}\n\nObject.assign(AudioAnalyser.prototype, {\n  getFrequencyData: function () {\n    this.analyser.getByteFrequencyData(this.data);\n    return this.data;\n  },\n  getAverageFrequency: function () {\n    var value = 0,\n        data = this.getFrequencyData();\n\n    for (var i = 0; i < data.length; i++) {\n      value += data[i];\n    }\n\n    return value / data.length;\n  }\n});\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer(binding, typeName, valueSize) {\n  this.binding = binding;\n  this.valueSize = valueSize;\n  var bufferType = Float64Array,\n      mixFunction;\n\n  switch (typeName) {\n    case 'quaternion':\n      mixFunction = this._slerp;\n      break;\n\n    case 'string':\n    case 'bool':\n      bufferType = Array;\n      mixFunction = this._select;\n      break;\n\n    default:\n      mixFunction = this._lerp;\n  }\n\n  this.buffer = new bufferType(valueSize * 4); // layout: [ incoming | accu0 | accu1 | orig ]\n  //\n  // interpolators can use .buffer as their .result\n  // the data then goes to 'incoming'\n  //\n  // 'accu0' and 'accu1' are used frame-interleaved for\n  // the cumulative result and are compared to detect\n  // changes\n  //\n  // 'orig' stores the original state of the property\n\n  this._mixBufferRegion = mixFunction;\n  this.cumulativeWeight = 0;\n  this.useCount = 0;\n  this.referenceCount = 0;\n}\n\nObject.assign(PropertyMixer.prototype, {\n  // accumulate data in the 'incoming' region into 'accu<i>'\n  accumulate: function (accuIndex, weight) {\n    // note: happily accumulating nothing when weight = 0, the caller knows\n    // the weight and shouldn't have made the call in the first place\n    var buffer = this.buffer,\n        stride = this.valueSize,\n        offset = accuIndex * stride + stride,\n        currentWeight = this.cumulativeWeight;\n\n    if (currentWeight === 0) {\n      // accuN := incoming * weight\n      for (var i = 0; i !== stride; ++i) {\n        buffer[offset + i] = buffer[i];\n      }\n\n      currentWeight = weight;\n    } else {\n      // accuN := accuN + incoming * weight\n      currentWeight += weight;\n      var mix = weight / currentWeight;\n\n      this._mixBufferRegion(buffer, offset, 0, mix, stride);\n    }\n\n    this.cumulativeWeight = currentWeight;\n  },\n  // apply the state of 'accu<i>' to the binding when accus differ\n  apply: function (accuIndex) {\n    var stride = this.valueSize,\n        buffer = this.buffer,\n        offset = accuIndex * stride + stride,\n        weight = this.cumulativeWeight,\n        binding = this.binding;\n    this.cumulativeWeight = 0;\n\n    if (weight < 1) {\n      // accuN := accuN + original * ( 1 - cumulativeWeight )\n      var originalValueOffset = stride * 3;\n\n      this._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n    }\n\n    for (var i = stride, e = stride + stride; i !== e; ++i) {\n      if (buffer[i] !== buffer[i + stride]) {\n        // value has changed -> update scene graph\n        binding.setValue(buffer, offset);\n        break;\n      }\n    }\n  },\n  // remember the state of the bound property and copy it to both accus\n  saveOriginalState: function () {\n    var binding = this.binding;\n    var buffer = this.buffer,\n        stride = this.valueSize,\n        originalValueOffset = stride * 3;\n    binding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n    for (var i = stride, e = originalValueOffset; i !== e; ++i) {\n      buffer[i] = buffer[originalValueOffset + i % stride];\n    }\n\n    this.cumulativeWeight = 0;\n  },\n  // apply the state previously taken via 'saveOriginalState' to the binding\n  restoreOriginalState: function () {\n    var originalValueOffset = this.valueSize * 3;\n    this.binding.setValue(this.buffer, originalValueOffset);\n  },\n  // mix functions\n  _select: function (buffer, dstOffset, srcOffset, t, stride) {\n    if (t >= 0.5) {\n      for (var i = 0; i !== stride; ++i) {\n        buffer[dstOffset + i] = buffer[srcOffset + i];\n      }\n    }\n  },\n  _slerp: function (buffer, dstOffset, srcOffset, t) {\n    Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n  },\n  _lerp: function (buffer, dstOffset, srcOffset, t, stride) {\n    var s = 1 - t;\n\n    for (var i = 0; i !== stride; ++i) {\n      var j = dstOffset + i;\n      buffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n    }\n  }\n});\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction Composite(targetGroup, path, optionalParsedPath) {\n  var parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\n  this._targetGroup = targetGroup;\n  this._bindings = targetGroup.subscribe_(path, parsedPath);\n}\n\nObject.assign(Composite.prototype, {\n  getValue: function (array, offset) {\n    this.bind(); // bind all binding\n\n    var firstValidIndex = this._targetGroup.nCachedObjects_,\n        binding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n    if (binding !== undefined) binding.getValue(array, offset);\n  },\n  setValue: function (array, offset) {\n    var bindings = this._bindings;\n\n    for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n      bindings[i].setValue(array, offset);\n    }\n  },\n  bind: function () {\n    var bindings = this._bindings;\n\n    for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n      bindings[i].bind();\n    }\n  },\n  unbind: function () {\n    var bindings = this._bindings;\n\n    for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n      bindings[i].unbind();\n    }\n  }\n});\n\nfunction PropertyBinding(rootNode, path, parsedPath) {\n  this.path = path;\n  this.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n  this.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n  this.rootNode = rootNode;\n}\n\nObject.assign(PropertyBinding, {\n  Composite: Composite,\n  create: function (root, path, parsedPath) {\n    if (!(root && root.isAnimationObjectGroup)) {\n      return new PropertyBinding(root, path, parsedPath);\n    } else {\n      return new PropertyBinding.Composite(root, path, parsedPath);\n    }\n  },\n\n  /**\n   * Replaces spaces with underscores and removes unsupported characters from\n   * node names, to ensure compatibility with parseTrackName().\n   *\n   * @param  {string} name Node name to be sanitized.\n   * @return {string}\n   */\n  sanitizeNodeName: function (name) {\n    return name.replace(/\\s/g, '_').replace(/[^\\w-]/g, '');\n  },\n  parseTrackName: function () {\n    // Parent directories, delimited by '/' or ':'. Currently unused, but must\n    // be matched to parse the rest of the track name.\n    var directoryRe = /((?:[\\w-]+[\\/:])*)/; // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\n    var nodeRe = /([\\w-\\.]+)?/; // Object on target node, and accessor. Name may contain only word\n    // characters. Accessor may contain any character except closing bracket.\n\n    var objectRe = /(?:\\.([\\w-]+)(?:\\[(.+)\\])?)?/; // Property and accessor. May contain only word characters. Accessor may\n    // contain any non-bracket characters.\n\n    var propertyRe = /\\.([\\w-]+)(?:\\[(.+)\\])?/;\n    var trackRe = new RegExp('' + '^' + directoryRe.source + nodeRe.source + objectRe.source + propertyRe.source + '$');\n    var supportedObjectNames = ['material', 'materials', 'bones'];\n    return function (trackName) {\n      var matches = trackRe.exec(trackName);\n\n      if (!matches) {\n        throw new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\n      }\n\n      var results = {\n        // directoryName: matches[ 1 ], // (tschw) currently unused\n        nodeName: matches[2],\n        objectName: matches[3],\n        objectIndex: matches[4],\n        propertyName: matches[5],\n        // required\n        propertyIndex: matches[6]\n      };\n      var lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\n\n      if (lastDot !== undefined && lastDot !== -1) {\n        var objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against a whitelist. Otherwise, there\n        // is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n        // 'bar' could be the objectName, or part of a nodeName (which can\n        // include '.' characters).\n\n        if (supportedObjectNames.indexOf(objectName) !== -1) {\n          results.nodeName = results.nodeName.substring(0, lastDot);\n          results.objectName = objectName;\n        }\n      }\n\n      if (results.propertyName === null || results.propertyName.length === 0) {\n        throw new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\n      }\n\n      return results;\n    };\n  }(),\n  findNode: function (root, nodeName) {\n    if (!nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n      return root;\n    } // search into skeleton bones.\n\n\n    if (root.skeleton) {\n      var searchSkeleton = function (skeleton) {\n        for (var i = 0; i < skeleton.bones.length; i++) {\n          var bone = skeleton.bones[i];\n\n          if (bone.name === nodeName) {\n            return bone;\n          }\n        }\n\n        return null;\n      };\n\n      var bone = searchSkeleton(root.skeleton);\n\n      if (bone) {\n        return bone;\n      }\n    } // search into node subtree.\n\n\n    if (root.children) {\n      var searchNodeSubtree = function (children) {\n        for (var i = 0; i < children.length; i++) {\n          var childNode = children[i];\n\n          if (childNode.name === nodeName || childNode.uuid === nodeName) {\n            return childNode;\n          }\n\n          var result = searchNodeSubtree(childNode.children);\n          if (result) return result;\n        }\n\n        return null;\n      };\n\n      var subTreeNode = searchNodeSubtree(root.children);\n\n      if (subTreeNode) {\n        return subTreeNode;\n      }\n    }\n\n    return null;\n  }\n});\nObject.assign(PropertyBinding.prototype, {\n  // prototype, continued\n  // these are used to \"bind\" a nonexistent property\n  _getValue_unavailable: function () {},\n  _setValue_unavailable: function () {},\n  BindingType: {\n    Direct: 0,\n    EntireArray: 1,\n    ArrayElement: 2,\n    HasFromToArray: 3\n  },\n  Versioning: {\n    None: 0,\n    NeedsUpdate: 1,\n    MatrixWorldNeedsUpdate: 2\n  },\n  GetterByBindingType: [function getValue_direct(buffer, offset) {\n    buffer[offset] = this.node[this.propertyName];\n  }, function getValue_array(buffer, offset) {\n    var source = this.resolvedProperty;\n\n    for (var i = 0, n = source.length; i !== n; ++i) {\n      buffer[offset++] = source[i];\n    }\n  }, function getValue_arrayElement(buffer, offset) {\n    buffer[offset] = this.resolvedProperty[this.propertyIndex];\n  }, function getValue_toArray(buffer, offset) {\n    this.resolvedProperty.toArray(buffer, offset);\n  }],\n  SetterByBindingTypeAndVersioning: [[// Direct\n  function setValue_direct(buffer, offset) {\n    this.node[this.propertyName] = buffer[offset];\n  }, function setValue_direct_setNeedsUpdate(buffer, offset) {\n    this.node[this.propertyName] = buffer[offset];\n    this.targetObject.needsUpdate = true;\n  }, function setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n    this.node[this.propertyName] = buffer[offset];\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }], [// EntireArray\n  function setValue_array(buffer, offset) {\n    var dest = this.resolvedProperty;\n\n    for (var i = 0, n = dest.length; i !== n; ++i) {\n      dest[i] = buffer[offset++];\n    }\n  }, function setValue_array_setNeedsUpdate(buffer, offset) {\n    var dest = this.resolvedProperty;\n\n    for (var i = 0, n = dest.length; i !== n; ++i) {\n      dest[i] = buffer[offset++];\n    }\n\n    this.targetObject.needsUpdate = true;\n  }, function setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n    var dest = this.resolvedProperty;\n\n    for (var i = 0, n = dest.length; i !== n; ++i) {\n      dest[i] = buffer[offset++];\n    }\n\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }], [// ArrayElement\n  function setValue_arrayElement(buffer, offset) {\n    this.resolvedProperty[this.propertyIndex] = buffer[offset];\n  }, function setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n    this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    this.targetObject.needsUpdate = true;\n  }, function setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n    this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }], [// HasToFromArray\n  function setValue_fromArray(buffer, offset) {\n    this.resolvedProperty.fromArray(buffer, offset);\n  }, function setValue_fromArray_setNeedsUpdate(buffer, offset) {\n    this.resolvedProperty.fromArray(buffer, offset);\n    this.targetObject.needsUpdate = true;\n  }, function setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n    this.resolvedProperty.fromArray(buffer, offset);\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }]],\n  getValue: function getValue_unbound(targetArray, offset) {\n    this.bind();\n    this.getValue(targetArray, offset); // Note: This class uses a State pattern on a per-method basis:\n    // 'bind' sets 'this.getValue' / 'setValue' and shadows the\n    // prototype version of these methods with one that represents\n    // the bound state. When the property is not found, the methods\n    // become no-ops.\n  },\n  setValue: function getValue_unbound(sourceArray, offset) {\n    this.bind();\n    this.setValue(sourceArray, offset);\n  },\n  // create getter / setter pair for a property in the scene graph\n  bind: function () {\n    var targetObject = this.node,\n        parsedPath = this.parsedPath,\n        objectName = parsedPath.objectName,\n        propertyName = parsedPath.propertyName,\n        propertyIndex = parsedPath.propertyIndex;\n\n    if (!targetObject) {\n      targetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n      this.node = targetObject;\n    } // set fail state so we can just 'return' on error\n\n\n    this.getValue = this._getValue_unavailable;\n    this.setValue = this._setValue_unavailable; // ensure there is a value node\n\n    if (!targetObject) {\n      console.error('THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.');\n      return;\n    }\n\n    if (objectName) {\n      var objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n      switch (objectName) {\n        case 'materials':\n          if (!targetObject.material) {\n            console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\n            return;\n          }\n\n          if (!targetObject.material.materials) {\n            console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\n            return;\n          }\n\n          targetObject = targetObject.material.materials;\n          break;\n\n        case 'bones':\n          if (!targetObject.skeleton) {\n            console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\n            return;\n          } // potential future optimization: skip this if propertyIndex is already an integer\n          // and convert the integer string to a true integer.\n\n\n          targetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n          for (var i = 0; i < targetObject.length; i++) {\n            if (targetObject[i].name === objectIndex) {\n              objectIndex = i;\n              break;\n            }\n          }\n\n          break;\n\n        default:\n          if (targetObject[objectName] === undefined) {\n            console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\n            return;\n          }\n\n          targetObject = targetObject[objectName];\n      }\n\n      if (objectIndex !== undefined) {\n        if (targetObject[objectIndex] === undefined) {\n          console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\n          return;\n        }\n\n        targetObject = targetObject[objectIndex];\n      }\n    } // resolve property\n\n\n    var nodeProperty = targetObject[propertyName];\n\n    if (nodeProperty === undefined) {\n      var nodeName = parsedPath.nodeName;\n      console.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\n      return;\n    } // determine versioning scheme\n\n\n    var versioning = this.Versioning.None;\n\n    if (targetObject.needsUpdate !== undefined) {\n      // material\n      versioning = this.Versioning.NeedsUpdate;\n      this.targetObject = targetObject;\n    } else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n      // node transform\n      versioning = this.Versioning.MatrixWorldNeedsUpdate;\n      this.targetObject = targetObject;\n    } // determine how the property gets bound\n\n\n    var bindingType = this.BindingType.Direct;\n\n    if (propertyIndex !== undefined) {\n      // access a sub element of the property array (only primitives are supported right now)\n      if (propertyName === \"morphTargetInfluences\") {\n        // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n        // support resolving morphTarget names into indices.\n        if (!targetObject.geometry) {\n          console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\n          return;\n        }\n\n        if (targetObject.geometry.isBufferGeometry) {\n          if (!targetObject.geometry.morphAttributes) {\n            console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\n            return;\n          }\n\n          for (var i = 0; i < this.node.geometry.morphAttributes.position.length; i++) {\n            if (targetObject.geometry.morphAttributes.position[i].name === propertyIndex) {\n              propertyIndex = i;\n              break;\n            }\n          }\n        } else {\n          if (!targetObject.geometry.morphTargets) {\n            console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this);\n            return;\n          }\n\n          for (var i = 0; i < this.node.geometry.morphTargets.length; i++) {\n            if (targetObject.geometry.morphTargets[i].name === propertyIndex) {\n              propertyIndex = i;\n              break;\n            }\n          }\n        }\n      }\n\n      bindingType = this.BindingType.ArrayElement;\n      this.resolvedProperty = nodeProperty;\n      this.propertyIndex = propertyIndex;\n    } else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n      // must use copy for Object3D.Euler/Quaternion\n      bindingType = this.BindingType.HasFromToArray;\n      this.resolvedProperty = nodeProperty;\n    } else if (Array.isArray(nodeProperty)) {\n      bindingType = this.BindingType.EntireArray;\n      this.resolvedProperty = nodeProperty;\n    } else {\n      this.propertyName = propertyName;\n    } // select getter / setter\n\n\n    this.getValue = this.GetterByBindingType[bindingType];\n    this.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n  },\n  unbind: function () {\n    this.node = null; // back to the prototype version of getValue / setValue\n    // note: avoiding to mutate the shape of 'this' via 'delete'\n\n    this.getValue = this._getValue_unbound;\n    this.setValue = this._setValue_unbound;\n  }\n}); //!\\ DECLARE ALIAS AFTER assign prototype !\n\nObject.assign(PropertyBinding.prototype, {\n  // initial state of these methods that calls 'bind'\n  _getValue_unbound: PropertyBinding.prototype.getValue,\n  _setValue_unbound: PropertyBinding.prototype.setValue\n});\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n * \t-\tAdd objects you would otherwise pass as 'root' to the\n * \t\tconstructor or the .clipAction method of AnimationMixer.\n *\n * \t-\tInstead pass this object as 'root'.\n *\n * \t-\tYou can also add and remove objects later when the mixer\n * \t\tis running.\n *\n * Note:\n *\n *  \tObjects of this class appear as one object to the mixer,\n *  \tso cache control of the individual objects must be done\n *  \ton the group.\n *\n * Limitation:\n *\n * \t- \tThe animated properties must be compatible among the\n * \t\tall objects in the group.\n *\n *  -\tA single property can either be controlled through a\n *  \ttarget group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup(var_args) {\n  this.uuid = _Math.generateUUID(); // cached objects followed by the active ones\n\n  this._objects = Array.prototype.slice.call(arguments);\n  this.nCachedObjects_ = 0; // threshold\n  // note: read by PropertyBinding.Composite\n\n  var indices = {};\n  this._indicesByUUID = indices; // for bookkeeping\n\n  for (var i = 0, n = arguments.length; i !== n; ++i) {\n    indices[arguments[i].uuid] = i;\n  }\n\n  this._paths = []; // inside: string\n\n  this._parsedPaths = []; // inside: { we don't care, here }\n\n  this._bindings = []; // inside: Array< PropertyBinding >\n\n  this._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n  var scope = this;\n  this.stats = {\n    objects: {\n      get total() {\n        return scope._objects.length;\n      },\n\n      get inUse() {\n        return this.total - scope.nCachedObjects_;\n      }\n\n    },\n\n    get bindingsPerObject() {\n      return scope._bindings.length;\n    }\n\n  };\n}\n\nObject.assign(AnimationObjectGroup.prototype, {\n  isAnimationObjectGroup: true,\n  add: function (var_args) {\n    var objects = this._objects,\n        nObjects = objects.length,\n        nCachedObjects = this.nCachedObjects_,\n        indicesByUUID = this._indicesByUUID,\n        paths = this._paths,\n        parsedPaths = this._parsedPaths,\n        bindings = this._bindings,\n        nBindings = bindings.length;\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      var object = arguments[i],\n          uuid = object.uuid,\n          index = indicesByUUID[uuid],\n          knownObject = undefined;\n\n      if (index === undefined) {\n        // unknown object -> add it to the ACTIVE region\n        index = nObjects++;\n        indicesByUUID[uuid] = index;\n        objects.push(object); // accounting is done, now do the same for all bindings\n\n        for (var j = 0, m = nBindings; j !== m; ++j) {\n          bindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\n        }\n      } else if (index < nCachedObjects) {\n        knownObject = objects[index]; // move existing object to the ACTIVE region\n\n        var firstActiveIndex = --nCachedObjects,\n            lastCachedObject = objects[firstActiveIndex];\n        indicesByUUID[lastCachedObject.uuid] = index;\n        objects[index] = lastCachedObject;\n        indicesByUUID[uuid] = firstActiveIndex;\n        objects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n        for (var j = 0, m = nBindings; j !== m; ++j) {\n          var bindingsForPath = bindings[j],\n              lastCached = bindingsForPath[firstActiveIndex],\n              binding = bindingsForPath[index];\n          bindingsForPath[index] = lastCached;\n\n          if (binding === undefined) {\n            // since we do not bother to create new bindings\n            // for objects that are cached, the binding may\n            // or may not exist\n            binding = new PropertyBinding(object, paths[j], parsedPaths[j]);\n          }\n\n          bindingsForPath[firstActiveIndex] = binding;\n        }\n      } else if (objects[index] !== knownObject) {\n        console.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\n      } // else the object is already where we want it to be\n\n    } // for arguments\n\n\n    this.nCachedObjects_ = nCachedObjects;\n  },\n  remove: function (var_args) {\n    var objects = this._objects,\n        nCachedObjects = this.nCachedObjects_,\n        indicesByUUID = this._indicesByUUID,\n        bindings = this._bindings,\n        nBindings = bindings.length;\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      var object = arguments[i],\n          uuid = object.uuid,\n          index = indicesByUUID[uuid];\n\n      if (index !== undefined && index >= nCachedObjects) {\n        // move existing object into the CACHED region\n        var lastCachedIndex = nCachedObjects++,\n            firstActiveObject = objects[lastCachedIndex];\n        indicesByUUID[firstActiveObject.uuid] = index;\n        objects[index] = firstActiveObject;\n        indicesByUUID[uuid] = lastCachedIndex;\n        objects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n        for (var j = 0, m = nBindings; j !== m; ++j) {\n          var bindingsForPath = bindings[j],\n              firstActive = bindingsForPath[lastCachedIndex],\n              binding = bindingsForPath[index];\n          bindingsForPath[index] = firstActive;\n          bindingsForPath[lastCachedIndex] = binding;\n        }\n      }\n    } // for arguments\n\n\n    this.nCachedObjects_ = nCachedObjects;\n  },\n  // remove & forget\n  uncache: function (var_args) {\n    var objects = this._objects,\n        nObjects = objects.length,\n        nCachedObjects = this.nCachedObjects_,\n        indicesByUUID = this._indicesByUUID,\n        bindings = this._bindings,\n        nBindings = bindings.length;\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      var object = arguments[i],\n          uuid = object.uuid,\n          index = indicesByUUID[uuid];\n\n      if (index !== undefined) {\n        delete indicesByUUID[uuid];\n\n        if (index < nCachedObjects) {\n          // object is cached, shrink the CACHED region\n          var firstActiveIndex = --nCachedObjects,\n              lastCachedObject = objects[firstActiveIndex],\n              lastIndex = --nObjects,\n              lastObject = objects[lastIndex]; // last cached object takes this object's place\n\n          indicesByUUID[lastCachedObject.uuid] = index;\n          objects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n          indicesByUUID[lastObject.uuid] = firstActiveIndex;\n          objects[firstActiveIndex] = lastObject;\n          objects.pop(); // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j],\n                lastCached = bindingsForPath[firstActiveIndex],\n                last = bindingsForPath[lastIndex];\n            bindingsForPath[index] = lastCached;\n            bindingsForPath[firstActiveIndex] = last;\n            bindingsForPath.pop();\n          }\n        } else {\n          // object is active, just swap with the last and pop\n          var lastIndex = --nObjects,\n              lastObject = objects[lastIndex];\n          indicesByUUID[lastObject.uuid] = index;\n          objects[index] = lastObject;\n          objects.pop(); // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j];\n            bindingsForPath[index] = bindingsForPath[lastIndex];\n            bindingsForPath.pop();\n          }\n        } // cached or active\n\n      } // if object is known\n\n    } // for arguments\n\n\n    this.nCachedObjects_ = nCachedObjects;\n  },\n  // Internal interface used by befriended PropertyBinding.Composite:\n  subscribe_: function (path, parsedPath) {\n    // returns an array of bindings for the given path that is changed\n    // according to the contained objects in the group\n    var indicesByPath = this._bindingsIndicesByPath,\n        index = indicesByPath[path],\n        bindings = this._bindings;\n    if (index !== undefined) return bindings[index];\n    var paths = this._paths,\n        parsedPaths = this._parsedPaths,\n        objects = this._objects,\n        nObjects = objects.length,\n        nCachedObjects = this.nCachedObjects_,\n        bindingsForPath = new Array(nObjects);\n    index = bindings.length;\n    indicesByPath[path] = index;\n    paths.push(path);\n    parsedPaths.push(parsedPath);\n    bindings.push(bindingsForPath);\n\n    for (var i = nCachedObjects, n = objects.length; i !== n; ++i) {\n      var object = objects[i];\n      bindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\n    }\n\n    return bindingsForPath;\n  },\n  unsubscribe_: function (path) {\n    // tells the group to forget about a property path and no longer\n    // update the array previously obtained with 'subscribe_'\n    var indicesByPath = this._bindingsIndicesByPath,\n        index = indicesByPath[path];\n\n    if (index !== undefined) {\n      var paths = this._paths,\n          parsedPaths = this._parsedPaths,\n          bindings = this._bindings,\n          lastBindingsIndex = bindings.length - 1,\n          lastBindings = bindings[lastBindingsIndex],\n          lastBindingsPath = path[lastBindingsIndex];\n      indicesByPath[lastBindingsPath] = index;\n      bindings[index] = lastBindings;\n      bindings.pop();\n      parsedPaths[index] = parsedPaths[lastBindingsIndex];\n      parsedPaths.pop();\n      paths[index] = paths[lastBindingsIndex];\n      paths.pop();\n    }\n  }\n});\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction(mixer, clip, localRoot) {\n  this._mixer = mixer;\n  this._clip = clip;\n  this._localRoot = localRoot || null;\n  var tracks = clip.tracks,\n      nTracks = tracks.length,\n      interpolants = new Array(nTracks);\n  var interpolantSettings = {\n    endingStart: ZeroCurvatureEnding,\n    endingEnd: ZeroCurvatureEnding\n  };\n\n  for (var i = 0; i !== nTracks; ++i) {\n    var interpolant = tracks[i].createInterpolant(null);\n    interpolants[i] = interpolant;\n    interpolant.settings = interpolantSettings;\n  }\n\n  this._interpolantSettings = interpolantSettings;\n  this._interpolants = interpolants; // bound by the mixer\n  // inside: PropertyMixer (managed by the mixer)\n\n  this._propertyBindings = new Array(nTracks);\n  this._cacheIndex = null; // for the memory manager\n\n  this._byClipCacheIndex = null; // for the memory manager\n\n  this._timeScaleInterpolant = null;\n  this._weightInterpolant = null;\n  this.loop = LoopRepeat;\n  this._loopCount = -1; // global mixer time when the action is to be started\n  // it's set back to 'null' upon start of the action\n\n  this._startTime = null; // scaled local time of the action\n  // gets clamped or wrapped to 0..clip.duration according to loop\n\n  this.time = 0;\n  this.timeScale = 1;\n  this._effectiveTimeScale = 1;\n  this.weight = 1;\n  this._effectiveWeight = 1;\n  this.repetitions = Infinity; // no. of repetitions when looping\n\n  this.paused = false; // true -> zero effective time scale\n\n  this.enabled = true; // false -> zero effective weight\n\n  this.clampWhenFinished = false; // keep feeding the last frame?\n\n  this.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n  this.zeroSlopeAtEnd = true; // clips for start, loop and end\n}\n\nObject.assign(AnimationAction.prototype, {\n  // State & Scheduling\n  play: function () {\n    this._mixer._activateAction(this);\n\n    return this;\n  },\n  stop: function () {\n    this._mixer._deactivateAction(this);\n\n    return this.reset();\n  },\n  reset: function () {\n    this.paused = false;\n    this.enabled = true;\n    this.time = 0; // restart clip\n\n    this._loopCount = -1; // forget previous loops\n\n    this._startTime = null; // forget scheduling\n\n    return this.stopFading().stopWarping();\n  },\n  isRunning: function () {\n    return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n  },\n  // return true when play has been called\n  isScheduled: function () {\n    return this._mixer._isActiveAction(this);\n  },\n  startAt: function (time) {\n    this._startTime = time;\n    return this;\n  },\n  setLoop: function (mode, repetitions) {\n    this.loop = mode;\n    this.repetitions = repetitions;\n    return this;\n  },\n  // Weight\n  // set the weight stopping any scheduled fading\n  // although .enabled = false yields an effective weight of zero, this\n  // method does *not* change .enabled, because it would be confusing\n  setEffectiveWeight: function (weight) {\n    this.weight = weight; // note: same logic as when updated at runtime\n\n    this._effectiveWeight = this.enabled ? weight : 0;\n    return this.stopFading();\n  },\n  // return the weight considering fading and .enabled\n  getEffectiveWeight: function () {\n    return this._effectiveWeight;\n  },\n  fadeIn: function (duration) {\n    return this._scheduleFading(duration, 0, 1);\n  },\n  fadeOut: function (duration) {\n    return this._scheduleFading(duration, 1, 0);\n  },\n  crossFadeFrom: function (fadeOutAction, duration, warp) {\n    fadeOutAction.fadeOut(duration);\n    this.fadeIn(duration);\n\n    if (warp) {\n      var fadeInDuration = this._clip.duration,\n          fadeOutDuration = fadeOutAction._clip.duration,\n          startEndRatio = fadeOutDuration / fadeInDuration,\n          endStartRatio = fadeInDuration / fadeOutDuration;\n      fadeOutAction.warp(1.0, startEndRatio, duration);\n      this.warp(endStartRatio, 1.0, duration);\n    }\n\n    return this;\n  },\n  crossFadeTo: function (fadeInAction, duration, warp) {\n    return fadeInAction.crossFadeFrom(this, duration, warp);\n  },\n  stopFading: function () {\n    var weightInterpolant = this._weightInterpolant;\n\n    if (weightInterpolant !== null) {\n      this._weightInterpolant = null;\n\n      this._mixer._takeBackControlInterpolant(weightInterpolant);\n    }\n\n    return this;\n  },\n  // Time Scale Control\n  // set the time scale stopping any scheduled warping\n  // although .paused = true yields an effective time scale of zero, this\n  // method does *not* change .paused, because it would be confusing\n  setEffectiveTimeScale: function (timeScale) {\n    this.timeScale = timeScale;\n    this._effectiveTimeScale = this.paused ? 0 : timeScale;\n    return this.stopWarping();\n  },\n  // return the time scale considering warping and .paused\n  getEffectiveTimeScale: function () {\n    return this._effectiveTimeScale;\n  },\n  setDuration: function (duration) {\n    this.timeScale = this._clip.duration / duration;\n    return this.stopWarping();\n  },\n  syncWith: function (action) {\n    this.time = action.time;\n    this.timeScale = action.timeScale;\n    return this.stopWarping();\n  },\n  halt: function (duration) {\n    return this.warp(this._effectiveTimeScale, 0, duration);\n  },\n  warp: function (startTimeScale, endTimeScale, duration) {\n    var mixer = this._mixer,\n        now = mixer.time,\n        interpolant = this._timeScaleInterpolant,\n        timeScale = this.timeScale;\n\n    if (interpolant === null) {\n      interpolant = mixer._lendControlInterpolant();\n      this._timeScaleInterpolant = interpolant;\n    }\n\n    var times = interpolant.parameterPositions,\n        values = interpolant.sampleValues;\n    times[0] = now;\n    times[1] = now + duration;\n    values[0] = startTimeScale / timeScale;\n    values[1] = endTimeScale / timeScale;\n    return this;\n  },\n  stopWarping: function () {\n    var timeScaleInterpolant = this._timeScaleInterpolant;\n\n    if (timeScaleInterpolant !== null) {\n      this._timeScaleInterpolant = null;\n\n      this._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n    }\n\n    return this;\n  },\n  // Object Accessors\n  getMixer: function () {\n    return this._mixer;\n  },\n  getClip: function () {\n    return this._clip;\n  },\n  getRoot: function () {\n    return this._localRoot || this._mixer._root;\n  },\n  // Interna\n  _update: function (time, deltaTime, timeDirection, accuIndex) {\n    // called by the mixer\n    if (!this.enabled) {\n      // call ._updateWeight() to update ._effectiveWeight\n      this._updateWeight(time);\n\n      return;\n    }\n\n    var startTime = this._startTime;\n\n    if (startTime !== null) {\n      // check for scheduled start of action\n      var timeRunning = (time - startTime) * timeDirection;\n\n      if (timeRunning < 0 || timeDirection === 0) {\n        return; // yet to come / don't decide when delta = 0\n      } // start\n\n\n      this._startTime = null; // unschedule\n\n      deltaTime = timeDirection * timeRunning;\n    } // apply time scale and advance time\n\n\n    deltaTime *= this._updateTimeScale(time);\n\n    var clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n    // an effective weight of 0\n\n\n    var weight = this._updateWeight(time);\n\n    if (weight > 0) {\n      var interpolants = this._interpolants;\n      var propertyMixers = this._propertyBindings;\n\n      for (var j = 0, m = interpolants.length; j !== m; ++j) {\n        interpolants[j].evaluate(clipTime);\n        propertyMixers[j].accumulate(accuIndex, weight);\n      }\n    }\n  },\n  _updateWeight: function (time) {\n    var weight = 0;\n\n    if (this.enabled) {\n      weight = this.weight;\n      var interpolant = this._weightInterpolant;\n\n      if (interpolant !== null) {\n        var interpolantValue = interpolant.evaluate(time)[0];\n        weight *= interpolantValue;\n\n        if (time > interpolant.parameterPositions[1]) {\n          this.stopFading();\n\n          if (interpolantValue === 0) {\n            // faded out, disable\n            this.enabled = false;\n          }\n        }\n      }\n    }\n\n    this._effectiveWeight = weight;\n    return weight;\n  },\n  _updateTimeScale: function (time) {\n    var timeScale = 0;\n\n    if (!this.paused) {\n      timeScale = this.timeScale;\n      var interpolant = this._timeScaleInterpolant;\n\n      if (interpolant !== null) {\n        var interpolantValue = interpolant.evaluate(time)[0];\n        timeScale *= interpolantValue;\n\n        if (time > interpolant.parameterPositions[1]) {\n          this.stopWarping();\n\n          if (timeScale === 0) {\n            // motion has halted, pause\n            this.paused = true;\n          } else {\n            // warp done - apply final time scale\n            this.timeScale = timeScale;\n          }\n        }\n      }\n    }\n\n    this._effectiveTimeScale = timeScale;\n    return timeScale;\n  },\n  _updateTime: function (deltaTime) {\n    var time = this.time + deltaTime;\n    if (deltaTime === 0) return time;\n    var duration = this._clip.duration,\n        loop = this.loop,\n        loopCount = this._loopCount;\n\n    if (loop === LoopOnce) {\n      if (loopCount === -1) {\n        // just started\n        this._loopCount = 0;\n\n        this._setEndings(true, true, false);\n      }\n\n      handle_stop: {\n        if (time >= duration) {\n          time = duration;\n        } else if (time < 0) {\n          time = 0;\n        } else break handle_stop;\n\n        if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\n        this._mixer.dispatchEvent({\n          type: 'finished',\n          action: this,\n          direction: deltaTime < 0 ? -1 : 1\n        });\n      }\n    } else {\n      // repetitive Repeat or PingPong\n      var pingPong = loop === LoopPingPong;\n\n      if (loopCount === -1) {\n        // just started\n        if (deltaTime >= 0) {\n          loopCount = 0;\n\n          this._setEndings(true, this.repetitions === 0, pingPong);\n        } else {\n          // when looping in reverse direction, the initial\n          // transition through zero counts as a repetition,\n          // so leave loopCount at -1\n          this._setEndings(this.repetitions === 0, true, pingPong);\n        }\n      }\n\n      if (time >= duration || time < 0) {\n        // wrap around\n        var loopDelta = Math.floor(time / duration); // signed\n\n        time -= duration * loopDelta;\n        loopCount += Math.abs(loopDelta);\n        var pending = this.repetitions - loopCount;\n\n        if (pending < 0) {\n          // have to stop (switch state, clamp time, fire event)\n          if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n          time = deltaTime > 0 ? duration : 0;\n\n          this._mixer.dispatchEvent({\n            type: 'finished',\n            action: this,\n            direction: deltaTime > 0 ? 1 : -1\n          });\n        } else {\n          // keep running\n          if (pending === 0) {\n            // entering the last round\n            var atStart = deltaTime < 0;\n\n            this._setEndings(atStart, !atStart, pingPong);\n          } else {\n            this._setEndings(false, false, pingPong);\n          }\n\n          this._loopCount = loopCount;\n\n          this._mixer.dispatchEvent({\n            type: 'loop',\n            action: this,\n            loopDelta: loopDelta\n          });\n        }\n      }\n\n      if (pingPong && (loopCount & 1) === 1) {\n        // invert time for the \"pong round\"\n        this.time = time;\n        return duration - time;\n      }\n    }\n\n    this.time = time;\n    return time;\n  },\n  _setEndings: function (atStart, atEnd, pingPong) {\n    var settings = this._interpolantSettings;\n\n    if (pingPong) {\n      settings.endingStart = ZeroSlopeEnding;\n      settings.endingEnd = ZeroSlopeEnding;\n    } else {\n      // assuming for LoopOnce atStart == atEnd == true\n      if (atStart) {\n        settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n      } else {\n        settings.endingStart = WrapAroundEnding;\n      }\n\n      if (atEnd) {\n        settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n      } else {\n        settings.endingEnd = WrapAroundEnding;\n      }\n    }\n  },\n  _scheduleFading: function (duration, weightNow, weightThen) {\n    var mixer = this._mixer,\n        now = mixer.time,\n        interpolant = this._weightInterpolant;\n\n    if (interpolant === null) {\n      interpolant = mixer._lendControlInterpolant();\n      this._weightInterpolant = interpolant;\n    }\n\n    var times = interpolant.parameterPositions,\n        values = interpolant.sampleValues;\n    times[0] = now;\n    values[0] = weightNow;\n    times[1] = now + duration;\n    values[1] = weightThen;\n    return this;\n  }\n});\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer(root) {\n  this._root = root;\n\n  this._initMemoryManager();\n\n  this._accuIndex = 0;\n  this.time = 0;\n  this.timeScale = 1.0;\n}\n\nObject.assign(AnimationMixer.prototype, EventDispatcher.prototype, {\n  _bindAction: function (action, prototypeAction) {\n    var root = action._localRoot || this._root,\n        tracks = action._clip.tracks,\n        nTracks = tracks.length,\n        bindings = action._propertyBindings,\n        interpolants = action._interpolants,\n        rootUuid = root.uuid,\n        bindingsByRoot = this._bindingsByRootAndName,\n        bindingsByName = bindingsByRoot[rootUuid];\n\n    if (bindingsByName === undefined) {\n      bindingsByName = {};\n      bindingsByRoot[rootUuid] = bindingsByName;\n    }\n\n    for (var i = 0; i !== nTracks; ++i) {\n      var track = tracks[i],\n          trackName = track.name,\n          binding = bindingsByName[trackName];\n\n      if (binding !== undefined) {\n        bindings[i] = binding;\n      } else {\n        binding = bindings[i];\n\n        if (binding !== undefined) {\n          // existing binding, make sure the cache knows\n          if (binding._cacheIndex === null) {\n            ++binding.referenceCount;\n\n            this._addInactiveBinding(binding, rootUuid, trackName);\n          }\n\n          continue;\n        }\n\n        var path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n        binding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n        ++binding.referenceCount;\n\n        this._addInactiveBinding(binding, rootUuid, trackName);\n\n        bindings[i] = binding;\n      }\n\n      interpolants[i].resultBuffer = binding.buffer;\n    }\n  },\n  _activateAction: function (action) {\n    if (!this._isActiveAction(action)) {\n      if (action._cacheIndex === null) {\n        // this action has been forgotten by the cache, but the user\n        // appears to be still using it -> rebind\n        var rootUuid = (action._localRoot || this._root).uuid,\n            clipUuid = action._clip.uuid,\n            actionsForClip = this._actionsByClip[clipUuid];\n\n        this._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n        this._addInactiveAction(action, clipUuid, rootUuid);\n      }\n\n      var bindings = action._propertyBindings; // increment reference counts / sort out state\n\n      for (var i = 0, n = bindings.length; i !== n; ++i) {\n        var binding = bindings[i];\n\n        if (binding.useCount++ === 0) {\n          this._lendBinding(binding);\n\n          binding.saveOriginalState();\n        }\n      }\n\n      this._lendAction(action);\n    }\n  },\n  _deactivateAction: function (action) {\n    if (this._isActiveAction(action)) {\n      var bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n      for (var i = 0, n = bindings.length; i !== n; ++i) {\n        var binding = bindings[i];\n\n        if (--binding.useCount === 0) {\n          binding.restoreOriginalState();\n\n          this._takeBackBinding(binding);\n        }\n      }\n\n      this._takeBackAction(action);\n    }\n  },\n  // Memory manager\n  _initMemoryManager: function () {\n    this._actions = []; // 'nActiveActions' followed by inactive ones\n\n    this._nActiveActions = 0;\n    this._actionsByClip = {}; // inside:\n    // {\n    // \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n    // \t\tactionByRoot: AnimationAction\t\t\t- lookup\n    // }\n\n    this._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n    this._nActiveBindings = 0;\n    this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n    this._controlInterpolants = []; // same game as above\n\n    this._nActiveControlInterpolants = 0;\n    var scope = this;\n    this.stats = {\n      actions: {\n        get total() {\n          return scope._actions.length;\n        },\n\n        get inUse() {\n          return scope._nActiveActions;\n        }\n\n      },\n      bindings: {\n        get total() {\n          return scope._bindings.length;\n        },\n\n        get inUse() {\n          return scope._nActiveBindings;\n        }\n\n      },\n      controlInterpolants: {\n        get total() {\n          return scope._controlInterpolants.length;\n        },\n\n        get inUse() {\n          return scope._nActiveControlInterpolants;\n        }\n\n      }\n    };\n  },\n  // Memory management for AnimationAction objects\n  _isActiveAction: function (action) {\n    var index = action._cacheIndex;\n    return index !== null && index < this._nActiveActions;\n  },\n  _addInactiveAction: function (action, clipUuid, rootUuid) {\n    var actions = this._actions,\n        actionsByClip = this._actionsByClip,\n        actionsForClip = actionsByClip[clipUuid];\n\n    if (actionsForClip === undefined) {\n      actionsForClip = {\n        knownActions: [action],\n        actionByRoot: {}\n      };\n      action._byClipCacheIndex = 0;\n      actionsByClip[clipUuid] = actionsForClip;\n    } else {\n      var knownActions = actionsForClip.knownActions;\n      action._byClipCacheIndex = knownActions.length;\n      knownActions.push(action);\n    }\n\n    action._cacheIndex = actions.length;\n    actions.push(action);\n    actionsForClip.actionByRoot[rootUuid] = action;\n  },\n  _removeInactiveAction: function (action) {\n    var actions = this._actions,\n        lastInactiveAction = actions[actions.length - 1],\n        cacheIndex = action._cacheIndex;\n    lastInactiveAction._cacheIndex = cacheIndex;\n    actions[cacheIndex] = lastInactiveAction;\n    actions.pop();\n    action._cacheIndex = null;\n    var clipUuid = action._clip.uuid,\n        actionsByClip = this._actionsByClip,\n        actionsForClip = actionsByClip[clipUuid],\n        knownActionsForClip = actionsForClip.knownActions,\n        lastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n        byClipCacheIndex = action._byClipCacheIndex;\n    lastKnownAction._byClipCacheIndex = byClipCacheIndex;\n    knownActionsForClip[byClipCacheIndex] = lastKnownAction;\n    knownActionsForClip.pop();\n    action._byClipCacheIndex = null;\n    var actionByRoot = actionsForClip.actionByRoot,\n        rootUuid = (action._localRoot || this._root).uuid;\n    delete actionByRoot[rootUuid];\n\n    if (knownActionsForClip.length === 0) {\n      delete actionsByClip[clipUuid];\n    }\n\n    this._removeInactiveBindingsForAction(action);\n  },\n  _removeInactiveBindingsForAction: function (action) {\n    var bindings = action._propertyBindings;\n\n    for (var i = 0, n = bindings.length; i !== n; ++i) {\n      var binding = bindings[i];\n\n      if (--binding.referenceCount === 0) {\n        this._removeInactiveBinding(binding);\n      }\n    }\n  },\n  _lendAction: function (action) {\n    // [ active actions |  inactive actions  ]\n    // [  active actions >| inactive actions ]\n    //                 s        a\n    //                  <-swap->\n    //                 a        s\n    var actions = this._actions,\n        prevIndex = action._cacheIndex,\n        lastActiveIndex = this._nActiveActions++,\n        firstInactiveAction = actions[lastActiveIndex];\n    action._cacheIndex = lastActiveIndex;\n    actions[lastActiveIndex] = action;\n    firstInactiveAction._cacheIndex = prevIndex;\n    actions[prevIndex] = firstInactiveAction;\n  },\n  _takeBackAction: function (action) {\n    // [  active actions  | inactive actions ]\n    // [ active actions |< inactive actions  ]\n    //        a        s\n    //         <-swap->\n    //        s        a\n    var actions = this._actions,\n        prevIndex = action._cacheIndex,\n        firstInactiveIndex = --this._nActiveActions,\n        lastActiveAction = actions[firstInactiveIndex];\n    action._cacheIndex = firstInactiveIndex;\n    actions[firstInactiveIndex] = action;\n    lastActiveAction._cacheIndex = prevIndex;\n    actions[prevIndex] = lastActiveAction;\n  },\n  // Memory management for PropertyMixer objects\n  _addInactiveBinding: function (binding, rootUuid, trackName) {\n    var bindingsByRoot = this._bindingsByRootAndName,\n        bindingByName = bindingsByRoot[rootUuid],\n        bindings = this._bindings;\n\n    if (bindingByName === undefined) {\n      bindingByName = {};\n      bindingsByRoot[rootUuid] = bindingByName;\n    }\n\n    bindingByName[trackName] = binding;\n    binding._cacheIndex = bindings.length;\n    bindings.push(binding);\n  },\n  _removeInactiveBinding: function (binding) {\n    var bindings = this._bindings,\n        propBinding = binding.binding,\n        rootUuid = propBinding.rootNode.uuid,\n        trackName = propBinding.path,\n        bindingsByRoot = this._bindingsByRootAndName,\n        bindingByName = bindingsByRoot[rootUuid],\n        lastInactiveBinding = bindings[bindings.length - 1],\n        cacheIndex = binding._cacheIndex;\n    lastInactiveBinding._cacheIndex = cacheIndex;\n    bindings[cacheIndex] = lastInactiveBinding;\n    bindings.pop();\n    delete bindingByName[trackName];\n\n    remove_empty_map: {\n      for (var _ in bindingByName) break remove_empty_map;\n\n      delete bindingsByRoot[rootUuid];\n    }\n  },\n  _lendBinding: function (binding) {\n    var bindings = this._bindings,\n        prevIndex = binding._cacheIndex,\n        lastActiveIndex = this._nActiveBindings++,\n        firstInactiveBinding = bindings[lastActiveIndex];\n    binding._cacheIndex = lastActiveIndex;\n    bindings[lastActiveIndex] = binding;\n    firstInactiveBinding._cacheIndex = prevIndex;\n    bindings[prevIndex] = firstInactiveBinding;\n  },\n  _takeBackBinding: function (binding) {\n    var bindings = this._bindings,\n        prevIndex = binding._cacheIndex,\n        firstInactiveIndex = --this._nActiveBindings,\n        lastActiveBinding = bindings[firstInactiveIndex];\n    binding._cacheIndex = firstInactiveIndex;\n    bindings[firstInactiveIndex] = binding;\n    lastActiveBinding._cacheIndex = prevIndex;\n    bindings[prevIndex] = lastActiveBinding;\n  },\n  // Memory management of Interpolants for weight and time scale\n  _lendControlInterpolant: function () {\n    var interpolants = this._controlInterpolants,\n        lastActiveIndex = this._nActiveControlInterpolants++,\n        interpolant = interpolants[lastActiveIndex];\n\n    if (interpolant === undefined) {\n      interpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\n      interpolant.__cacheIndex = lastActiveIndex;\n      interpolants[lastActiveIndex] = interpolant;\n    }\n\n    return interpolant;\n  },\n  _takeBackControlInterpolant: function (interpolant) {\n    var interpolants = this._controlInterpolants,\n        prevIndex = interpolant.__cacheIndex,\n        firstInactiveIndex = --this._nActiveControlInterpolants,\n        lastActiveInterpolant = interpolants[firstInactiveIndex];\n    interpolant.__cacheIndex = firstInactiveIndex;\n    interpolants[firstInactiveIndex] = interpolant;\n    lastActiveInterpolant.__cacheIndex = prevIndex;\n    interpolants[prevIndex] = lastActiveInterpolant;\n  },\n  _controlInterpolantsResultBuffer: new Float32Array(1),\n  // return an action for a clip optionally using a custom root target\n  // object (this method allocates a lot of dynamic memory in case a\n  // previously unknown clip/root combination is specified)\n  clipAction: function (clip, optionalRoot) {\n    var root = optionalRoot || this._root,\n        rootUuid = root.uuid,\n        clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n        clipUuid = clipObject !== null ? clipObject.uuid : clip,\n        actionsForClip = this._actionsByClip[clipUuid],\n        prototypeAction = null;\n\n    if (actionsForClip !== undefined) {\n      var existingAction = actionsForClip.actionByRoot[rootUuid];\n\n      if (existingAction !== undefined) {\n        return existingAction;\n      } // we know the clip, so we don't have to parse all\n      // the bindings again but can just copy\n\n\n      prototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n      if (clipObject === null) clipObject = prototypeAction._clip;\n    } // clip must be known when specified via string\n\n\n    if (clipObject === null) return null; // allocate all resources required to run it\n\n    var newAction = new AnimationAction(this, clipObject, optionalRoot);\n\n    this._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n    this._addInactiveAction(newAction, clipUuid, rootUuid);\n\n    return newAction;\n  },\n  // get an existing action\n  existingAction: function (clip, optionalRoot) {\n    var root = optionalRoot || this._root,\n        rootUuid = root.uuid,\n        clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n        clipUuid = clipObject ? clipObject.uuid : clip,\n        actionsForClip = this._actionsByClip[clipUuid];\n\n    if (actionsForClip !== undefined) {\n      return actionsForClip.actionByRoot[rootUuid] || null;\n    }\n\n    return null;\n  },\n  // deactivates all previously scheduled actions\n  stopAllAction: function () {\n    var actions = this._actions,\n        nActions = this._nActiveActions,\n        bindings = this._bindings,\n        nBindings = this._nActiveBindings;\n    this._nActiveActions = 0;\n    this._nActiveBindings = 0;\n\n    for (var i = 0; i !== nActions; ++i) {\n      actions[i].reset();\n    }\n\n    for (var i = 0; i !== nBindings; ++i) {\n      bindings[i].useCount = 0;\n    }\n\n    return this;\n  },\n  // advance the time and update apply the animation\n  update: function (deltaTime) {\n    deltaTime *= this.timeScale;\n    var actions = this._actions,\n        nActions = this._nActiveActions,\n        time = this.time += deltaTime,\n        timeDirection = Math.sign(deltaTime),\n        accuIndex = this._accuIndex ^= 1; // run active actions\n\n    for (var i = 0; i !== nActions; ++i) {\n      var action = actions[i];\n\n      action._update(time, deltaTime, timeDirection, accuIndex);\n    } // update scene graph\n\n\n    var bindings = this._bindings,\n        nBindings = this._nActiveBindings;\n\n    for (var i = 0; i !== nBindings; ++i) {\n      bindings[i].apply(accuIndex);\n    }\n\n    return this;\n  },\n  // return this mixer's root target object\n  getRoot: function () {\n    return this._root;\n  },\n  // free all resources specific to a particular clip\n  uncacheClip: function (clip) {\n    var actions = this._actions,\n        clipUuid = clip.uuid,\n        actionsByClip = this._actionsByClip,\n        actionsForClip = actionsByClip[clipUuid];\n\n    if (actionsForClip !== undefined) {\n      // note: just calling _removeInactiveAction would mess up the\n      // iteration state and also require updating the state we can\n      // just throw away\n      var actionsToRemove = actionsForClip.knownActions;\n\n      for (var i = 0, n = actionsToRemove.length; i !== n; ++i) {\n        var action = actionsToRemove[i];\n\n        this._deactivateAction(action);\n\n        var cacheIndex = action._cacheIndex,\n            lastInactiveAction = actions[actions.length - 1];\n        action._cacheIndex = null;\n        action._byClipCacheIndex = null;\n        lastInactiveAction._cacheIndex = cacheIndex;\n        actions[cacheIndex] = lastInactiveAction;\n        actions.pop();\n\n        this._removeInactiveBindingsForAction(action);\n      }\n\n      delete actionsByClip[clipUuid];\n    }\n  },\n  // free all resources specific to a particular root target object\n  uncacheRoot: function (root) {\n    var rootUuid = root.uuid,\n        actionsByClip = this._actionsByClip;\n\n    for (var clipUuid in actionsByClip) {\n      var actionByRoot = actionsByClip[clipUuid].actionByRoot,\n          action = actionByRoot[rootUuid];\n\n      if (action !== undefined) {\n        this._deactivateAction(action);\n\n        this._removeInactiveAction(action);\n      }\n    }\n\n    var bindingsByRoot = this._bindingsByRootAndName,\n        bindingByName = bindingsByRoot[rootUuid];\n\n    if (bindingByName !== undefined) {\n      for (var trackName in bindingByName) {\n        var binding = bindingByName[trackName];\n        binding.restoreOriginalState();\n\n        this._removeInactiveBinding(binding);\n      }\n    }\n  },\n  // remove a targeted clip from the cache\n  uncacheAction: function (clip, optionalRoot) {\n    var action = this.existingAction(clip, optionalRoot);\n\n    if (action !== null) {\n      this._deactivateAction(action);\n\n      this._removeInactiveAction(action);\n    }\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform(value) {\n  if (typeof value === 'string') {\n    console.warn('THREE.Uniform: Type parameter is no longer needed.');\n    value = arguments[1];\n  }\n\n  this.value = value;\n}\n\nUniform.prototype.clone = function () {\n  return new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\n};\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\n\nfunction InstancedBufferGeometry() {\n  BufferGeometry.call(this);\n  this.type = 'InstancedBufferGeometry';\n  this.maxInstancedCount = undefined;\n}\n\nInstancedBufferGeometry.prototype = Object.assign(Object.create(BufferGeometry.prototype), {\n  constructor: InstancedBufferGeometry,\n  isInstancedBufferGeometry: true,\n  addGroup: function (start, count, materialIndex) {\n    this.groups.push({\n      start: start,\n      count: count,\n      materialIndex: materialIndex\n    });\n  },\n  copy: function (source) {\n    var index = source.index;\n\n    if (index !== null) {\n      this.setIndex(index.clone());\n    }\n\n    var attributes = source.attributes;\n\n    for (var name in attributes) {\n      var attribute = attributes[name];\n      this.addAttribute(name, attribute.clone());\n    }\n\n    var groups = source.groups;\n\n    for (var i = 0, l = groups.length; i < l; i++) {\n      var group = groups[i];\n      this.addGroup(group.start, group.count, group.materialIndex);\n    }\n\n    return this;\n  }\n});\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute(interleavedBuffer, itemSize, offset, normalized) {\n  this.uuid = _Math.generateUUID();\n  this.data = interleavedBuffer;\n  this.itemSize = itemSize;\n  this.offset = offset;\n  this.normalized = normalized === true;\n}\n\nObject.defineProperties(InterleavedBufferAttribute.prototype, {\n  count: {\n    get: function () {\n      return this.data.count;\n    }\n  },\n  array: {\n    get: function () {\n      return this.data.array;\n    }\n  }\n});\nObject.assign(InterleavedBufferAttribute.prototype, {\n  isInterleavedBufferAttribute: true,\n  setX: function (index, x) {\n    this.data.array[index * this.data.stride + this.offset] = x;\n    return this;\n  },\n  setY: function (index, y) {\n    this.data.array[index * this.data.stride + this.offset + 1] = y;\n    return this;\n  },\n  setZ: function (index, z) {\n    this.data.array[index * this.data.stride + this.offset + 2] = z;\n    return this;\n  },\n  setW: function (index, w) {\n    this.data.array[index * this.data.stride + this.offset + 3] = w;\n    return this;\n  },\n  getX: function (index) {\n    return this.data.array[index * this.data.stride + this.offset];\n  },\n  getY: function (index) {\n    return this.data.array[index * this.data.stride + this.offset + 1];\n  },\n  getZ: function (index) {\n    return this.data.array[index * this.data.stride + this.offset + 2];\n  },\n  getW: function (index) {\n    return this.data.array[index * this.data.stride + this.offset + 3];\n  },\n  setXY: function (index, x, y) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    return this;\n  },\n  setXYZ: function (index, x, y, z) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    return this;\n  },\n  setXYZW: function (index, x, y, z, w) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    this.data.array[index + 3] = w;\n    return this;\n  }\n});\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer(array, stride) {\n  this.uuid = _Math.generateUUID();\n  this.array = array;\n  this.stride = stride;\n  this.count = array !== undefined ? array.length / stride : 0;\n  this.dynamic = false;\n  this.updateRange = {\n    offset: 0,\n    count: -1\n  };\n\n  this.onUploadCallback = function () {};\n\n  this.version = 0;\n}\n\nObject.defineProperty(InterleavedBuffer.prototype, 'needsUpdate', {\n  set: function (value) {\n    if (value === true) this.version++;\n  }\n});\nObject.assign(InterleavedBuffer.prototype, {\n  isInterleavedBuffer: true,\n  setArray: function (array) {\n    if (Array.isArray(array)) {\n      throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n    }\n\n    this.count = array !== undefined ? array.length / this.stride : 0;\n    this.array = array;\n  },\n  setDynamic: function (value) {\n    this.dynamic = value;\n    return this;\n  },\n  copy: function (source) {\n    this.array = new source.array.constructor(source.array);\n    this.count = source.count;\n    this.stride = source.stride;\n    this.dynamic = source.dynamic;\n    return this;\n  },\n  copyAt: function (index1, attribute, index2) {\n    index1 *= this.stride;\n    index2 *= attribute.stride;\n\n    for (var i = 0, l = this.stride; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n\n    return this;\n  },\n  set: function (value, offset) {\n    if (offset === undefined) offset = 0;\n    this.array.set(value, offset);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  onUpload: function (callback) {\n    this.onUploadCallback = callback;\n    return this;\n  }\n});\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer(array, stride, meshPerAttribute) {\n  InterleavedBuffer.call(this, array, stride);\n  this.meshPerAttribute = meshPerAttribute || 1;\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign(Object.create(InterleavedBuffer.prototype), {\n  constructor: InstancedInterleavedBuffer,\n  isInstancedInterleavedBuffer: true,\n  copy: function (source) {\n    InterleavedBuffer.prototype.copy.call(this, source);\n    this.meshPerAttribute = source.meshPerAttribute;\n    return this;\n  }\n});\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute(array, itemSize, meshPerAttribute) {\n  BufferAttribute.call(this, array, itemSize);\n  this.meshPerAttribute = meshPerAttribute || 1;\n}\n\nInstancedBufferAttribute.prototype = Object.assign(Object.create(BufferAttribute.prototype), {\n  constructor: InstancedBufferAttribute,\n  isInstancedBufferAttribute: true,\n  copy: function (source) {\n    BufferAttribute.prototype.copy.call(this, source);\n    this.meshPerAttribute = source.meshPerAttribute;\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster(origin, direction, near, far) {\n  this.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n  this.near = near || 0;\n  this.far = far || Infinity;\n  this.params = {\n    Mesh: {},\n    Line: {},\n    LOD: {},\n    Points: {\n      threshold: 1\n    },\n    Sprite: {}\n  };\n  Object.defineProperties(this.params, {\n    PointCloud: {\n      get: function () {\n        console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.');\n        return this.Points;\n      }\n    }\n  });\n}\n\nfunction ascSort(a, b) {\n  return a.distance - b.distance;\n}\n\nfunction intersectObject(object, raycaster, intersects, recursive) {\n  if (object.visible === false) return;\n  object.raycast(raycaster, intersects);\n\n  if (recursive === true) {\n    var children = object.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      intersectObject(children[i], raycaster, intersects, true);\n    }\n  }\n}\n\nObject.assign(Raycaster.prototype, {\n  linePrecision: 1,\n  set: function (origin, direction) {\n    // direction is assumed to be normalized (for accurate distance calculations)\n    this.ray.set(origin, direction);\n  },\n  setFromCamera: function (coords, camera) {\n    if (camera && camera.isPerspectiveCamera) {\n      this.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n      this.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n    } else if (camera && camera.isOrthographicCamera) {\n      this.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n\n      this.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n    } else {\n      console.error('THREE.Raycaster: Unsupported camera type.');\n    }\n  },\n  intersectObject: function (object, recursive) {\n    var intersects = [];\n    intersectObject(object, this, intersects, recursive);\n    intersects.sort(ascSort);\n    return intersects;\n  },\n  intersectObjects: function (objects, recursive) {\n    var intersects = [];\n\n    if (Array.isArray(objects) === false) {\n      console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.');\n      return intersects;\n    }\n\n    for (var i = 0, l = objects.length; i < l; i++) {\n      intersectObject(objects[i], this, intersects, recursive);\n    }\n\n    intersects.sort(ascSort);\n    return intersects;\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock(autoStart) {\n  this.autoStart = autoStart !== undefined ? autoStart : true;\n  this.startTime = 0;\n  this.oldTime = 0;\n  this.elapsedTime = 0;\n  this.running = false;\n}\n\nObject.assign(Clock.prototype, {\n  start: function () {\n    this.startTime = (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\n\n    this.oldTime = this.startTime;\n    this.elapsedTime = 0;\n    this.running = true;\n  },\n  stop: function () {\n    this.getElapsedTime();\n    this.running = false;\n    this.autoStart = false;\n  },\n  getElapsedTime: function () {\n    this.getDelta();\n    return this.elapsedTime;\n  },\n  getDelta: function () {\n    var diff = 0;\n\n    if (this.autoStart && !this.running) {\n      this.start();\n      return 0;\n    }\n\n    if (this.running) {\n      var newTime = (typeof performance === 'undefined' ? Date : performance).now();\n      diff = (newTime - this.oldTime) / 1000;\n      this.oldTime = newTime;\n      this.elapsedTime += diff;\n    }\n\n    return diff;\n  }\n});\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The poles (phi) are at the positive and negative y axis.\n * The equator starts at positive z.\n */\n\nfunction Spherical(radius, phi, theta) {\n  this.radius = radius !== undefined ? radius : 1.0;\n  this.phi = phi !== undefined ? phi : 0; // up / down towards top and bottom pole\n\n  this.theta = theta !== undefined ? theta : 0; // around the equator of the sphere\n\n  return this;\n}\n\nObject.assign(Spherical.prototype, {\n  set: function (radius, phi, theta) {\n    this.radius = radius;\n    this.phi = phi;\n    this.theta = theta;\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (other) {\n    this.radius = other.radius;\n    this.phi = other.phi;\n    this.theta = other.theta;\n    return this;\n  },\n  // restrict phi to be betwee EPS and PI-EPS\n  makeSafe: function () {\n    var EPS = 0.000001;\n    this.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n    return this;\n  },\n  setFromVector3: function (vec3) {\n    this.radius = vec3.length();\n\n    if (this.radius === 0) {\n      this.theta = 0;\n      this.phi = 0;\n    } else {\n      this.theta = Math.atan2(vec3.x, vec3.z); // equator angle around y-up axis\n\n      this.phi = Math.acos(_Math.clamp(vec3.y / this.radius, -1, 1)); // polar angle\n    }\n\n    return this;\n  }\n});\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical(radius, theta, y) {\n  this.radius = radius !== undefined ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\n  this.theta = theta !== undefined ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\n  this.y = y !== undefined ? y : 0; // height above the x-z plane\n\n  return this;\n}\n\nObject.assign(Cylindrical.prototype, {\n  set: function (radius, theta, y) {\n    this.radius = radius;\n    this.theta = theta;\n    this.y = y;\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (other) {\n    this.radius = other.radius;\n    this.theta = other.theta;\n    this.y = other.y;\n    return this;\n  },\n  setFromVector3: function (vec3) {\n    this.radius = Math.sqrt(vec3.x * vec3.x + vec3.z * vec3.z);\n    this.theta = Math.atan2(vec3.x, vec3.z);\n    this.y = vec3.y;\n    return this;\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject(material) {\n  Object3D.call(this);\n  this.material = material;\n\n  this.render = function (renderCallback) {};\n}\n\nImmediateRenderObject.prototype = Object.create(Object3D.prototype);\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper(object, size, hex, linewidth) {\n  this.object = object;\n  this.size = size !== undefined ? size : 1;\n  var color = hex !== undefined ? hex : 0xff0000;\n  var width = linewidth !== undefined ? linewidth : 1; //\n\n  var nNormals = 0;\n  var objGeometry = this.object.geometry;\n\n  if (objGeometry && objGeometry.isGeometry) {\n    nNormals = objGeometry.faces.length * 3;\n  } else if (objGeometry && objGeometry.isBufferGeometry) {\n    nNormals = objGeometry.attributes.normal.count;\n  } //\n\n\n  var geometry = new BufferGeometry();\n  var positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n  geometry.addAttribute('position', positions);\n  LineSegments.call(this, geometry, new LineBasicMaterial({\n    color: color,\n    linewidth: width\n  })); //\n\n  this.matrixAutoUpdate = false;\n  this.update();\n}\n\nVertexNormalsHelper.prototype = Object.create(LineSegments.prototype);\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = function () {\n  var v1 = new Vector3();\n  var v2 = new Vector3();\n  var normalMatrix = new Matrix3();\n  return function update() {\n    var keys = ['a', 'b', 'c'];\n    this.object.updateMatrixWorld(true);\n    normalMatrix.getNormalMatrix(this.object.matrixWorld);\n    var matrixWorld = this.object.matrixWorld;\n    var position = this.geometry.attributes.position; //\n\n    var objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n      var vertices = objGeometry.vertices;\n      var faces = objGeometry.faces;\n      var idx = 0;\n\n      for (var i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n\n        for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n          var vertex = vertices[face[keys[j]]];\n          var normal = face.vertexNormals[j];\n          v1.copy(vertex).applyMatrix4(matrixWorld);\n          v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n          position.setXYZ(idx, v1.x, v1.y, v1.z);\n          idx = idx + 1;\n          position.setXYZ(idx, v2.x, v2.y, v2.z);\n          idx = idx + 1;\n        }\n      }\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n      var objPos = objGeometry.attributes.position;\n      var objNorm = objGeometry.attributes.normal;\n      var idx = 0; // for simplicity, ignore index and drawcalls, and render every normal\n\n      for (var j = 0, jl = objPos.count; j < jl; j++) {\n        v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n        v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n        v2.applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n        position.setXYZ(idx, v1.x, v1.y, v1.z);\n        idx = idx + 1;\n        position.setXYZ(idx, v2.x, v2.y, v2.z);\n        idx = idx + 1;\n      }\n    }\n\n    position.needsUpdate = true;\n  };\n}();\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\n\nfunction SpotLightHelper(light, color) {\n  Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.color = color;\n  var geometry = new BufferGeometry();\n  var positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n  for (var i = 0, j = 1, l = 32; i < l; i++, j++) {\n    var p1 = i / l * Math.PI * 2;\n    var p2 = j / l * Math.PI * 2;\n    positions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n  }\n\n  geometry.addAttribute('position', new Float32BufferAttribute(positions, 3));\n  var material = new LineBasicMaterial({\n    fog: false\n  });\n  this.cone = new LineSegments(geometry, material);\n  this.add(this.cone);\n  this.update();\n}\n\nSpotLightHelper.prototype = Object.create(Object3D.prototype);\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n  this.cone.geometry.dispose();\n  this.cone.material.dispose();\n};\n\nSpotLightHelper.prototype.update = function () {\n  var vector = new Vector3();\n  var vector2 = new Vector3();\n  return function update() {\n    this.light.updateMatrixWorld();\n    var coneLength = this.light.distance ? this.light.distance : 1000;\n    var coneWidth = coneLength * Math.tan(this.light.angle);\n    this.cone.scale.set(coneWidth, coneWidth, coneLength);\n    vector.setFromMatrixPosition(this.light.matrixWorld);\n    vector2.setFromMatrixPosition(this.light.target.matrixWorld);\n    this.cone.lookAt(vector2.sub(vector));\n\n    if (this.color !== undefined) {\n      this.cone.material.color.set(this.color);\n    } else {\n      this.cone.material.color.copy(this.light.color);\n    }\n  };\n}();\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n\nfunction getBoneList(object) {\n  var boneList = [];\n\n  if (object && object.isBone) {\n    boneList.push(object);\n  }\n\n  for (var i = 0; i < object.children.length; i++) {\n    boneList.push.apply(boneList, getBoneList(object.children[i]));\n  }\n\n  return boneList;\n}\n\nfunction SkeletonHelper(object) {\n  var bones = getBoneList(object);\n  var geometry = new BufferGeometry();\n  var vertices = [];\n  var colors = [];\n  var color1 = new Color(0, 0, 1);\n  var color2 = new Color(0, 1, 0);\n\n  for (var i = 0; i < bones.length; i++) {\n    var bone = bones[i];\n\n    if (bone.parent && bone.parent.isBone) {\n      vertices.push(0, 0, 0);\n      vertices.push(0, 0, 0);\n      colors.push(color1.r, color1.g, color1.b);\n      colors.push(color2.r, color2.g, color2.b);\n    }\n  }\n\n  geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n  var material = new LineBasicMaterial({\n    vertexColors: VertexColors,\n    depthTest: false,\n    depthWrite: false,\n    transparent: true\n  });\n  LineSegments.call(this, geometry, material);\n  this.root = object;\n  this.bones = bones;\n  this.matrix = object.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.onBeforeRender();\n}\n\nSkeletonHelper.prototype = Object.create(LineSegments.prototype);\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.onBeforeRender = function () {\n  var vector = new Vector3();\n  var boneMatrix = new Matrix4();\n  var matrixWorldInv = new Matrix4();\n  return function onBeforeRender() {\n    var bones = this.bones;\n    var geometry = this.geometry;\n    var position = geometry.getAttribute('position');\n    matrixWorldInv.getInverse(this.root.matrixWorld);\n\n    for (var i = 0, j = 0; i < bones.length; i++) {\n      var bone = bones[i];\n\n      if (bone.parent && bone.parent.isBone) {\n        boneMatrix.multiplyMatrices(matrixWorldInv, bone.matrixWorld);\n        vector.setFromMatrixPosition(boneMatrix);\n        position.setXYZ(j, vector.x, vector.y, vector.z);\n        boneMatrix.multiplyMatrices(matrixWorldInv, bone.parent.matrixWorld);\n        vector.setFromMatrixPosition(boneMatrix);\n        position.setXYZ(j + 1, vector.x, vector.y, vector.z);\n        j += 2;\n      }\n    }\n\n    geometry.getAttribute('position').needsUpdate = true;\n  };\n}();\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLightHelper(light, sphereSize, color) {\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.color = color;\n  var geometry = new SphereBufferGeometry(sphereSize, 4, 2);\n  var material = new MeshBasicMaterial({\n    wireframe: true,\n    fog: false\n  });\n  Mesh.call(this, geometry, material);\n  this.matrix = this.light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.update();\n  /*\n  var distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n  var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n  \tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n  this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n  \tvar d = light.distance;\n  \tif ( d === 0.0 ) {\n  \t\tthis.lightDistance.visible = false;\n  \t} else {\n  \t\tthis.lightDistance.scale.set( d, d, d );\n  \t}\n  \tthis.add( this.lightDistance );\n  */\n}\n\nPointLightHelper.prototype = Object.create(Mesh.prototype);\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n  this.geometry.dispose();\n  this.material.dispose();\n};\n\nPointLightHelper.prototype.update = function () {\n  if (this.color !== undefined) {\n    this.material.color.set(this.color);\n  } else {\n    this.material.color.copy(this.light.color);\n  }\n  /*\n  var d = this.light.distance;\n  \tif ( d === 0.0 ) {\n  \t\tthis.lightDistance.visible = false;\n  \t} else {\n  \t\tthis.lightDistance.visible = true;\n  \tthis.lightDistance.scale.set( d, d, d );\n  \t}\n  */\n\n};\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n */\n\n\nfunction RectAreaLightHelper(light, color) {\n  Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.color = color;\n  var material = new LineBasicMaterial({\n    fog: false\n  });\n  var geometry = new BufferGeometry();\n  geometry.addAttribute('position', new BufferAttribute(new Float32Array(5 * 3), 3));\n  this.line = new Line(geometry, material);\n  this.add(this.line);\n  this.update();\n}\n\nRectAreaLightHelper.prototype = Object.create(Object3D.prototype);\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.dispose = function () {\n  this.children[0].geometry.dispose();\n  this.children[0].material.dispose();\n};\n\nRectAreaLightHelper.prototype.update = function () {\n  // calculate new dimensions of the helper\n  var hx = this.light.width * 0.5;\n  var hy = this.light.height * 0.5;\n  var position = this.line.geometry.attributes.position;\n  var array = position.array; // update vertices\n\n  array[0] = hx;\n  array[1] = -hy;\n  array[2] = 0;\n  array[3] = hx;\n  array[4] = hy;\n  array[5] = 0;\n  array[6] = -hx;\n  array[7] = hy;\n  array[8] = 0;\n  array[9] = -hx;\n  array[10] = -hy;\n  array[11] = 0;\n  array[12] = hx;\n  array[13] = -hy;\n  array[14] = 0;\n  position.needsUpdate = true;\n\n  if (this.color !== undefined) {\n    this.line.material.color.set(this.color);\n  } else {\n    this.line.material.color.copy(this.light.color);\n  }\n};\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n\nfunction HemisphereLightHelper(light, size, color) {\n  Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.color = color;\n  var geometry = new OctahedronBufferGeometry(size);\n  geometry.rotateY(Math.PI * 0.5);\n  this.material = new MeshBasicMaterial({\n    wireframe: true,\n    fog: false\n  });\n  if (this.color === undefined) this.material.vertexColors = VertexColors;\n  var position = geometry.getAttribute('position');\n  var colors = new Float32Array(position.count * 3);\n  geometry.addAttribute('color', new BufferAttribute(colors, 3));\n  this.add(new Mesh(geometry, this.material));\n  this.update();\n}\n\nHemisphereLightHelper.prototype = Object.create(Object3D.prototype);\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n  this.children[0].geometry.dispose();\n  this.children[0].material.dispose();\n};\n\nHemisphereLightHelper.prototype.update = function () {\n  var vector = new Vector3();\n  var color1 = new Color();\n  var color2 = new Color();\n  return function update() {\n    var mesh = this.children[0];\n\n    if (this.color !== undefined) {\n      this.material.color.set(this.color);\n    } else {\n      var colors = mesh.geometry.getAttribute('color');\n      color1.copy(this.light.color);\n      color2.copy(this.light.groundColor);\n\n      for (var i = 0, l = colors.count; i < l; i++) {\n        var color = i < l / 2 ? color1 : color2;\n        colors.setXYZ(i, color.r, color.g, color.b);\n      }\n\n      colors.needsUpdate = true;\n    }\n\n    mesh.lookAt(vector.setFromMatrixPosition(this.light.matrixWorld).negate());\n  };\n}();\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction GridHelper(size, divisions, color1, color2) {\n  size = size || 10;\n  divisions = divisions || 10;\n  color1 = new Color(color1 !== undefined ? color1 : 0x444444);\n  color2 = new Color(color2 !== undefined ? color2 : 0x888888);\n  var center = divisions / 2;\n  var step = size / divisions;\n  var halfSize = size / 2;\n  var vertices = [],\n      colors = [];\n\n  for (var i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n    vertices.push(-halfSize, 0, k, halfSize, 0, k);\n    vertices.push(k, 0, -halfSize, k, 0, halfSize);\n    var color = i === center ? color1 : color2;\n    color.toArray(colors, j);\n    j += 3;\n    color.toArray(colors, j);\n    j += 3;\n    color.toArray(colors, j);\n    j += 3;\n    color.toArray(colors, j);\n    j += 3;\n  }\n\n  var geometry = new BufferGeometry();\n  geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n  var material = new LineBasicMaterial({\n    vertexColors: VertexColors\n  });\n  LineSegments.call(this, geometry, material);\n}\n\nGridHelper.prototype = Object.create(LineSegments.prototype);\nGridHelper.prototype.constructor = GridHelper;\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper(radius, radials, circles, divisions, color1, color2) {\n  radius = radius || 10;\n  radials = radials || 16;\n  circles = circles || 8;\n  divisions = divisions || 64;\n  color1 = new Color(color1 !== undefined ? color1 : 0x444444);\n  color2 = new Color(color2 !== undefined ? color2 : 0x888888);\n  var vertices = [];\n  var colors = [];\n  var x, z;\n  var v, i, j, r, color; // create the radials\n\n  for (i = 0; i <= radials; i++) {\n    v = i / radials * (Math.PI * 2);\n    x = Math.sin(v) * radius;\n    z = Math.cos(v) * radius;\n    vertices.push(0, 0, 0);\n    vertices.push(x, 0, z);\n    color = i & 1 ? color1 : color2;\n    colors.push(color.r, color.g, color.b);\n    colors.push(color.r, color.g, color.b);\n  } // create the circles\n\n\n  for (i = 0; i <= circles; i++) {\n    color = i & 1 ? color1 : color2;\n    r = radius - radius / circles * i;\n\n    for (j = 0; j < divisions; j++) {\n      // first vertex\n      v = j / divisions * (Math.PI * 2);\n      x = Math.sin(v) * r;\n      z = Math.cos(v) * r;\n      vertices.push(x, 0, z);\n      colors.push(color.r, color.g, color.b); // second vertex\n\n      v = (j + 1) / divisions * (Math.PI * 2);\n      x = Math.sin(v) * r;\n      z = Math.cos(v) * r;\n      vertices.push(x, 0, z);\n      colors.push(color.r, color.g, color.b);\n    }\n  }\n\n  var geometry = new BufferGeometry();\n  geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n  var material = new LineBasicMaterial({\n    vertexColors: VertexColors\n  });\n  LineSegments.call(this, geometry, material);\n}\n\nPolarGridHelper.prototype = Object.create(LineSegments.prototype);\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper(object, size, hex, linewidth) {\n  // FaceNormalsHelper only supports THREE.Geometry\n  this.object = object;\n  this.size = size !== undefined ? size : 1;\n  var color = hex !== undefined ? hex : 0xffff00;\n  var width = linewidth !== undefined ? linewidth : 1; //\n\n  var nNormals = 0;\n  var objGeometry = this.object.geometry;\n\n  if (objGeometry && objGeometry.isGeometry) {\n    nNormals = objGeometry.faces.length;\n  } else {\n    console.warn('THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.');\n  } //\n\n\n  var geometry = new BufferGeometry();\n  var positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n  geometry.addAttribute('position', positions);\n  LineSegments.call(this, geometry, new LineBasicMaterial({\n    color: color,\n    linewidth: width\n  })); //\n\n  this.matrixAutoUpdate = false;\n  this.update();\n}\n\nFaceNormalsHelper.prototype = Object.create(LineSegments.prototype);\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = function () {\n  var v1 = new Vector3();\n  var v2 = new Vector3();\n  var normalMatrix = new Matrix3();\n  return function update() {\n    this.object.updateMatrixWorld(true);\n    normalMatrix.getNormalMatrix(this.object.matrixWorld);\n    var matrixWorld = this.object.matrixWorld;\n    var position = this.geometry.attributes.position; //\n\n    var objGeometry = this.object.geometry;\n    var vertices = objGeometry.vertices;\n    var faces = objGeometry.faces;\n    var idx = 0;\n\n    for (var i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n      var normal = face.normal;\n      v1.copy(vertices[face.a]).add(vertices[face.b]).add(vertices[face.c]).divideScalar(3).applyMatrix4(matrixWorld);\n      v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n      position.setXYZ(idx, v1.x, v1.y, v1.z);\n      idx = idx + 1;\n      position.setXYZ(idx, v2.x, v2.y, v2.z);\n      idx = idx + 1;\n    }\n\n    position.needsUpdate = true;\n  };\n}();\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\n\nfunction DirectionalLightHelper(light, size, color) {\n  Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.color = color;\n  if (size === undefined) size = 1;\n  var geometry = new BufferGeometry();\n  geometry.addAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n  var material = new LineBasicMaterial({\n    fog: false\n  });\n  this.lightPlane = new Line(geometry, material);\n  this.add(this.lightPlane);\n  geometry = new BufferGeometry();\n  geometry.addAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n  this.targetLine = new Line(geometry, material);\n  this.add(this.targetLine);\n  this.update();\n}\n\nDirectionalLightHelper.prototype = Object.create(Object3D.prototype);\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n  this.lightPlane.geometry.dispose();\n  this.lightPlane.material.dispose();\n  this.targetLine.geometry.dispose();\n  this.targetLine.material.dispose();\n};\n\nDirectionalLightHelper.prototype.update = function () {\n  var v1 = new Vector3();\n  var v2 = new Vector3();\n  var v3 = new Vector3();\n  return function update() {\n    v1.setFromMatrixPosition(this.light.matrixWorld);\n    v2.setFromMatrixPosition(this.light.target.matrixWorld);\n    v3.subVectors(v2, v1);\n    this.lightPlane.lookAt(v3);\n\n    if (this.color !== undefined) {\n      this.lightPlane.material.color.set(this.color);\n      this.targetLine.material.color.set(this.color);\n    } else {\n      this.lightPlane.material.color.copy(this.light.color);\n      this.targetLine.material.color.copy(this.light.color);\n    }\n\n    this.targetLine.lookAt(v3);\n    this.targetLine.scale.z = v3.length();\n  };\n}();\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\n\nfunction CameraHelper(camera) {\n  var geometry = new BufferGeometry();\n  var material = new LineBasicMaterial({\n    color: 0xffffff,\n    vertexColors: FaceColors\n  });\n  var vertices = [];\n  var colors = [];\n  var pointMap = {}; // colors\n\n  var colorFrustum = new Color(0xffaa00);\n  var colorCone = new Color(0xff0000);\n  var colorUp = new Color(0x00aaff);\n  var colorTarget = new Color(0xffffff);\n  var colorCross = new Color(0x333333); // near\n\n  addLine(\"n1\", \"n2\", colorFrustum);\n  addLine(\"n2\", \"n4\", colorFrustum);\n  addLine(\"n4\", \"n3\", colorFrustum);\n  addLine(\"n3\", \"n1\", colorFrustum); // far\n\n  addLine(\"f1\", \"f2\", colorFrustum);\n  addLine(\"f2\", \"f4\", colorFrustum);\n  addLine(\"f4\", \"f3\", colorFrustum);\n  addLine(\"f3\", \"f1\", colorFrustum); // sides\n\n  addLine(\"n1\", \"f1\", colorFrustum);\n  addLine(\"n2\", \"f2\", colorFrustum);\n  addLine(\"n3\", \"f3\", colorFrustum);\n  addLine(\"n4\", \"f4\", colorFrustum); // cone\n\n  addLine(\"p\", \"n1\", colorCone);\n  addLine(\"p\", \"n2\", colorCone);\n  addLine(\"p\", \"n3\", colorCone);\n  addLine(\"p\", \"n4\", colorCone); // up\n\n  addLine(\"u1\", \"u2\", colorUp);\n  addLine(\"u2\", \"u3\", colorUp);\n  addLine(\"u3\", \"u1\", colorUp); // target\n\n  addLine(\"c\", \"t\", colorTarget);\n  addLine(\"p\", \"c\", colorCross); // cross\n\n  addLine(\"cn1\", \"cn2\", colorCross);\n  addLine(\"cn3\", \"cn4\", colorCross);\n  addLine(\"cf1\", \"cf2\", colorCross);\n  addLine(\"cf3\", \"cf4\", colorCross);\n\n  function addLine(a, b, color) {\n    addPoint(a, color);\n    addPoint(b, color);\n  }\n\n  function addPoint(id, color) {\n    vertices.push(0, 0, 0);\n    colors.push(color.r, color.g, color.b);\n\n    if (pointMap[id] === undefined) {\n      pointMap[id] = [];\n    }\n\n    pointMap[id].push(vertices.length / 3 - 1);\n  }\n\n  geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n  LineSegments.call(this, geometry, material);\n  this.camera = camera;\n  if (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\n  this.matrix = camera.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.pointMap = pointMap;\n  this.update();\n}\n\nCameraHelper.prototype = Object.create(LineSegments.prototype);\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n  var geometry, pointMap;\n  var vector = new Vector3();\n  var camera = new Camera();\n\n  function setPoint(point, x, y, z) {\n    vector.set(x, y, z).unproject(camera);\n    var points = pointMap[point];\n\n    if (points !== undefined) {\n      var position = geometry.getAttribute('position');\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        position.setXYZ(points[i], vector.x, vector.y, vector.z);\n      }\n    }\n  }\n\n  return function update() {\n    geometry = this.geometry;\n    pointMap = this.pointMap;\n    var w = 1,\n        h = 1; // we need just camera projection matrix\n    // world matrix must be identity\n\n    camera.projectionMatrix.copy(this.camera.projectionMatrix); // center / target\n\n    setPoint(\"c\", 0, 0, -1);\n    setPoint(\"t\", 0, 0, 1); // near\n\n    setPoint(\"n1\", -w, -h, -1);\n    setPoint(\"n2\", w, -h, -1);\n    setPoint(\"n3\", -w, h, -1);\n    setPoint(\"n4\", w, h, -1); // far\n\n    setPoint(\"f1\", -w, -h, 1);\n    setPoint(\"f2\", w, -h, 1);\n    setPoint(\"f3\", -w, h, 1);\n    setPoint(\"f4\", w, h, 1); // up\n\n    setPoint(\"u1\", w * 0.7, h * 1.1, -1);\n    setPoint(\"u2\", -w * 0.7, h * 1.1, -1);\n    setPoint(\"u3\", 0, h * 2, -1); // cross\n\n    setPoint(\"cf1\", -w, 0, 1);\n    setPoint(\"cf2\", w, 0, 1);\n    setPoint(\"cf3\", 0, -h, 1);\n    setPoint(\"cf4\", 0, h, 1);\n    setPoint(\"cn1\", -w, 0, -1);\n    setPoint(\"cn2\", w, 0, -1);\n    setPoint(\"cn3\", 0, -h, -1);\n    setPoint(\"cn4\", 0, h, -1);\n    geometry.getAttribute('position').needsUpdate = true;\n  };\n}();\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\n\nfunction BoxHelper(object, color) {\n  this.object = object;\n  if (color === undefined) color = 0xffff00;\n  var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n  var positions = new Float32Array(8 * 3);\n  var geometry = new BufferGeometry();\n  geometry.setIndex(new BufferAttribute(indices, 1));\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\n  LineSegments.call(this, geometry, new LineBasicMaterial({\n    color: color\n  }));\n  this.matrixAutoUpdate = false;\n  this.update();\n}\n\nBoxHelper.prototype = Object.create(LineSegments.prototype);\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = function () {\n  var box = new Box3();\n  return function update(object) {\n    if (object !== undefined) {\n      console.warn('THREE.BoxHelper: .update() has no longer arguments.');\n    }\n\n    if (this.object !== undefined) {\n      box.setFromObject(this.object);\n    }\n\n    if (box.isEmpty()) return;\n    var min = box.min;\n    var max = box.max;\n    /*\n      5____4\n    1/___0/|\n    | 6__|_7\n    2/___3/\n    \t0: max.x, max.y, max.z\n    1: min.x, max.y, max.z\n    2: min.x, min.y, max.z\n    3: max.x, min.y, max.z\n    4: max.x, max.y, min.z\n    5: min.x, max.y, min.z\n    6: min.x, min.y, min.z\n    7: max.x, min.y, min.z\n    */\n\n    var position = this.geometry.attributes.position;\n    var array = position.array;\n    array[0] = max.x;\n    array[1] = max.y;\n    array[2] = max.z;\n    array[3] = min.x;\n    array[4] = max.y;\n    array[5] = max.z;\n    array[6] = min.x;\n    array[7] = min.y;\n    array[8] = max.z;\n    array[9] = max.x;\n    array[10] = min.y;\n    array[11] = max.z;\n    array[12] = max.x;\n    array[13] = max.y;\n    array[14] = min.z;\n    array[15] = min.x;\n    array[16] = max.y;\n    array[17] = min.z;\n    array[18] = min.x;\n    array[19] = min.y;\n    array[20] = min.z;\n    array[21] = max.x;\n    array[22] = min.y;\n    array[23] = min.z;\n    position.needsUpdate = true;\n    this.geometry.computeBoundingSphere();\n  };\n}();\n\nBoxHelper.prototype.setFromObject = function (object) {\n  this.object = object;\n  this.update();\n  return this;\n};\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\n\nfunction Box3Helper(box, hex) {\n  this.type = 'Box3Helper';\n  this.box = box;\n  var color = hex !== undefined ? hex : 0xffff00;\n  var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n  var positions = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1];\n  var geometry = new BufferGeometry();\n  geometry.setIndex(new BufferAttribute(indices, 1));\n  geometry.addAttribute('position', new Float32BufferAttribute(positions, 3));\n  LineSegments.call(this, geometry, new LineBasicMaterial({\n    color: color\n  }));\n  this.geometry.computeBoundingSphere();\n  this.onBeforeRender();\n}\n\nBox3Helper.prototype = Object.create(LineSegments.prototype);\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.onBeforeRender = function () {\n  var box = this.box;\n  if (box.isEmpty()) return;\n  box.getCenter(this.position);\n  box.getSize(this.scale);\n  this.scale.multiplyScalar(0.5);\n};\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\n\nfunction PlaneHelper(plane, size, hex) {\n  this.type = 'PlaneHelper';\n  this.plane = plane;\n  this.size = size === undefined ? 1 : size;\n  var color = hex !== undefined ? hex : 0xffff00;\n  var positions = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0];\n  var geometry = new BufferGeometry();\n  geometry.addAttribute('position', new Float32BufferAttribute(positions, 3));\n  geometry.computeBoundingSphere();\n  Line.call(this, geometry, new LineBasicMaterial({\n    color: color\n  })); //\n\n  var positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\n  var geometry2 = new BufferGeometry();\n  geometry2.addAttribute('position', new Float32BufferAttribute(positions2, 3));\n  geometry2.computeBoundingSphere();\n  this.add(new Mesh(geometry2, new MeshBasicMaterial({\n    color: color,\n    opacity: 0.2,\n    transparent: true,\n    depthWrite: false\n  }))); //\n\n  this.onBeforeRender();\n}\n\nPlaneHelper.prototype = Object.create(Line.prototype);\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.onBeforeRender = function () {\n  var scale = -this.plane.constant;\n  if (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\n\n  this.scale.set(0.5 * this.size, 0.5 * this.size, scale);\n  this.lookAt(this.plane.normal);\n  this.updateMatrixWorld();\n};\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\n\nvar lineGeometry;\nvar coneGeometry;\n\nfunction ArrowHelper(dir, origin, length, color, headLength, headWidth) {\n  // dir is assumed to be normalized\n  Object3D.call(this);\n  if (color === undefined) color = 0xffff00;\n  if (length === undefined) length = 1;\n  if (headLength === undefined) headLength = 0.2 * length;\n  if (headWidth === undefined) headWidth = 0.2 * headLength;\n\n  if (lineGeometry === undefined) {\n    lineGeometry = new BufferGeometry();\n    lineGeometry.addAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n    coneGeometry = new CylinderBufferGeometry(0, 0.5, 1, 5, 1);\n    coneGeometry.translate(0, -0.5, 0);\n  }\n\n  this.position.copy(origin);\n  this.line = new Line(lineGeometry, new LineBasicMaterial({\n    color: color\n  }));\n  this.line.matrixAutoUpdate = false;\n  this.add(this.line);\n  this.cone = new Mesh(coneGeometry, new MeshBasicMaterial({\n    color: color\n  }));\n  this.cone.matrixAutoUpdate = false;\n  this.add(this.cone);\n  this.setDirection(dir);\n  this.setLength(length, headLength, headWidth);\n}\n\nArrowHelper.prototype = Object.create(Object3D.prototype);\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = function () {\n  var axis = new Vector3();\n  var radians;\n  return function setDirection(dir) {\n    // dir is assumed to be normalized\n    if (dir.y > 0.99999) {\n      this.quaternion.set(0, 0, 0, 1);\n    } else if (dir.y < -0.99999) {\n      this.quaternion.set(1, 0, 0, 0);\n    } else {\n      axis.set(dir.z, 0, -dir.x).normalize();\n      radians = Math.acos(dir.y);\n      this.quaternion.setFromAxisAngle(axis, radians);\n    }\n  };\n}();\n\nArrowHelper.prototype.setLength = function (length, headLength, headWidth) {\n  if (headLength === undefined) headLength = 0.2 * length;\n  if (headWidth === undefined) headWidth = 0.2 * headLength;\n  this.line.scale.set(1, Math.max(0, length - headLength), 1);\n  this.line.updateMatrix();\n  this.cone.scale.set(headWidth, headLength, headWidth);\n  this.cone.position.y = length;\n  this.cone.updateMatrix();\n};\n\nArrowHelper.prototype.setColor = function (color) {\n  this.line.material.color.copy(color);\n  this.cone.material.color.copy(color);\n};\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction AxisHelper(size) {\n  size = size || 1;\n  var vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\n  var colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\n  var geometry = new BufferGeometry();\n  geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n  var material = new LineBasicMaterial({\n    vertexColors: VertexColors\n  });\n  LineSegments.call(this, geometry, material);\n}\n\nAxisHelper.prototype = Object.create(LineSegments.prototype);\nAxisHelper.prototype.constructor = AxisHelper;\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n  var c0 = 0,\n      c1 = 0,\n      c2 = 0,\n      c3 = 0;\n  /*\n   * Compute coefficients for a cubic polynomial\n   *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n   * such that\n   *   p(0) = x0, p(1) = x1\n   *  and\n   *   p'(0) = t0, p'(1) = t1.\n   */\n\n  function init(x0, x1, t0, t1) {\n    c0 = x0;\n    c1 = t0;\n    c2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n    c3 = 2 * x0 - 2 * x1 + t0 + t1;\n  }\n\n  return {\n    initCatmullRom: function (x0, x1, x2, x3, tension) {\n      init(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n    },\n    initNonuniformCatmullRom: function (x0, x1, x2, x3, dt0, dt1, dt2) {\n      // compute tangents when parameterized in [t1,t2]\n      var t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n      var t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n      t1 *= dt1;\n      t2 *= dt1;\n      init(x1, x2, t1, t2);\n    },\n    calc: function (t) {\n      var t2 = t * t;\n      var t3 = t2 * t;\n      return c0 + c1 * t + c2 * t2 + c3 * t3;\n    }\n  };\n} //\n\n\nvar tmp = new Vector3();\nvar px = new CubicPoly();\nvar py = new CubicPoly();\nvar pz = new CubicPoly();\n\nfunction CatmullRomCurve3(points) {\n  Curve.call(this);\n  if (points.length < 2) console.warn('THREE.CatmullRomCurve3: Points array needs at least two entries.');\n  this.points = points || [];\n  this.closed = false;\n}\n\nCatmullRomCurve3.prototype = Object.create(Curve.prototype);\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.getPoint = function (t) {\n  var points = this.points;\n  var l = points.length;\n  var point = (l - (this.closed ? 0 : 1)) * t;\n  var intPoint = Math.floor(point);\n  var weight = point - intPoint;\n\n  if (this.closed) {\n    intPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / points.length) + 1) * points.length;\n  } else if (weight === 0 && intPoint === l - 1) {\n    intPoint = l - 2;\n    weight = 1;\n  }\n\n  var p0, p1, p2, p3; // 4 points\n\n  if (this.closed || intPoint > 0) {\n    p0 = points[(intPoint - 1) % l];\n  } else {\n    // extrapolate first point\n    tmp.subVectors(points[0], points[1]).add(points[0]);\n    p0 = tmp;\n  }\n\n  p1 = points[intPoint % l];\n  p2 = points[(intPoint + 1) % l];\n\n  if (this.closed || intPoint + 2 < l) {\n    p3 = points[(intPoint + 2) % l];\n  } else {\n    // extrapolate last point\n    tmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n    p3 = tmp;\n  }\n\n  if (this.type === undefined || this.type === 'centripetal' || this.type === 'chordal') {\n    // init Centripetal / Chordal Catmull-Rom\n    var pow = this.type === 'chordal' ? 0.5 : 0.25;\n    var dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n    var dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n    var dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n    if (dt1 < 1e-4) dt1 = 1.0;\n    if (dt0 < 1e-4) dt0 = dt1;\n    if (dt2 < 1e-4) dt2 = dt1;\n    px.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n    py.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n    pz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n  } else if (this.type === 'catmullrom') {\n    var tension = this.tension !== undefined ? this.tension : 0.5;\n    px.initCatmullRom(p0.x, p1.x, p2.x, p3.x, tension);\n    py.initCatmullRom(p0.y, p1.y, p2.y, p3.y, tension);\n    pz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, tension);\n  }\n\n  return new Vector3(px.calc(weight), py.calc(weight), pz.calc(weight));\n};\n\nfunction CubicBezierCurve3(v0, v1, v2, v3) {\n  Curve.call(this);\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n  this.v3 = v3;\n}\n\nCubicBezierCurve3.prototype = Object.create(Curve.prototype);\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.getPoint = function (t) {\n  var v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2,\n      v3 = this.v3;\n  return new Vector3(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\n};\n\nfunction QuadraticBezierCurve3(v0, v1, v2) {\n  Curve.call(this);\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n}\n\nQuadraticBezierCurve3.prototype = Object.create(Curve.prototype);\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.getPoint = function (t) {\n  var v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2;\n  return new Vector3(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\n};\n\nfunction LineCurve3(v1, v2) {\n  Curve.call(this);\n  this.v1 = v1;\n  this.v2 = v2;\n}\n\nLineCurve3.prototype = Object.create(Curve.prototype);\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.getPoint = function (t) {\n  if (t === 1) {\n    return this.v2.clone();\n  }\n\n  var vector = new Vector3();\n  vector.subVectors(this.v2, this.v1); // diff\n\n  vector.multiplyScalar(t);\n  vector.add(this.v1);\n  return vector;\n};\n\nfunction ArcCurve(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n  EllipseCurve.call(this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n}\n\nArcCurve.prototype = Object.create(EllipseCurve.prototype);\nArcCurve.prototype.constructor = ArcCurve;\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar SceneUtils = {\n  createMultiMaterialObject: function (geometry, materials) {\n    var group = new Group();\n\n    for (var i = 0, l = materials.length; i < l; i++) {\n      group.add(new Mesh(geometry, materials[i]));\n    }\n\n    return group;\n  },\n  detach: function (child, parent, scene) {\n    child.applyMatrix(parent.matrixWorld);\n    parent.remove(child);\n    scene.add(child);\n  },\n  attach: function (child, scene, parent) {\n    child.applyMatrix(new Matrix4().getInverse(parent.matrixWorld));\n    scene.remove(child);\n    parent.add(child);\n  }\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4(a, b, c, d, normal, color, materialIndex) {\n  console.warn('THREE.Face4 has been removed. A THREE.Face3 will be created instead.');\n  return new Face3(a, b, c, normal, color, materialIndex);\n}\n\nvar LineStrip = 0;\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial(materials) {\n  console.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');\n  return materials;\n}\n\nfunction MultiMaterial(materials) {\n  if (materials === undefined) materials = [];\n  console.warn('THREE.MultiMaterial has been removed. Use an Array instead.');\n  materials.isMultiMaterial = true;\n  materials.materials = materials;\n\n  materials.clone = function () {\n    return materials.slice();\n  };\n\n  return materials;\n}\n\nfunction PointCloud(geometry, material) {\n  console.warn('THREE.PointCloud has been renamed to THREE.Points.');\n  return new Points(geometry, material);\n}\n\nfunction Particle(material) {\n  console.warn('THREE.Particle has been renamed to THREE.Sprite.');\n  return new Sprite(material);\n}\n\nfunction ParticleSystem(geometry, material) {\n  console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n  return new Points(geometry, material);\n}\n\nfunction PointCloudMaterial(parameters) {\n  console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n  return new PointsMaterial(parameters);\n}\n\nfunction ParticleBasicMaterial(parameters) {\n  console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n  return new PointsMaterial(parameters);\n}\n\nfunction ParticleSystemMaterial(parameters) {\n  console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n  return new PointsMaterial(parameters);\n}\n\nfunction Vertex(x, y, z) {\n  console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\n  return new Vector3(x, y, z);\n} //\n\n\nfunction DynamicBufferAttribute(array, itemSize) {\n  console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.');\n  return new BufferAttribute(array, itemSize).setDynamic(true);\n}\n\nfunction Int8Attribute(array, itemSize) {\n  console.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');\n  return new Int8BufferAttribute(array, itemSize);\n}\n\nfunction Uint8Attribute(array, itemSize) {\n  console.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');\n  return new Uint8BufferAttribute(array, itemSize);\n}\n\nfunction Uint8ClampedAttribute(array, itemSize) {\n  console.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');\n  return new Uint8ClampedBufferAttribute(array, itemSize);\n}\n\nfunction Int16Attribute(array, itemSize) {\n  console.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');\n  return new Int16BufferAttribute(array, itemSize);\n}\n\nfunction Uint16Attribute(array, itemSize) {\n  console.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');\n  return new Uint16BufferAttribute(array, itemSize);\n}\n\nfunction Int32Attribute(array, itemSize) {\n  console.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');\n  return new Int32BufferAttribute(array, itemSize);\n}\n\nfunction Uint32Attribute(array, itemSize) {\n  console.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');\n  return new Uint32BufferAttribute(array, itemSize);\n}\n\nfunction Float32Attribute(array, itemSize) {\n  console.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');\n  return new Float32BufferAttribute(array, itemSize);\n}\n\nfunction Float64Attribute(array, itemSize) {\n  console.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');\n  return new Float64BufferAttribute(array, itemSize);\n} //\n\n\nCurve.create = function (construct, getPoint) {\n  console.log('THREE.Curve.create() has been deprecated');\n  construct.prototype = Object.create(Curve.prototype);\n  construct.prototype.constructor = construct;\n  construct.prototype.getPoint = getPoint;\n  return construct;\n}; //\n\n\nfunction ClosedSplineCurve3(points) {\n  console.warn('THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');\n  CatmullRomCurve3.call(this, points);\n  this.type = 'catmullrom';\n  this.closed = true;\n}\n\nClosedSplineCurve3.prototype = Object.create(CatmullRomCurve3.prototype); //\n\nfunction SplineCurve3(points) {\n  console.warn('THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');\n  CatmullRomCurve3.call(this, points);\n  this.type = 'catmullrom';\n}\n\nSplineCurve3.prototype = Object.create(CatmullRomCurve3.prototype); //\n\nfunction Spline(points) {\n  console.warn('THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.');\n  CatmullRomCurve3.call(this, points);\n  this.type = 'catmullrom';\n}\n\nSpline.prototype = Object.create(CatmullRomCurve3.prototype);\nObject.assign(Spline.prototype, {\n  initFromArray: function (a) {\n    console.error('THREE.Spline: .initFromArray() has been removed.');\n  },\n  getControlPointsArray: function (optionalTarget) {\n    console.error('THREE.Spline: .getControlPointsArray() has been removed.');\n  },\n  reparametrizeByArcLength: function (samplingCoef) {\n    console.error('THREE.Spline: .reparametrizeByArcLength() has been removed.');\n  }\n}); //\n\nfunction BoundingBoxHelper(object, color) {\n  console.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');\n  return new BoxHelper(object, color);\n}\n\nfunction EdgesHelper(object, hex) {\n  console.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');\n  return new LineSegments(new EdgesGeometry(object.geometry), new LineBasicMaterial({\n    color: hex !== undefined ? hex : 0xffffff\n  }));\n}\n\nGridHelper.prototype.setColors = function () {\n  console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n};\n\nSkeletonHelper.prototype.update = function () {\n  console.error('THREE.SkeletonHelper: update() no longer needs to be called.');\n};\n\nfunction WireframeHelper(object, hex) {\n  console.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');\n  return new LineSegments(new WireframeGeometry(object.geometry), new LineBasicMaterial({\n    color: hex !== undefined ? hex : 0xffffff\n  }));\n} //\n\n\nfunction XHRLoader(manager) {\n  console.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');\n  return new FileLoader(manager);\n}\n\nfunction BinaryTextureLoader(manager) {\n  console.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');\n  return new DataTextureLoader(manager);\n} //\n\n\nObject.assign(Box2.prototype, {\n  center: function (optionalTarget) {\n    console.warn('THREE.Box2: .center() has been renamed to .getCenter().');\n    return this.getCenter(optionalTarget);\n  },\n  empty: function () {\n    console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\n    return this.isEmpty();\n  },\n  isIntersectionBox: function (box) {\n    console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\n    return this.intersectsBox(box);\n  },\n  size: function (optionalTarget) {\n    console.warn('THREE.Box2: .size() has been renamed to .getSize().');\n    return this.getSize(optionalTarget);\n  }\n});\nObject.assign(Box3.prototype, {\n  center: function (optionalTarget) {\n    console.warn('THREE.Box3: .center() has been renamed to .getCenter().');\n    return this.getCenter(optionalTarget);\n  },\n  empty: function () {\n    console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\n    return this.isEmpty();\n  },\n  isIntersectionBox: function (box) {\n    console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\n    return this.intersectsBox(box);\n  },\n  isIntersectionSphere: function (sphere) {\n    console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n    return this.intersectsSphere(sphere);\n  },\n  size: function (optionalTarget) {\n    console.warn('THREE.Box3: .size() has been renamed to .getSize().');\n    return this.getSize(optionalTarget);\n  }\n});\n\nLine3.prototype.center = function (optionalTarget) {\n  console.warn('THREE.Line3: .center() has been renamed to .getCenter().');\n  return this.getCenter(optionalTarget);\n};\n\n_Math.random16 = function () {\n  console.warn('THREE.Math.random16() has been deprecated. Use Math.random() instead.');\n  return Math.random();\n};\n\nObject.assign(Matrix3.prototype, {\n  flattenToArrayOffset: function (array, offset) {\n    console.warn(\"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\");\n    return this.toArray(array, offset);\n  },\n  multiplyVector3: function (vector) {\n    console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n    return vector.applyMatrix3(this);\n  },\n  multiplyVector3Array: function (a) {\n    console.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');\n  },\n  applyToBuffer: function (buffer, offset, length) {\n    console.warn('THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.');\n    return this.applyToBufferAttribute(buffer);\n  },\n  applyToVector3Array: function (array, offset, length) {\n    console.error('THREE.Matrix3: .applyToVector3Array() has been removed.');\n  }\n});\nObject.assign(Matrix4.prototype, {\n  extractPosition: function (m) {\n    console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n    return this.copyPosition(m);\n  },\n  flattenToArrayOffset: function (array, offset) {\n    console.warn(\"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\");\n    return this.toArray(array, offset);\n  },\n  getPosition: function () {\n    var v1;\n    return function getPosition() {\n      if (v1 === undefined) v1 = new Vector3();\n      console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n      return v1.setFromMatrixColumn(this, 3);\n    };\n  }(),\n  setRotationFromQuaternion: function (q) {\n    console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n    return this.makeRotationFromQuaternion(q);\n  },\n  multiplyToArray: function () {\n    console.warn('THREE.Matrix4: .multiplyToArray() has been removed.');\n  },\n  multiplyVector3: function (vector) {\n    console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n    return vector.applyMatrix4(this);\n  },\n  multiplyVector4: function (vector) {\n    console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n    return vector.applyMatrix4(this);\n  },\n  multiplyVector3Array: function (a) {\n    console.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');\n  },\n  rotateAxis: function (v) {\n    console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n    v.transformDirection(this);\n  },\n  crossVector: function (vector) {\n    console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n    return vector.applyMatrix4(this);\n  },\n  translate: function () {\n    console.error('THREE.Matrix4: .translate() has been removed.');\n  },\n  rotateX: function () {\n    console.error('THREE.Matrix4: .rotateX() has been removed.');\n  },\n  rotateY: function () {\n    console.error('THREE.Matrix4: .rotateY() has been removed.');\n  },\n  rotateZ: function () {\n    console.error('THREE.Matrix4: .rotateZ() has been removed.');\n  },\n  rotateByAxis: function () {\n    console.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n  },\n  applyToBuffer: function (buffer, offset, length) {\n    console.warn('THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.');\n    return this.applyToBufferAttribute(buffer);\n  },\n  applyToVector3Array: function (array, offset, length) {\n    console.error('THREE.Matrix4: .applyToVector3Array() has been removed.');\n  },\n  makeFrustum: function (left, right, bottom, top, near, far) {\n    console.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');\n    return this.makePerspective(left, right, top, bottom, near, far);\n  }\n});\n\nPlane.prototype.isIntersectionLine = function (line) {\n  console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\n  return this.intersectsLine(line);\n};\n\nQuaternion.prototype.multiplyVector3 = function (vector) {\n  console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n  return vector.applyQuaternion(this);\n};\n\nObject.assign(Ray.prototype, {\n  isIntersectionBox: function (box) {\n    console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\n    return this.intersectsBox(box);\n  },\n  isIntersectionPlane: function (plane) {\n    console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\n    return this.intersectsPlane(plane);\n  },\n  isIntersectionSphere: function (sphere) {\n    console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n    return this.intersectsSphere(sphere);\n  }\n});\nObject.assign(Shape.prototype, {\n  extrude: function (options) {\n    console.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');\n    return new ExtrudeGeometry(this, options);\n  },\n  makeGeometry: function (options) {\n    console.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');\n    return new ShapeGeometry(this, options);\n  }\n});\nObject.assign(Vector2.prototype, {\n  fromAttribute: function (attribute, index, offset) {\n    console.error('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');\n    return this.fromBufferAttribute(attribute, index, offset);\n  }\n});\nObject.assign(Vector3.prototype, {\n  setEulerFromRotationMatrix: function () {\n    console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n  },\n  setEulerFromQuaternion: function () {\n    console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n  },\n  getPositionFromMatrix: function (m) {\n    console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n    return this.setFromMatrixPosition(m);\n  },\n  getScaleFromMatrix: function (m) {\n    console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n    return this.setFromMatrixScale(m);\n  },\n  getColumnFromMatrix: function (index, matrix) {\n    console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n    return this.setFromMatrixColumn(matrix, index);\n  },\n  applyProjection: function (m) {\n    console.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');\n    return this.applyMatrix4(m);\n  },\n  fromAttribute: function (attribute, index, offset) {\n    console.error('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');\n    return this.fromBufferAttribute(attribute, index, offset);\n  }\n});\nObject.assign(Vector4.prototype, {\n  fromAttribute: function (attribute, index, offset) {\n    console.error('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');\n    return this.fromBufferAttribute(attribute, index, offset);\n  }\n}); //\n\nGeometry.prototype.computeTangents = function () {\n  console.warn('THREE.Geometry: .computeTangents() has been removed.');\n};\n\nObject.assign(Object3D.prototype, {\n  getChildByName: function (name) {\n    console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n    return this.getObjectByName(name);\n  },\n  renderDepth: function () {\n    console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n  },\n  translate: function (distance, axis) {\n    console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n    return this.translateOnAxis(axis, distance);\n  }\n});\nObject.defineProperties(Object3D.prototype, {\n  eulerOrder: {\n    get: function () {\n      console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n      return this.rotation.order;\n    },\n    set: function (value) {\n      console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n      this.rotation.order = value;\n    }\n  },\n  useQuaternion: {\n    get: function () {\n      console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n    },\n    set: function () {\n      console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n    }\n  }\n});\nObject.defineProperties(LOD.prototype, {\n  objects: {\n    get: function () {\n      console.warn('THREE.LOD: .objects has been renamed to .levels.');\n      return this.levels;\n    }\n  }\n});\nObject.defineProperty(Skeleton.prototype, 'useVertexTexture', {\n  get: function () {\n    console.warn('THREE.Skeleton: useVertexTexture has been removed.');\n  },\n  set: function () {\n    console.warn('THREE.Skeleton: useVertexTexture has been removed.');\n  }\n});\nObject.defineProperty(Curve.prototype, '__arcLengthDivisions', {\n  get: function () {\n    console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');\n    return this.arcLengthDivisions;\n  },\n  set: function (value) {\n    console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');\n    this.arcLengthDivisions = value;\n  }\n}); //\n\nPerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n  console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. \" + \"Use .setFocalLength and .filmGauge for a photographic setup.\");\n  if (filmGauge !== undefined) this.filmGauge = filmGauge;\n  this.setFocalLength(focalLength);\n}; //\n\n\nObject.defineProperties(Light.prototype, {\n  onlyShadow: {\n    set: function () {\n      console.warn('THREE.Light: .onlyShadow has been removed.');\n    }\n  },\n  shadowCameraFov: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\n      this.shadow.camera.fov = value;\n    }\n  },\n  shadowCameraLeft: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\n      this.shadow.camera.left = value;\n    }\n  },\n  shadowCameraRight: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\n      this.shadow.camera.right = value;\n    }\n  },\n  shadowCameraTop: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\n      this.shadow.camera.top = value;\n    }\n  },\n  shadowCameraBottom: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\n      this.shadow.camera.bottom = value;\n    }\n  },\n  shadowCameraNear: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\n      this.shadow.camera.near = value;\n    }\n  },\n  shadowCameraFar: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\n      this.shadow.camera.far = value;\n    }\n  },\n  shadowCameraVisible: {\n    set: function () {\n      console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\n    }\n  },\n  shadowBias: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowBias is now .shadow.bias.');\n      this.shadow.bias = value;\n    }\n  },\n  shadowDarkness: {\n    set: function () {\n      console.warn('THREE.Light: .shadowDarkness has been removed.');\n    }\n  },\n  shadowMapWidth: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\n      this.shadow.mapSize.width = value;\n    }\n  },\n  shadowMapHeight: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\n      this.shadow.mapSize.height = value;\n    }\n  }\n}); //\n\nObject.defineProperties(BufferAttribute.prototype, {\n  length: {\n    get: function () {\n      console.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');\n      return this.array.length;\n    }\n  }\n});\nObject.assign(BufferGeometry.prototype, {\n  addIndex: function (index) {\n    console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n    this.setIndex(index);\n  },\n  addDrawCall: function (start, count, indexOffset) {\n    if (indexOffset !== undefined) {\n      console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n    }\n\n    console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n    this.addGroup(start, count);\n  },\n  clearDrawCalls: function () {\n    console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n    this.clearGroups();\n  },\n  computeTangents: function () {\n    console.warn('THREE.BufferGeometry: .computeTangents() has been removed.');\n  },\n  computeOffsets: function () {\n    console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n  }\n});\nObject.defineProperties(BufferGeometry.prototype, {\n  drawcalls: {\n    get: function () {\n      console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n      return this.groups;\n    }\n  },\n  offsets: {\n    get: function () {\n      console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n      return this.groups;\n    }\n  }\n}); //\n\nObject.defineProperties(Uniform.prototype, {\n  dynamic: {\n    set: function () {\n      console.warn('THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.');\n    }\n  },\n  onUpdate: {\n    value: function () {\n      console.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');\n      return this;\n    }\n  }\n}); //\n\nObject.defineProperties(Material.prototype, {\n  wrapAround: {\n    get: function () {\n      console.warn('THREE.Material: .wrapAround has been removed.');\n    },\n    set: function () {\n      console.warn('THREE.Material: .wrapAround has been removed.');\n    }\n  },\n  wrapRGB: {\n    get: function () {\n      console.warn('THREE.Material: .wrapRGB has been removed.');\n      return new Color();\n    }\n  },\n  shading: {\n    get: function () {\n      console.error('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n    },\n    set: function (value) {\n      console.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n      this.flatShading = value === FlatShading;\n    }\n  }\n});\nObject.defineProperties(MeshPhongMaterial.prototype, {\n  metal: {\n    get: function () {\n      console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.');\n      return false;\n    },\n    set: function () {\n      console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead');\n    }\n  }\n});\nObject.defineProperties(ShaderMaterial.prototype, {\n  derivatives: {\n    get: function () {\n      console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n      return this.extensions.derivatives;\n    },\n    set: function (value) {\n      console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n      this.extensions.derivatives = value;\n    }\n  }\n}); //\n\nObject.assign(WebGLRenderer.prototype, {\n  getCurrentRenderTarget: function () {\n    console.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');\n    return this.getRenderTarget();\n  },\n  getMaxAnisotropy: function () {\n    console.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');\n    return this.capabilities.getMaxAnisotropy();\n  },\n  getPrecision: function () {\n    console.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');\n    return this.capabilities.precision;\n  },\n  supportsFloatTextures: function () {\n    console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n    return this.extensions.get('OES_texture_float');\n  },\n  supportsHalfFloatTextures: function () {\n    console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n    return this.extensions.get('OES_texture_half_float');\n  },\n  supportsStandardDerivatives: function () {\n    console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n    return this.extensions.get('OES_standard_derivatives');\n  },\n  supportsCompressedTextureS3TC: function () {\n    console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n    return this.extensions.get('WEBGL_compressed_texture_s3tc');\n  },\n  supportsCompressedTexturePVRTC: function () {\n    console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n    return this.extensions.get('WEBGL_compressed_texture_pvrtc');\n  },\n  supportsBlendMinMax: function () {\n    console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n    return this.extensions.get('EXT_blend_minmax');\n  },\n  supportsVertexTextures: function () {\n    console.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');\n    return this.capabilities.vertexTextures;\n  },\n  supportsInstancedArrays: function () {\n    console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n    return this.extensions.get('ANGLE_instanced_arrays');\n  },\n  enableScissorTest: function (boolean) {\n    console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\n    this.setScissorTest(boolean);\n  },\n  initMaterial: function () {\n    console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n  },\n  addPrePlugin: function () {\n    console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n  },\n  addPostPlugin: function () {\n    console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n  },\n  updateShadowMap: function () {\n    console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n  }\n});\nObject.defineProperties(WebGLRenderer.prototype, {\n  shadowMapEnabled: {\n    get: function () {\n      return this.shadowMap.enabled;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n      this.shadowMap.enabled = value;\n    }\n  },\n  shadowMapType: {\n    get: function () {\n      return this.shadowMap.type;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n      this.shadowMap.type = value;\n    }\n  },\n  shadowMapCullFace: {\n    get: function () {\n      return this.shadowMap.cullFace;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.');\n      this.shadowMap.cullFace = value;\n    }\n  }\n});\nObject.defineProperties(WebGLShadowMap.prototype, {\n  cullFace: {\n    get: function () {\n      return this.renderReverseSided ? CullFaceFront : CullFaceBack;\n    },\n    set: function (cullFace) {\n      var value = cullFace !== CullFaceBack;\n      console.warn(\"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\");\n      this.renderReverseSided = value;\n    }\n  }\n}); //\n\nObject.defineProperties(WebGLRenderTarget.prototype, {\n  wrapS: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n      return this.texture.wrapS;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n      this.texture.wrapS = value;\n    }\n  },\n  wrapT: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n      return this.texture.wrapT;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n      this.texture.wrapT = value;\n    }\n  },\n  magFilter: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n      return this.texture.magFilter;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n      this.texture.magFilter = value;\n    }\n  },\n  minFilter: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n      return this.texture.minFilter;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n      this.texture.minFilter = value;\n    }\n  },\n  anisotropy: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n      return this.texture.anisotropy;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n      this.texture.anisotropy = value;\n    }\n  },\n  offset: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n      return this.texture.offset;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n      this.texture.offset = value;\n    }\n  },\n  repeat: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n      return this.texture.repeat;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n      this.texture.repeat = value;\n    }\n  },\n  format: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n      return this.texture.format;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n      this.texture.format = value;\n    }\n  },\n  type: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n      return this.texture.type;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n      this.texture.type = value;\n    }\n  },\n  generateMipmaps: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n      return this.texture.generateMipmaps;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n      this.texture.generateMipmaps = value;\n    }\n  }\n}); //\n\nAudio.prototype.load = function (file) {\n  console.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');\n  var scope = this;\n  var audioLoader = new AudioLoader();\n  audioLoader.load(file, function (buffer) {\n    scope.setBuffer(buffer);\n  });\n  return this;\n};\n\nAudioAnalyser.prototype.getData = function () {\n  console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\n  return this.getFrequencyData();\n}; //\n\n\nCubeCamera.prototype.updateCubeMap = function (renderer, scene) {\n  console.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');\n  return this.update(renderer, scene);\n}; //\n\n\nvar GeometryUtils = {\n  merge: function (geometry1, geometry2, materialIndexOffset) {\n    console.warn('THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.');\n    var matrix;\n\n    if (geometry2.isMesh) {\n      geometry2.matrixAutoUpdate && geometry2.updateMatrix();\n      matrix = geometry2.matrix;\n      geometry2 = geometry2.geometry;\n    }\n\n    geometry1.merge(geometry2, matrix, materialIndexOffset);\n  },\n  center: function (geometry) {\n    console.warn('THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.');\n    return geometry.center();\n  }\n};\nvar ImageUtils = {\n  crossOrigin: undefined,\n  loadTexture: function (url, mapping, onLoad, onError) {\n    console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\n    var loader = new TextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    var texture = loader.load(url, onLoad, undefined, onError);\n    if (mapping) texture.mapping = mapping;\n    return texture;\n  },\n  loadTextureCube: function (urls, mapping, onLoad, onError) {\n    console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\n    var loader = new CubeTextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    var texture = loader.load(urls, onLoad, undefined, onError);\n    if (mapping) texture.mapping = mapping;\n    return texture;\n  },\n  loadCompressedTexture: function () {\n    console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n  },\n  loadCompressedTextureCube: function () {\n    console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n  }\n}; //\n\nfunction Projector() {\n  console.error('THREE.Projector has been moved to /examples/js/renderers/Projector.js.');\n\n  this.projectVector = function (vector, camera) {\n    console.warn('THREE.Projector: .projectVector() is now vector.project().');\n    vector.project(camera);\n  };\n\n  this.unprojectVector = function (vector, camera) {\n    console.warn('THREE.Projector: .unprojectVector() is now vector.unproject().');\n    vector.unproject(camera);\n  };\n\n  this.pickingRay = function () {\n    console.error('THREE.Projector: .pickingRay() is now raycaster.setFromCamera().');\n  };\n} //\n\n\nfunction CanvasRenderer() {\n  console.error('THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js');\n  this.domElement = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n\n  this.clear = function () {};\n\n  this.render = function () {};\n\n  this.setClearColor = function () {};\n\n  this.setSize = function () {};\n}\n\nexport { WebGLRenderTargetCube, WebGLRenderTarget, WebGLRenderer, ShaderLib, UniformsLib, UniformsUtils, ShaderChunk, FogExp2, Fog, Scene, LensFlare, Sprite, LOD, SkinnedMesh, Skeleton, Bone, Mesh, LineSegments, LineLoop, Line, Points, Group, VideoTexture, DataTexture, CompressedTexture, CubeTexture, CanvasTexture, DepthTexture, Texture, CompressedTextureLoader, DataTextureLoader, CubeTextureLoader, TextureLoader, ObjectLoader, MaterialLoader, BufferGeometryLoader, DefaultLoadingManager, LoadingManager, JSONLoader, ImageLoader, FontLoader, FileLoader, Loader, Cache, AudioLoader, SpotLightShadow, SpotLight, PointLight, RectAreaLight, HemisphereLight, DirectionalLightShadow, DirectionalLight, AmbientLight, LightShadow, Light, StereoCamera, PerspectiveCamera, OrthographicCamera, CubeCamera, ArrayCamera, Camera, AudioListener, PositionalAudio, AudioContext, AudioAnalyser, Audio, VectorKeyframeTrack, StringKeyframeTrack, QuaternionKeyframeTrack, NumberKeyframeTrack, ColorKeyframeTrack, BooleanKeyframeTrack, PropertyMixer, PropertyBinding, KeyframeTrack, AnimationUtils, AnimationObjectGroup, AnimationMixer, AnimationClip, Uniform, InstancedBufferGeometry, BufferGeometry, GeometryIdCount, Geometry, InterleavedBufferAttribute, InstancedInterleavedBuffer, InterleavedBuffer, InstancedBufferAttribute, Face3, Object3D, Raycaster, Layers, EventDispatcher, Clock, QuaternionLinearInterpolant, LinearInterpolant, DiscreteInterpolant, CubicInterpolant, Interpolant, Triangle, _Math as Math, Spherical, Cylindrical, Plane, Frustum, Sphere, Ray, Matrix4, Matrix3, Box3, Box2, Line3, Euler, Vector4, Vector3, Vector2, Quaternion, Color, ImmediateRenderObject, VertexNormalsHelper, SpotLightHelper, SkeletonHelper, PointLightHelper, RectAreaLightHelper, HemisphereLightHelper, GridHelper, PolarGridHelper, FaceNormalsHelper, DirectionalLightHelper, CameraHelper, BoxHelper, Box3Helper, PlaneHelper, ArrowHelper, AxisHelper, CatmullRomCurve3, CubicBezierCurve3, QuadraticBezierCurve3, LineCurve3, ArcCurve, EllipseCurve, SplineCurve, CubicBezierCurve, QuadraticBezierCurve, LineCurve, Shape, Path, ShapePath, Font, CurvePath, Curve, ShapeUtils, SceneUtils, WebGLUtils, WireframeGeometry, ParametricGeometry, ParametricBufferGeometry, TetrahedronGeometry, TetrahedronBufferGeometry, OctahedronGeometry, OctahedronBufferGeometry, IcosahedronGeometry, IcosahedronBufferGeometry, DodecahedronGeometry, DodecahedronBufferGeometry, PolyhedronGeometry, PolyhedronBufferGeometry, TubeGeometry, TubeBufferGeometry, TorusKnotGeometry, TorusKnotBufferGeometry, TorusGeometry, TorusBufferGeometry, TextGeometry, TextBufferGeometry, SphereGeometry, SphereBufferGeometry, RingGeometry, RingBufferGeometry, PlaneGeometry, PlaneBufferGeometry, LatheGeometry, LatheBufferGeometry, ShapeGeometry, ShapeBufferGeometry, ExtrudeGeometry, ExtrudeBufferGeometry, EdgesGeometry, ConeGeometry, ConeBufferGeometry, CylinderGeometry, CylinderBufferGeometry, CircleGeometry, CircleBufferGeometry, BoxGeometry, BoxBufferGeometry, ShadowMaterial, SpriteMaterial, RawShaderMaterial, ShaderMaterial, PointsMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshPhongMaterial, MeshToonMaterial, MeshNormalMaterial, MeshLambertMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshBasicMaterial, LineDashedMaterial, LineBasicMaterial, Material, Float64BufferAttribute, Float32BufferAttribute, Uint32BufferAttribute, Int32BufferAttribute, Uint16BufferAttribute, Int16BufferAttribute, Uint8ClampedBufferAttribute, Uint8BufferAttribute, Int8BufferAttribute, BufferAttribute, REVISION, MOUSE, CullFaceNone, CullFaceBack, CullFaceFront, CullFaceFrontBack, FrontFaceDirectionCW, FrontFaceDirectionCCW, BasicShadowMap, PCFShadowMap, PCFSoftShadowMap, FrontSide, BackSide, DoubleSide, FlatShading, SmoothShading, NoColors, FaceColors, VertexColors, NoBlending, NormalBlending, AdditiveBlending, SubtractiveBlending, MultiplyBlending, CustomBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, OneMinusSrcColorFactor, SrcAlphaFactor, OneMinusSrcAlphaFactor, DstAlphaFactor, OneMinusDstAlphaFactor, DstColorFactor, OneMinusDstColorFactor, SrcAlphaSaturateFactor, NeverDepth, AlwaysDepth, LessDepth, LessEqualDepth, EqualDepth, GreaterEqualDepth, GreaterDepth, NotEqualDepth, MultiplyOperation, MixOperation, AddOperation, NoToneMapping, LinearToneMapping, ReinhardToneMapping, Uncharted2ToneMapping, CineonToneMapping, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, SphericalReflectionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter, UnsignedByteType, ByteType, ShortType, UnsignedShortType, IntType, UnsignedIntType, FloatType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedInt248Type, AlphaFormat, RGBFormat, RGBAFormat, LuminanceFormat, LuminanceAlphaFormat, RGBEFormat, DepthFormat, DepthStencilFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, LoopOnce, LoopRepeat, LoopPingPong, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, ZeroCurvatureEnding, ZeroSlopeEnding, WrapAroundEnding, TrianglesDrawMode, TriangleStripDrawMode, TriangleFanDrawMode, LinearEncoding, sRGBEncoding, GammaEncoding, RGBEEncoding, LogLuvEncoding, RGBM7Encoding, RGBM16Encoding, RGBDEncoding, BasicDepthPacking, RGBADepthPacking, BoxGeometry as CubeGeometry, Face4, LineStrip, LinePieces, MeshFaceMaterial, MultiMaterial, PointCloud, Particle, ParticleSystem, PointCloudMaterial, ParticleBasicMaterial, ParticleSystemMaterial, Vertex, DynamicBufferAttribute, Int8Attribute, Uint8Attribute, Uint8ClampedAttribute, Int16Attribute, Uint16Attribute, Int32Attribute, Uint32Attribute, Float32Attribute, Float64Attribute, ClosedSplineCurve3, SplineCurve3, Spline, BoundingBoxHelper, EdgesHelper, WireframeHelper, XHRLoader, BinaryTextureLoader, GeometryUtils, ImageUtils, Projector, CanvasRenderer };","map":{"version":3,"sources":["/Users/Gary 1/Desktop/Code stuff/資策會/專題/大專/artddict-react/node_modules/three-react-obj-loader/node_modules/three/build/three.module.js"],"names":["Number","EPSILON","undefined","Math","pow","isInteger","value","isFinite","floor","sign","x","Function","prototype","name","Object","defineProperty","get","toString","match","assign","target","TypeError","output","index","arguments","length","source","nextKey","hasOwnProperty","call","EventDispatcher","addEventListener","type","listener","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","array","slice","i","l","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","chars","split","uuid","Array","rnd","r","random","join","clamp","min","max","euclideanModulo","n","m","mapLinear","a1","a2","b1","b2","lerp","y","t","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","nearestPowerOfTwo","round","log","LN2","nextPowerOfTwo","Vector2","defineProperties","set","isVector2","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","constructor","copy","v","add","w","console","warn","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","ceil","roundToZero","negate","dot","lengthSq","sqrt","lengthManhattan","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","distanceToManhattan","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","c","cos","sin","textureId","Texture","image","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","isTexture","toJSON","meta","textures","getDataURL","canvas","HTMLCanvasElement","document","createElementNS","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","metadata","generator","wrap","images","url","dispose","transformUv","uv","Vector4","z","isVector4","setZ","setW","applyMatrix4","e","elements","setAxisAngleFromQuaternion","q","acos","setAxisAngleFromRotationMatrix","epsilon","epsilon2","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","isWebGLRenderTarget","setSize","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","create","isWebGLRenderTargetCube","Quaternion","_x","_y","_z","_w","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","f","onChangeCallback","quaternion","setFromEuler","euler","update","isEuler","order","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","Vector3","EPS","vFrom","vTo","crossVectors","inverse","conjugate","p","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","callback","isVector3","multiplyVectors","applyEuler","error","applyQuaternion","applyAxisAngle","applyMatrix3","qx","qy","qz","qw","ix","iy","iz","iw","project","matrix","Matrix4","camera","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","unproject","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromCylindrical","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","identity","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","d","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","x2","y2","z2","wx","wy","wz","lookAt","eye","up","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","count","setXYZ","determinant","transpose","tmp","setPosition","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","makeShear","compose","position","decompose","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","DataTexture","data","isDataTexture","CubeTexture","isCubeTexture","emptyTexture","emptyCubeTexture","UniformContainer","seq","map","arrayCacheF32","arrayCacheI32","mat4array","Float32Array","mat3array","flatten","nBlocks","blockSize","firstElem","allocTexUnits","renderer","Int32Array","allocTextureUnit","setValue1f","gl","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","g","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","size","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","getPureArraySetter","SingleUniform","id","activeInfo","setValue","PureArrayUniform","StructuredUniform","u","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","exec","matchEnd","idIsIndex","subscript","next","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","setOptional","object","upload","values","needsUpdate","seqWithValue","ColorKeywords","Color","setRGB","isColor","setHex","setStyle","hex","setHSL","hue2rgb","style","handleAlpha","string","parseFloat","color","components","parseInt","charAt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hsl","hue","saturation","lightness","delta","getStyle","offsetHSL","addColors","color1","color2","UniformsLib","common","diffuse","opacity","offsetRepeat","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","direction","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","points","UniformsUtils","merge","uniforms","merged","uniforms_src","uniforms_dst","parameter_src","isMatrix3","isArray","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_template","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","ShaderChunk","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","dashed","dashSize","totalSize","depth","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","physical","clearCoat","clearCoatRoughness","Box2","Infinity","setFromPoints","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","box","isEmpty","getCenter","result","getSize","point","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","intersectsBox","clampPoint","distanceToPoint","clampedPoint","intersect","union","translate","WebGLFlareRenderer","state","capabilities","vertexBuffer","elementBuffer","shader","attributes","tempTexture","occlusionTexture","init","vertices","faces","Uint16Array","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","RGBA","createProgram","vertex","getAttribLocation","renderType","occlusionMap","rotation","screenPosition","render","flares","scene","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","validArea","useProgram","initAttributes","enableAttribute","disableUnusedAttributes","vertexAttribPointer","FLOAT","disable","CULL_FACE","buffers","setMask","flare","matrixWorldInverse","activeTexture","TEXTURE0","TEXTURE1","copyTexImage2D","BLEND","enable","DEPTH_TEST","drawElements","TRIANGLES","UNSIGNED_SHORT","positionScreen","customUpdateCallback","updateLensFlares","j","jl","lensFlares","sprite","setBlending","blending","blendEquation","blendSrc","blendDst","reset","createShader","FRAGMENT_SHADER","VERTEX_SHADER","prefix","precision","shaderSource","compileShader","attachShader","linkProgram","CanvasTexture","WebGLSpriteRenderer","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","modelViewMatrix","fogType","alphaTest","fillStyle","fillRect","sprites","oldFogType","sceneFogType","isFog","isFogExp2","density","sort","painterSortStable","material","visible","onBeforeRender","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","premultipliedAlpha","setTest","depthTest","depthWrite","onAfterRender","renderOrder","materialId","Material","side","flatShading","vertexColors","transparent","depthFunc","clippingPlanes","clipIntersection","clipShadows","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","overdraw","userData","isMaterial","onBeforeCompile","setValues","key","newValue","currentValue","isRoot","sizeAttenuation","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","morphTargets","skinning","JSON","stringify","extractFromCache","cache","parse","srcPlanes","dstPlanes","ShaderMaterial","parameters","defines","linewidth","clipping","morphNormals","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","isShaderMaterial","MeshDepthMaterial","depthPacking","isMeshDepthMaterial","MeshDistanceMaterial","isMeshDistanceMaterial","Box3","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromObject","expandByObject","scope","updateMatrixWorld","traverse","node","geometry","isGeometry","isBufferGeometry","intersectsSphere","closestPoint","sphere","intersectsPlane","plane","constant","getBoundingSphere","Sphere","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","Matrix3","setFromMatrix4","getNormalMatrix","matrix4","transposeIntoArray","Plane","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","denominator","start","intersectsLine","startSign","endSign","end","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","Frustum","p0","p1","p2","p3","p4","p5","planes","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","negRadius","d1","d2","WebGLShadowMap","_renderer","_objects","maxTextureSize","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","enabled","autoUpdate","renderReverseSided","renderSingleSided","_gl","_state","setClear","setScissorTest","faceCount","light","isPointLight","shadowCamera","mapSize","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMap","shadowMatrix","setRenderTarget","clear","face","vpDimensions","renderObject","getDepthMaterial","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","morphAttributes","isSkinnedMesh","variantIndex","localClippingEnabled","keyA","keyB","materialsForVariant","cachedMaterial","layers","test","isMesh","isLine","isPoints","castShadow","frustumCulled","groups","k","kl","group","groupMaterial","materialIndex","renderBufferDirect","children","WebGLAttributes","bufferType","usage","dynamic","DYNAMIC_DRAW","buffer","onUploadCallback","Float64Array","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","INT","Int8Array","BYTE","Uint8Array","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","isInterleavedBufferAttribute","remove","deleteBuffer","Euler","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Layers","mask","channel","toggle","object3DId","Object3D","parent","DefaultUp","onRotationChange","onQuaternionChange","enumerable","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","receiveShadow","isObject3D","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","getObjectById","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","updateMatrix","force","isRootObject","geometries","materials","serialize","library","element","uuids","recursive","Camera","OrthographicCamera","zoom","view","isOrthographicCamera","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","cx","cy","zoomW","zoomH","scaleW","scaleH","PerspectiveCamera","fov","aspect","focus","filmGauge","filmOffset","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","skew","Face3","vertexNormals","GeometryIdCount","Geometry","colors","faceVertexUvs","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","computeBoundingBox","obj","fromBufferGeometry","indices","positions","normals","uvs","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","computeLineDistances","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precisionPoints","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","materialIndexSort","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","hash","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","BufferAttribute","itemSize","normalized","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyIndicesArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","arrayMax","BufferGeometry","drawRange","MaxIndex","getIndex","setIndex","addAttribute","getAttribute","removeAttribute","addGroup","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","isNaN","pA","pB","pC","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","geometry2","array2","morphAttribute","BoxGeometry","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","MeshBasicMaterial","combine","isMeshBasicMaterial","Ray","origin","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","v0","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","Line3","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","startEnd_startP","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","edgeList","projectedPoint","minDistance","Mesh","drawMode","updateMorphTargets","setDrawMode","ml","keys","morphTargetInfluences","morphTargetDictionary","String","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","raycaster","checkBufferGeometryIntersection","intersection","faceIndex","intersects","fvA","fvB","fvC","isMultiMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","WebGLBackground","clearColor","clearAlpha","planeCamera","planeMesh","boxMesh","renderList","forceClear","background","autoClear","autoClearColor","autoClearDepth","autoClearStencil","getClearColor","setClearColor","getClearAlpha","setClearAlpha","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","renderItem","WebGLRenderLists","lists","list","absNumericalSort","WebGLMorphtargets","influencesList","objectInfluences","influences","getUniforms","WebGLIndexedBufferRenderer","infoRender","mode","setMode","calls","POINTS","renderInstances","extension","drawElementsInstancedANGLE","maxInstancedCount","WebGLBufferRenderer","drawArrays","drawArraysInstancedANGLE","WebGLGeometries","infoMemory","wireframeAttributes","onGeometryDispose","buffergeometry","_bufferGeometry","geometryAttributes","getWireframeAttribute","geometryIndex","UniformsCache","halfWidth","halfHeight","WebGLLights","ambient","directional","spot","rectArea","hemi","vector3","matrix42","setup","shadows","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","viewMatrix","intensity","isAmbientLight","isDirectionalLight","bias","isSpotLight","penumbra","isRectAreaLight","isHemisphereLight","WebGLObjects","updateList","frame","addLineNumbers","lines","WebGLShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","generateExtensions","rendererExtensions","chunks","envMapCubeUV","logarithmicDepthBuffer","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","identifiers","ACTIVE_ATTRIBUTES","getActiveAttrib","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","parseIncludes","pattern","include","unrollLoops","snippet","unroll","WebGLProgram","code","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","gammaFactorDefine","customExtensions","customDefines","prefixVertex","prefixFragment","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","numClippingPlanes","shadowMapEnabled","numClipIntersection","physicallyCorrectLights","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","bindAttribLocation","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","deleteShader","cachedUniforms","cachedAttributes","getAttributes","destroy","deleteProgram","usedTimes","WebGLPrograms","programs","shaderIDs","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","parameterNames","allocateBones","skeleton","bones","floatVertexTextures","nVertexUniforms","maxVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","nClipPlanes","nClipIntersection","shaderID","getMaxPrecision","currentRenderTarget","getRenderTarget","vertexTextures","gammaOutput","gammaInput","envMapMode","maxMorphTargets","maxMorphNormals","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","pop","WebGLTextures","utils","_isWebGL2","WebGL2RenderingContext","clampToMaxSize","maxSize","makePowerOfTwo","HTMLImageElement","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","filterFallback","LINEAR","onTextureDispose","deallocateTexture","onRenderTargetDispose","renderTarget","deallocateRenderTarget","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","slot","__version","complete","uploadTexture","TEXTURE_CUBE_MAP","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isCompressedTexture","cubeImage","maxCubemapSize","isPowerOfTwoImage","glFormat","convert","glType","setTextureParameters","TEXTURE_CUBE_MAP_POSITIVE_X","mipmap","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","setTextureCubeDynamic","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","isDepthTexture","internalFormat","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","webglTexture","WebGLProperties","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","colorBuffer","maxVertexAttributes","MAX_VERTEX_ATTRIBS","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentProgram","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","maxTextures","MAX_COMBINED_TEXTURE_IMAGE_UNITS","VERSION","lineWidthAvailable","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","emptyTextures","setFlipSided","setCullFace","enableVertexAttribArray","vertexAttribDivisorANGLE","enableAttributeAndDivisor","meshPerAttribute","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","blendFunc","SRC_ALPHA","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","SRC_COLOR","setMaterial","setPolygonOffset","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","webglSlot","webglType","boundTexture","apply","WebGLCapabilities","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getShaderPrecisionFormat","HIGH_FLOAT","MEDIUM_FLOAT","maxPrecision","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","ArrayCamera","cameras","isArrayCamera","WebVRManager","device","frameData","window","VRFrameData","standingMatrix","standingMatrixInverse","cameraL","bounds","cameraR","cameraVR","currentSize","currentPixelRatio","onVRDisplayPresentChange","isPresenting","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","standing","getDevice","setDevice","getCamera","depthNear","depthFar","getFrameData","pose","orientation","stageParameters","sittingToStandingTransform","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","getStandingMatrix","submitFrame","WebGLExtensions","getExtension","WebGLClipping","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","uniform","numPlanes","numIntersection","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","fromCache","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","i4","WebGLUtils","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","WebGLRenderer","_canvas","_context","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","lightsArray","shadowsArray","currentRenderList","spritesArray","flaresArray","domElement","sortObjects","toneMappingExposure","toneMappingWhitePoint","_this","_isContextLost","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_usedTextureUnits","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_vector3","_infoMemory","_infoRender","memory","getTargetPixelRatio","contextAttributes","onContextLost","onContextRestore","objects","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","flareRenderer","spriteRenderer","initGLContext","vr","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","setScissor","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","preventDefault","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","renderObjectImmediate","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","isMeshPhongMaterial","isMeshStandardMaterial","isMeshNormalMaterial","normalArray","nx","ny","nz","uvArray","colorArray","setProgram","geometryProgram","updateBuffers","rangeFactor","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","isLineSegments","isLineLoop","LINE_LOOP","LINE_STRIP","isInstancedBufferGeometry","startIndex","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","compile","isLight","initMaterial","isAnimating","onAnimationFrame","requestAnimationFrame","loop","time","animate","projectObject","opaqueObjects","transparentObjects","overrideMaterial","renderObjects","isSprite","isLensFlare","isImmediateRenderObject","camera2","materialProperties","programChange","numSupportedMorphTargets","numSupportedMorphNormals","lightsHash","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","refreshUniformsDepth","refreshUniformsDistance","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isShadowMaterial","ltcMat","LTC_MAT_TEXTURE","ltcMag","LTC_MAG_TEXTURE","emissiveIntensity","uvScaleMap","gapSize","setFaceCulling","frontFaceDirection","textureUnit","warned","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","FogExp2","Fog","Scene","LensFlare","vecX","vecY","wantedRotation","SpriteMaterial","isSpriteMaterial","Sprite","intersectPoint","worldPosition","worldScale","guessSizeSq","LOD","levels","level","addLevel","getObjectForDistance","matrixPosition","Skeleton","boneInverses","calculateInverses","bone","isBone","offsetMatrix","identityMatrix","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","bind","normalizeSkinWeights","gbone","pos","rotq","scl","sw","vec","skinWeight","linecap","linejoin","Line","LineSegments","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","step","distSq","nbVertices","LineLoop","Points","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","Group","VideoTexture","video","readyState","HAVE_CURRENT_DATA","CompressedTexture","DepthTexture","WireframeGeometry","o","ol","edge","edges","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","detail","PolyhedronBufferGeometry","uvBuffer","subdivide","appplyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","generateBufferData","generateSegment","generateIndices","P","getPointAt","N","B","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","ShapeUtils","contour","triangulate","snip","verts","px","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cpx","cpy","cCROSSap","bCROSScp","aCROSSbp","vertIndices","nv","triangulateShape","holes","removeDupEndPts","forEach","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","shape","concat","hole","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","sIdx","nextIdx","indepHoles","intersectsHoleEdge","ihIdx","chkHole","hIdx","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","failedCuts","tmpShape1","tmpShape2","tmpHole1","tmpHole2","hl","minShapeIndex","counter","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","isClockWise","pts","ExtrudeGeometry","shapes","ExtrudeBufferGeometry","addShapeList","getArrays","positionAttribute","verticesArray","uvAttribute","IndexAttribute","indicesArray","sl","arrays","addShape","placeholder","amount","bevelThickness","bevelSize","bevelSegments","bevelEnabled","curveSegments","steps","extrudePath","extrudePts","extrudeByPath","uvgen","UVGenerator","WorldUVGenerator","splineTube","binormal","position2","getSpacedPoints","ahole","shapePoints","extractPoints","reverse","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","extrudeMaterial","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","vector2","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","shapeHole","indexOffset","shapeVertices","shapeHoles","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","Materials","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","onStart","itemStart","itemEnd","itemError","DefaultLoadingManager","FileLoader","manager","load","cached","setTimeout","dataUriRegex","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","toLowerCase","ArrayBuffer","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","open","status","withCredentials","overrideMimeType","header","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","CompressedTextureLoader","_parser","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","DataTextureLoader","texData","ImageLoader","crossOrigin","substr","src","setCrossOrigin","CubeTextureLoader","urls","TextureLoader","isJPEG","search","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrackPrototype","TimeBufferType","ValueBufferType","DefaultInterpolation","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","setInterpolation","interpolation","factoryMethod","message","ValueTypeName","createInterpolant","getInterpolation","shift","timeOffset","timeScale","trim","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","KeyframeTrackConstructor","VectorKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","NumberKeyframeTrack","StringKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","KeyframeTrack","json","trackType","_getTrackTypeForValueTypeName","track","typeName","AnimationClip","duration","tracks","resetDuration","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","parts","animationMorphTargets","clips","parseAnimation","animation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","MaterialLoader","setTextures","getTexture","shading","BufferGeometryLoader","typedArray","TYPED_ARRAYS","drawcalls","offsets","Loader","onLoadStart","onLoadProgress","onLoadComplete","Handlers","handlers","regex","extractUrlBase","initMaterials","texturePath","createMaterial","BlendingMode","textureLoader","materialLoader","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","JSONLoader","setTexturePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","morphAnimationClips","ObjectLoader","substring","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","loadImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","CatmullRom","t2","t3","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","Curve","arcLengthDivisions","getPoint","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","last","sum","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","getTangentAt","mat","MAX_VALUE","tz","LineCurve","isLineCurve","tangent","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","lens","cacheLengths","sums","resolution","isEllipseCurve","isSplineCurve","createPointsGeometry","createGeometry","createSpacedPointsGeometry","EllipseCurve","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","SplineCurve","intPoint","weight","point0","point1","point2","point3","CubicBezierCurve","v3","QuadraticBezierCurve","PathPrototype","fromPoints","moveTo","lineTo","currentPoint","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","aRadius","absarc","absellipse","ellipse","firstPoint","lastPoint","Path","Shape","getPointsHoles","holesPts","extractAllPoints","ShapePath","subPaths","currentPath","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","Font","createPaths","line_height","yMax","yMin","underlineThickness","paths","char","ret","createPath","glyph","glyphs","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","outline","_cachedOutline","action","ha","FontLoader","AudioContext","webkitAudioContext","setContext","AudioLoader","decodeAudioData","audioBuffer","StereoCamera","eyeSep","instance","eyeRight","eyeLeft","eyeSepOnProjection","ymax","xmin","xmax","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","AudioListener","gain","createGain","connect","destination","getInput","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","positionX","setValueAtTime","currentTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","getOutput","setNodeSource","audioNode","setBuffer","play","createBufferSource","onended","onEnded","pause","stop","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","PositionalAudio","panner","createPanner","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","findNode","nodeName","root","isAnimationObjectGroup","sanitizeNodeName","directoryRe","nodeRe","objectRe","propertyRe","trackRe","RegExp","supportedObjectNames","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchSkeleton","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","getValue_direct","getValue_array","resolvedProperty","getValue_arrayElement","getValue_toArray","SetterByBindingTypeAndVersioning","setValue_direct","setValue_direct_setNeedsUpdate","targetObject","setValue_direct_setMatrixWorldNeedsUpdate","setValue_array","dest","setValue_array_setNeedsUpdate","setValue_array_setMatrixWorldNeedsUpdate","setValue_arrayElement","setValue_arrayElement_setNeedsUpdate","setValue_arrayElement_setMatrixWorldNeedsUpdate","setValue_fromArray","setValue_fromArray_setNeedsUpdate","setValue_fromArray_setMatrixWorldNeedsUpdate","getValue_unbound","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","AnimationObjectGroup","var_args","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","isInterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","PointCloud","ascSort","intersectObject","setFromCamera","coords","intersectObjects","Clock","autoStart","oldTime","elapsedTime","running","performance","Date","getElapsedTime","getDelta","newTime","Spherical","other","makeSafe","vec3","Cylindrical","ImmediateRenderObject","renderCallback","VertexNormalsHelper","nNormals","objGeometry","objPos","objNorm","SpotLightHelper","cone","coneLength","coneWidth","getBoneList","boneList","SkeletonHelper","boneMatrix","matrixWorldInv","PointLightHelper","sphereSize","RectAreaLightHelper","hx","hy","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","BoxHelper","Box3Helper","PlaneHelper","positions2","lineGeometry","coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxisHelper","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","pz","CatmullRomCurve3","CubicBezierCurve3","QuadraticBezierCurve3","LineCurve3","ArcCurve","SceneUtils","createMultiMaterialObject","detach","attach","Face4","LineStrip","LinePieces","MeshFaceMaterial","MultiMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","ClosedSplineCurve3","SplineCurve3","Spline","initFromArray","getControlPointsArray","reparametrizeByArcLength","samplingCoef","BoundingBoxHelper","EdgesHelper","setColors","WireframeHelper","XHRLoader","BinaryTextureLoader","isIntersectionBox","isIntersectionSphere","random16","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","extrude","makeGeometry","fromAttribute","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","metal","getCurrentRenderTarget","getPrecision","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapCullFace","audioLoader","getData","updateCubeMap","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","CubeGeometry"],"mappings":"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","sourcesContent":["// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( Function.prototype.name === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\t'use strict';\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '87';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RGB_S3TC_DXT1_Format = 2001;\nvar RGBA_S3TC_DXT1_Format = 2002;\nvar RGBA_S3TC_DXT3_Format = 2003;\nvar RGBA_S3TC_DXT5_Format = 2004;\nvar RGB_PVRTC_4BPPV1_Format = 2100;\nvar RGB_PVRTC_2BPPV1_Format = 2101;\nvar RGBA_PVRTC_4BPPV1_Format = 2102;\nvar RGBA_PVRTC_2BPPV1_Format = 2103;\nvar RGB_ETC1_Format = 2151;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: function () {\n\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\n\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\n\t\tvar uuid = new Array( 36 );\n\t\tvar rnd = 0, r;\n\n\t\treturn function generateUUID() {\n\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\n\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\n\n\t\t\t\t\tuuid[ i ] = '-';\n\n\t\t\t\t} else if ( i === 14 ) {\n\n\t\t\t\t\tuuid[ i ] = '4';\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\n\t\t\t\t\tr = rnd & 0xf;\n\t\t\t\t\trnd = rnd >> 4;\n\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn uuid.join( '' );\n\n\t\t};\n\n\t}(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tvalue --;\n\t\tvalue |= value >> 1;\n\t\tvalue |= value >> 2;\n\t\tvalue |= value >> 4;\n\t\tvalue |= value >> 8;\n\t\tvalue |= value >> 16;\n\t\tvalue ++;\n\n\t\treturn value;\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\" : {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\" : {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector2();\n\t\tvar max = new Vector2();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tlengthManhattan: function() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tdistanceToManhattan: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( Texture.prototype, EventDispatcher.prototype, {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tfunction getDataURL( image ) {\n\n\t\t\tvar canvas;\n\n\t\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tcanvas = image;\n\n\t\t\t} else {\n\n\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = image.width;\n\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t} else {\n\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar output = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: getDataURL( image )\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tmeta.textures[ this.uuid ] = output;\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return;\n\n\t\tuv.multiply( this.repeat );\n\t\tuv.add( this.offset );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\t this.x = 1;\n\t\t\t this.y = 0;\n\t\t\t this.z = 0;\n\n\t\t} else {\n\n\t\t\t this.x = q.x / s;\n\t\t\t this.y = q.y / s;\n\t\t\t this.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tlengthManhattan: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nObject.assign( WebGLRenderTarget.prototype, EventDispatcher.prototype, {\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\tthis.activeMipMapLevel = 0;\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function () {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar v1 = new Vector3();\n\t\tvar r;\n\n\t\tvar EPS = 0.000001;\n\n\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t}\n\n\t\t\tthis._x = v1.x;\n\t\t\tthis._y = v1.y;\n\t\t\tthis._z = v1.z;\n\t\t\tthis._w = r;\n\n\t\t\treturn this.normalize();\n\n\t\t};\n\n\t}(),\n\n\tinverse: function () {\n\n\t\treturn this.conjugate().normalize();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\tthis._z = 0.5 * ( z + this._z );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix =  qw * x + qy * z - qz * y;\n\t\tvar iy =  qw * y + qz * x - qx * z;\n\t\tvar iz =  qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function project( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\tunproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function unproject( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tlengthManhattan: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\n\t\tthis.x = y * v.z - z * v.y;\n\t\tthis.y = z * v.x - x * v.z;\n\t\tthis.z = x * v.y - y * v.x;\n\n\t\treturn this;\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tdistanceToManhattan: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\tthis.x = c.radius * Math.sin( c.theta );\n\t\tthis.y = c.y;\n\t\tthis.z = c.radius * Math.cos( c.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0,       0,       0,       1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// last column\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// bottom row\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = q._x, y = q._y, z = q._z, w = q._w;\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tte[ 0 ] = 1 - ( yy + zz );\n\t\tte[ 4 ] = xy - wz;\n\t\tte[ 8 ] = xz + wy;\n\n\t\tte[ 1 ] = xy + wz;\n\t\tte[ 5 ] = 1 - ( xx + zz );\n\t\tte[ 9 ] = yz - wx;\n\n\t\tte[ 2 ] = xz - wy;\n\t\tte[ 6 ] = yz + wx;\n\t\tte[ 10 ] = 1 - ( xx + yy );\n\n\t\t// last column\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// bottom row\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0,  0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s,  c, 0,\n\t\t\t0, 0,  0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts,  c, 0, 0,\n\t\t\t0,  0, 1, 0,\n\t\t\t0,  0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tthis.makeRotationFromQuaternion( quaternion );\n\t\tthis.scale( scale );\n\t\tthis.setPosition( position );\n\n\t\treturn this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Base for inner nodes (including the root) ---\n\nfunction UniformContainer() {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( renderer, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = renderer.allocTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValue1f( gl, v ) { gl.uniform1f( this.addr, v ); }\nfunction setValue1i( gl, v ) { gl.uniform1i( this.addr, v ); }\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValue2fv( gl, v ) {\n\n\tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\n\telse gl.uniform2f( this.addr, v.x, v.y );\n\n}\n\nfunction setValue3fv( gl, v ) {\n\n\tif ( v.x !== undefined )\n\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\telse if ( v.r !== undefined )\n\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\telse\n\t\tgl.uniform3fv( this.addr, v );\n\n}\n\nfunction setValue4fv( gl, v ) {\n\n\tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\n\telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValue2fm( gl, v ) {\n\n\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\n\n}\n\nfunction setValue3fm( gl, v ) {\n\n\tif ( v.elements === undefined ) {\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t} else {\n\n\t\tmat3array.set( v.elements );\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t}\n\n}\n\nfunction setValue4fm( gl, v ) {\n\n\tif ( v.elements === undefined ) {\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t} else {\n\n\t\tmat4array.set( v.elements );\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, renderer ) {\n\n\tvar unit = renderer.allocTextureUnit();\n\tgl.uniform1i( this.addr, unit );\n\trenderer.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, renderer ) {\n\n\tvar unit = renderer.allocTextureUnit();\n\tgl.uniform1i( this.addr, unit );\n\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValue2iv( gl, v ) { gl.uniform2iv( this.addr, v ); }\nfunction setValue3iv( gl, v ) { gl.uniform3iv( this.addr, v ); }\nfunction setValue4iv( gl, v ) { gl.uniform4iv( this.addr, v ); }\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\n\nfunction setValue1fv( gl, v ) { gl.uniform1fv( this.addr, v ); }\nfunction setValue1iv( gl, v ) { gl.uniform1iv( this.addr, v ); }\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2a( gl, v ) {\n\n\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\n\n}\n\nfunction setValueV3a( gl, v ) {\n\n\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\n\n}\n\nfunction setValueV4a( gl, v ) {\n\n\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2a( gl, v ) {\n\n\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\n\n}\n\nfunction setValueM3a( gl, v ) {\n\n\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\n\n}\n\nfunction setValueM4a( gl, v ) {\n\n\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1a( gl, v, renderer ) {\n\n\tvar n = v.length,\n\t\tunits = allocTexUnits( renderer, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6a( gl, v, renderer ) {\n\n\tvar n = v.length,\n\t\tunits = allocTexUnits( renderer, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tUniformContainer.call( this ); // mix-in\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value ) {\n\n\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t// are not allowed in structured uniforms.\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ] );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\tfor ( ; ; ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program, renderer ) {\n\n\tUniformContainer.call( this );\n\n\tthis.renderer = renderer;\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\tpath = info.name,\n\t\t\taddr = gl.getUniformLocation( program, path );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function () {\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tthis.r = r * r;\n\t\tthis.g = g * g;\n\t\tthis.b = b * b;\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function () {\n\n\t\tthis.r = Math.sqrt( this.r );\n\t\tthis.g = Math.sqrt( this.g );\n\t\tthis.b = Math.sqrt( this.b );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( optionalTarget ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\thsl.h = hue;\n\t\thsl.s = saturation;\n\t\thsl.l = lightness;\n\n\t\treturn hsl;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function ( h, s, l ) {\n\n\t\tvar hsl = this.getHSL();\n\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) }\n\n\t}\n\n};\n\n/**\n * Uniform Utilities\n */\n\nvar UniformsUtils = {\n\n\tmerge: function ( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t},\n\n\tclone: function ( uniforms_src ) {\n\n\t\tvar uniforms_dst = {};\n\n\t\tfor ( var u in uniforms_src ) {\n\n\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn uniforms_dst;\n\n\t}\n\n};\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\nvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat theta = acos( dot( N, V ) );\\n\\tvec2 uv = vec2(\\n\\t\\tsqrt( saturate( roughness ) ),\\n\\t\\tsaturate( theta / ( 0.5 * PI ) ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\\n\\tfloat b = 3.45068 + (4.18814 + y) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transpose( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\\n\\treturn result;\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transpose( const in mat3 v ) {\\n\\tmat3 tmp;\\n\\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\\n\\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\\n\\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\\n\\treturn tmp;\\n}\\n\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\nvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\nvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lights_pars = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltcMat;\\tuniform sampler2D ltcMag;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tfloat norm = texture2D( ltcMag, uv ).a;\\n\\t\\tvec4 t = texture2D( ltcMat, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3(   1,   0, t.y ),\\n\\t\\t\\tvec3(   0, t.z,   0 ),\\n\\t\\t\\tvec3( t.w,   0, t.x )\\n\\t\\t);\\n\\t\\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\nvar lights_template = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\nvar logdepthbuf_fragment = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar tonemapping_pars_fragment = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\nvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\nvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n}\\n\";\n\nvar shadow_vert = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars: lights_pars,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_template: lights_template,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment: normal_fragment,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector2();\n\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector2();\n\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tvar result = optionalTarget || new Vector2();\n\n\t\treturn result.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector2();\n\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction WebGLFlareRenderer( renderer, gl, state, textures, capabilities ) {\n\n\tvar vertexBuffer, elementBuffer;\n\tvar shader, program, attributes, uniforms;\n\n\tvar tempTexture, occlusionTexture;\n\n\tfunction init() {\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t- 1, - 1,  0, 0,\n\t\t\t 1, - 1,  1, 0,\n\t\t\t 1,  1,  1, 1,\n\t\t\t- 1,  1,  0, 1\n\t\t] );\n\n\t\tvar faces = new Uint16Array( [\n\t\t\t0, 1, 2,\n\t\t\t0, 2, 3\n\t\t] );\n\n\t\t// buffers\n\n\t\tvertexBuffer     = gl.createBuffer();\n\t\telementBuffer    = gl.createBuffer();\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t// textures\n\n\t\ttempTexture      = gl.createTexture();\n\t\tocclusionTexture = gl.createTexture();\n\n\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\tshader = {\n\n\t\t\tvertexShader: [\n\n\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\"uniform vec3 screenPosition;\",\n\t\t\t\t\"uniform vec2 scale;\",\n\t\t\t\t\"uniform float rotation;\",\n\n\t\t\t\t\"uniform sampler2D occlusionMap;\",\n\n\t\t\t\t\"attribute vec2 position;\",\n\t\t\t\t\"attribute vec2 uv;\",\n\n\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\"vUV = uv;\",\n\n\t\t\t\t\t\"vec2 pos = position;\",\n\n\t\t\t\t\t\"if ( renderType == 2 ) {\",\n\n\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\n\n\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\n\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\n\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\n\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\n\n\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\n\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\n\n\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( \"\\n\" ),\n\n\t\t\tfragmentShader: [\n\n\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\"uniform sampler2D map;\",\n\t\t\t\t\"uniform float opacity;\",\n\t\t\t\t\"uniform vec3 color;\",\n\n\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t// pink square\n\n\t\t\t\t\t\"if ( renderType == 0 ) {\",\n\n\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\n\n\t\t\t\t\t// restore\n\n\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\n\n\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\n\n\t\t\t\t\t// flare\n\n\t\t\t\t\t\"} else {\",\n\n\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\n\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\n\t\t\t\t\t\t\"gl_FragColor = texture;\",\n\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\n\n\t\t\t\t\t\"}\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( \"\\n\" )\n\n\t\t};\n\n\t\tprogram = createProgram( shader );\n\n\t\tattributes = {\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\n\t\t};\n\n\t\tuniforms = {\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\n\t\t};\n\n\t}\n\n\t/*\n\t * Render lens flares\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n\t *         reads these back and calculates occlusion.\n\t */\n\n\tthis.render = function ( flares, scene, camera, viewport ) {\n\n\t\tif ( flares.length === 0 ) return;\n\n\t\tvar tempPosition = new Vector3();\n\n\t\tvar invAspect = viewport.w / viewport.z,\n\t\t\thalfViewportWidth = viewport.z * 0.5,\n\t\t\thalfViewportHeight = viewport.w * 0.5;\n\n\t\tvar size = 16 / viewport.w,\n\t\t\tscale = new Vector2( size * invAspect, size );\n\n\t\tvar screenPosition = new Vector3( 1, 1, 0 ),\n\t\t\tscreenPositionPixels = new Vector2( 1, 1 );\n\n\t\tvar validArea = new Box2();\n\n\t\tvalidArea.min.set( viewport.x, viewport.y );\n\t\tvalidArea.max.set( viewport.x + ( viewport.z - 16 ), viewport.y + ( viewport.w - 16 ) );\n\n\t\tif ( program === undefined ) {\n\n\t\t\tinit();\n\n\t\t}\n\n\t\tstate.useProgram( program );\n\n\t\tstate.initAttributes();\n\t\tstate.enableAttribute( attributes.vertex );\n\t\tstate.enableAttribute( attributes.uv );\n\t\tstate.disableUnusedAttributes();\n\n\t\t// loop through all lens flares to update their occlusion and positions\n\t\t// setup gl and common used attribs/uniforms\n\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\n\t\tgl.uniform1i( uniforms.map, 1 );\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\tstate.disable( gl.CULL_FACE );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\n\n\t\t\tsize = 16 / viewport.w;\n\t\t\tscale.set( size * invAspect, size );\n\n\t\t\t// calc object screen position\n\n\t\t\tvar flare = flares[ i ];\n\n\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\n\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\n\t\t\ttempPosition.applyMatrix4( camera.projectionMatrix );\n\n\t\t\t// setup arrays for gl programs\n\n\t\t\tscreenPosition.copy( tempPosition );\n\n\t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n\t\t\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\n\t\t\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\n\n\t\t\t// screen cull\n\n\t\t\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\n\n\t\t\t\t// save current RGB to temp texture\n\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t// render pink quad\n\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\n\t\t\t\tstate.disable( gl.BLEND );\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\n\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t// copy result to occlusionMap\n\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t// restore graphics\n\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\n\t\t\t\tstate.disable( gl.DEPTH_TEST );\n\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t// update object positions\n\n\t\t\t\tflare.positionScreen.copy( screenPosition );\n\n\t\t\t\tif ( flare.customUpdateCallback ) {\n\n\t\t\t\t\tflare.customUpdateCallback( flare );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tflare.updateLensFlares();\n\n\t\t\t\t}\n\n\t\t\t\t// render flares\n\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\n\t\t\t\tstate.enable( gl.BLEND );\n\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\n\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\n\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\n\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\n\n\t\t\t\t\t\tscale.x = size * invAspect;\n\t\t\t\t\t\tscale.y = size;\n\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\n\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\n\n\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\n\n\t\t\t\t\t\ttextures.setTexture2D( sprite.texture, 1 );\n\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore gl\n\n\t\tstate.enable( gl.CULL_FACE );\n\t\tstate.enable( gl.DEPTH_TEST );\n\t\tstate.buffers.depth.setMask( true );\n\n\t\tstate.reset();\n\n\t};\n\n\tfunction createProgram( shader ) {\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\n\t\tvar prefix = \"precision \" + capabilities.precision + \" float;\\n\";\n\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\n\n\t\tgl.compileShader( fragmentShader );\n\t\tgl.compileShader( vertexShader );\n\n\t\tgl.attachShader( program, fragmentShader );\n\t\tgl.attachShader( program, vertexShader );\n\n\t\tgl.linkProgram( program );\n\n\t\treturn program;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction WebGLSpriteRenderer( renderer, gl, state, textures, capabilities ) {\n\n\tvar vertexBuffer, elementBuffer;\n\tvar program, attributes, uniforms;\n\n\tvar texture;\n\n\t// decompose matrixWorld\n\n\tvar spritePosition = new Vector3();\n\tvar spriteRotation = new Quaternion();\n\tvar spriteScale = new Vector3();\n\n\tfunction init() {\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t- 0.5, - 0.5,  0, 0,\n\t\t\t  0.5, - 0.5,  1, 0,\n\t\t\t  0.5,   0.5,  1, 1,\n\t\t\t- 0.5,   0.5,  0, 1\n\t\t] );\n\n\t\tvar faces = new Uint16Array( [\n\t\t\t0, 1, 2,\n\t\t\t0, 2, 3\n\t\t] );\n\n\t\tvertexBuffer  = gl.createBuffer();\n\t\telementBuffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\tprogram = createProgram();\n\n\t\tattributes = {\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\n\t\t};\n\n\t\tuniforms = {\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\n\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\n\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\n\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\n\t\t};\n\n\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tcanvas.width = 8;\n\t\tcanvas.height = 8;\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\ttexture = new CanvasTexture( canvas );\n\n\t}\n\n\tthis.render = function ( sprites, scene, camera ) {\n\n\t\tif ( sprites.length === 0 ) return;\n\n\t\t// setup gl\n\n\t\tif ( program === undefined ) {\n\n\t\t\tinit();\n\n\t\t}\n\n\t\tstate.useProgram( program );\n\n\t\tstate.initAttributes();\n\t\tstate.enableAttribute( attributes.position );\n\t\tstate.enableAttribute( attributes.uv );\n\t\tstate.disableUnusedAttributes();\n\n\t\tstate.disable( gl.CULL_FACE );\n\t\tstate.enable( gl.BLEND );\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\tvar oldFogType = 0;\n\t\tvar sceneFogType = 0;\n\t\tvar fog = scene.fog;\n\n\t\tif ( fog ) {\n\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\toldFogType = 1;\n\t\t\t\tsceneFogType = 1;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\toldFogType = 2;\n\t\t\t\tsceneFogType = 2;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\toldFogType = 0;\n\t\t\tsceneFogType = 0;\n\n\t\t}\n\n\n\t\t// update positions and sort\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t}\n\n\t\tsprites.sort( painterSortStable );\n\n\t\t// render all sprites\n\n\t\tvar scale = [];\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\t\t\tvar material = sprite.material;\n\n\t\t\tif ( material.visible === false ) continue;\n\n\t\t\tsprite.onBeforeRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\tvar fogType = 0;\n\n\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\tfogType = sceneFogType;\n\n\t\t\t}\n\n\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\toldFogType = fogType;\n\n\t\t\t}\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t}\n\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\t\t\tstate.buffers.depth.setTest( material.depthTest );\n\t\t\tstate.buffers.depth.setMask( material.depthWrite );\n\n\t\t\ttextures.setTexture2D( material.map || texture, 0 );\n\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\tsprite.onAfterRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t}\n\n\t\t// restore gl\n\n\t\tstate.enable( gl.CULL_FACE );\n\n\t\tstate.reset();\n\n\t};\n\n\tfunction createProgram() {\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform float rotation;',\n\t\t\t'uniform vec2 scale;',\n\t\t\t'uniform vec2 uvOffset;',\n\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t'attribute vec2 position;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'varying vec2 vUV;',\n\n\t\t\t'void main() {',\n\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\n\n\t\t\t\t'vec2 alignedPosition = position * scale;',\n\n\t\t\t\t'vec2 rotatedPosition;',\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t\t'vec4 finalPosition;',\n\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\n\n\t\t\t\t'gl_Position = finalPosition;',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform vec3 color;',\n\t\t\t'uniform sampler2D map;',\n\t\t\t'uniform float opacity;',\n\n\t\t\t'uniform int fogType;',\n\t\t\t'uniform vec3 fogColor;',\n\t\t\t'uniform float fogDensity;',\n\t\t\t'uniform float fogNear;',\n\t\t\t'uniform float fogFar;',\n\t\t\t'uniform float alphaTest;',\n\n\t\t\t'varying vec2 vUV;',\n\n\t\t\t'void main() {',\n\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\n\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\n\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t\t'if ( fogType > 0 ) {',\n\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\n\t\t\t\t\t'float fogFactor = 0.0;',\n\n\t\t\t\t\t'if ( fogType == 1 ) {',\n\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\n\n\t\t\t\t\t'} else {',\n\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\n\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t\t\t'}',\n\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\n\n\t\t\t\t'}',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.compileShader( vertexShader );\n\t\tgl.compileShader( fragmentShader );\n\n\t\tgl.attachShader( program, vertexShader );\n\t\tgl.attachShader( program, fragmentShader );\n\n\t\tgl.linkProgram( program );\n\n\t\treturn program;\n\n\t}\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn b.id - a.id;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nObject.assign( Material.prototype, EventDispatcher.prototype, {\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = meta === undefined;\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.overdraw = source.overdraw;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\tthis.defines = source.defines;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = this.uniforms;\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\treturn data;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( function ( node ) {\n\n\t\t\t\tvar i, l;\n\n\t\t\t\tvar geometry = node.geometry;\n\n\t\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn result.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t},\n\n\tclampPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Sphere();\n\n\t\t\tthis.getCenter( result.center );\n\n\t\t\tresult.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar points = [\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3()\n\t\t];\n\n\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif( this.isEmpty() ) return this;\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, optionalTarget ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\tresult.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tresult.sub( this.center ).normalize();\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\tgetBoundingBox: function ( optionalTarget ) {\n\n\t\tvar box = optionalTarget || new Box3();\n\n\t\tbox.set( this.center, this.center );\n\t\tbox.expandByScalar( this.radius );\n\n\t\treturn box;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[  8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[  9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn result.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p1 = new Vector3(),\n\t\t\tp2 = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.renderReverseSided = true;\n\tthis.renderSingleSided = true;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\t// TODO Clean up (needed in case of contextlost)\n\t\tvar _gl = _renderer.context;\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.disable( _gl.BLEND );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tvar side = material.side;\n\n\t\tif ( scope.renderSingleSided && side == DoubleSide ) {\n\n\t\t\tside = FrontSide;\n\n\t\t}\n\n\t\tif ( scope.renderReverseSided ) {\n\n\t\t\tif ( side === FrontSide ) side = BackSide;\n\t\t\telse if ( side === BackSide ) side = FrontSide;\n\n\t\t}\n\n\t\tresult.side = side;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = {};\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = -1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers[ attribute.uuid ];\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\t\t\n\t\tvar data = buffers[ attribute.uuid ];\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tdelete buffers[ attribute.uuid ];\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers[ attribute.uuid ];\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers[ attribute.uuid ] = createBuffer( attribute, bufferType );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject.assign( Object3D.prototype, EventDispatcher.prototype, {\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects with rotated and/or translated parent(s)\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tif ( this.isCamera ) {\n\n\t\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Quaternion();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldRotation: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldRotation( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Euler();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is '' when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || meta === '' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.geometry !== undefined ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\tthis.projectionMatrix = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = left;\n\tthis.right = right;\n\tthis.top = top;\n\tthis.bottom = bottom;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.view = {\n\t\t\tfullWidth: fullWidth,\n\t\t\tfullHeight: fullHeight,\n\t\t\toffsetX: x,\n\t\t\toffsetY: y,\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function() {\n\n\t\tthis.view = null;\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tthis.view = {\n\t\t\tfullWidth: fullWidth,\n\t\t\tfullHeight: fullHeight,\n\t\t\toffsetX: x,\n\t\t\toffsetY: y,\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tthis.view = null;\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan(\n\t\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( view !== null ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar count = 0;\nfunction GeometryIdCount() { return count++; }\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( Geometry.prototype, EventDispatcher.prototype, {\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tvar tempNormals = [];\n\t\tvar tempUVs = [];\n\t\tvar tempUVs2 = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\treturn offset;\n\n\t},\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeLineDistances: function () {\n\n\t\tvar d = 0;\n\t\tvar vertices = this.vertices;\n\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.lineDistances[ i ] = d;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.uuid = _Math.generateUUID();\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.onUploadCallback = function () {};\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyIndicesArray: function ( indices ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\tvar index = indices[ i ];\n\n\t\t\tarray[ offset ++ ] = index.a;\n\t\t\tarray[ offset ++ ] = index.b;\n\t\t\tarray[ offset ++ ] = index.c;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.indices = [];\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n}\n\nBufferGeometry.MaxIndex = 65535;\n\nObject.assign( BufferGeometry.prototype, EventDispatcher.prototype, {\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\tthis.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\treturn offset;\n\n\t},\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\tif ( geometry.indices.length > 0 ) {\n\n\t\t\tvar TypeArray = arrayMax( geometry.indices ) > 65535 ? Uint32Array : Uint16Array;\n\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\n\t\t\tthis.setIndex( new BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\t\tvar groups = this.groups;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: array\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\n\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\n\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\tresult.subVectors( point, this.origin );\n\t\tvar directionDistance = result.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn result.copy( this.origin );\n\n\t\t}\n\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, optionalTarget ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, optionalTarget );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t :  null;\n\n\t},\n\n\tintersectPlane: function ( plane, optionalTarget ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, optionalTarget );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, optionalTarget ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn result.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tnormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function normal( a, b, c, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tresult.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\tresult.cross( v0 );\n\n\t\t\tvar resultLengthSq = result.lengthSq();\n\t\t\tif ( resultLengthSq > 0 ) {\n\n\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn result.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tbarycoordFromPoint: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn result.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn result.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tvar result = Triangle.barycoordFromPoint( point, a, b, c, v1 );\n\n\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tarea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function area() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tmidpoint: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tnormal: function ( optionalTarget ) {\n\n\t\treturn Triangle.normal( this.a, this.b, this.c, optionalTarget );\n\n\t},\n\n\tplane: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Plane();\n\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\n\n\t\treturn Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar plane = new Plane();\n\t\tvar edgeList = [ new Line3(), new Line3(), new Line3() ];\n\t\tvar projectedPoint = new Vector3();\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function closestPointToPoint( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\tvar minDistance = Infinity;\n\n\t\t\t// project the point onto the plane of the triangle\n\n\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t// check if the projection lies within the triangle\n\n\t\t\tif( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t// if so, this is the closest point\n\n\t\t\t\tresult.copy( projectedPoint );\n\n\t\t\t} else {\n\n\t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n\n\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\tfor( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\tif( distance < minDistance ) {\n\n\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\tresult.copy( closestPoint );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar barycoord = new Vector3();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\tTriangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\n\n\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\treturn uv1.clone();\n\n\t\t}\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar intersection = checkIntersection( object, object.material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\n\n\t\t\t\t}\n\n\t\t\t\tintersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );\n\t\t\t\tintersection.faceIndex = a;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar i, l;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tfor ( i = 0, l = index.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tfor ( i = 0, l = position.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\ta = i;\n\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, geometries, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeCamera, planeMesh;\n\tvar boxMesh;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tpolygonOffset: true,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tvar scale = camera.far;\n\n\t\t\t\t\tthis.matrixWorld.makeScale( scale, scale, scale );\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t\tthis.material.polygonOffsetUnits = scale * 10;\n\n\t\t\t\t};\n\n\t\t\t\tgeometries.update( boxMesh.geometry );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.tCube.value = background;\n\n\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeCamera === undefined ) {\n\n\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t\t\t);\n\n\t\t\t\tgeometries.update( planeMesh.geometry );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.map = background;\n\n\t\t\t// TODO Push this to renderList\n\n\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction push( object, geometry, material, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\trenderItemsIndex ++;\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\t\tvar list = lists[ hash ];\n\n\t\tif ( list === undefined ) {\n\n\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ hash ] = list;\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfoRender.calls ++;\n\t\tinfoRender.vertices += count;\n\n\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\t\telse if ( mode === gl.POINTS ) infoRender.points += count;\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\textension.drawElementsInstancedANGLE( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfoRender.calls ++;\n\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\t\telse if ( mode === gl.POINTS ) infoRender.points += geometry.maxInstancedCount * count;\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, infoRender ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfoRender.calls ++;\n\t\tinfoRender.vertices += count;\n\n\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\t\telse if ( mode === gl.POINTS ) infoRender.points += count;\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar position = geometry.attributes.position;\n\n\t\tif ( position.isInterleavedBufferAttribute ) {\n\n\t\t\tcount = position.data.count;\n\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t} else {\n\n\t\t\textension.drawArraysInstancedANGLE( mode, start, count, geometry.maxInstancedCount );\n\n\t\t}\n\n\t\tinfoRender.calls ++;\n\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\t\telse if ( mode === gl.POINTS ) infoRender.points += geometry.maxInstancedCount * count;\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, infoMemory ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\t// TODO Remove duplicate code\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ geometry.id ];\n\n\t\t}\n\n\t\tattribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfoMemory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfoMemory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\thash: '',\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity controls irradiance of entire light\n\t\t\t\tuniforms.color\n\t\t\t\t\t.copy( color )\n\t\t\t\t\t.multiplyScalar( intensity / ( light.width * light.height ) );\n\n\t\t\t\t// (b) intensity controls the radiance per light area\n\t\t\t\t// uniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5,                0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set(              0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tstate.directional.length = directionalLength;\n\t\tstate.spot.length = spotLength;\n\t\tstate.rectArea.length = rectAreaLength;\n\t\tstate.point.length = pointLength;\n\t\tstate.hemi.length = hemiLength;\n\n\t\t// TODO (sam-g-steel) why aren't we using join\n\t\tstate.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + shadows.length;\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, infoRender ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = infoRender.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction clear() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tclear: clear\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t}\n\n\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear','( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB','( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE','( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM','( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM','( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD','( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = \"Linear\";\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = \"Reinhard\";\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = \"Uncharted2\";\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = \"OptimizedCineon\";\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program, identifiers ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines,\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines,\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\t\t\t'#define UNION_CLIPPING_PLANES ' + (parameters.numClippingPlanes - parameters.numClipIntersection),\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\n\n\t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\n\tif ( ! material.isShaderMaterial ) {\n\n\t\tvertexShader = unrollLoops( vertexShader );\n\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t}\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tvar programLog = gl.getProgramInfoLog( program );\n\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\n\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\n\n\tvar runnable = true;\n\tvar haveDiagnostics = true;\n\n\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\trunnable = false;\n\n\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t} else if ( programLog !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\thaveDiagnostics = false;\n\n\t}\n\n\tif ( haveDiagnostics ) {\n\n\t\tthis.diagnostics = {\n\n\t\t\trunnable: runnable,\n\t\t\tmaterial: material,\n\n\t\t\tprogramLog: programLog,\n\n\t\t\tvertexShader: {\n\n\t\t\t\tlog: vertexLog,\n\t\t\t\tprefix: prefixVertex\n\n\t\t\t},\n\n\t\t\tfragmentShader: {\n\n\t\t\t\tlog: fragmentLog,\n\t\t\t\tprefix: prefixFragment\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function() {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function() {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function() {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, infoMemory ) {\n\n\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );\n\n\t//\n\n\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t// premultiplied alpha.\n\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction makePowerOfTwo( image ) {\n\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = _Math.nearestPowerOfTwo( image.width );\n\t\t\tcanvas.height = _Math.nearestPowerOfTwo( image.height );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tinfoMemory.textures --;\n\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfoMemory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t// cube texture\n\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t} else {\n\n\t\t\t// 2D texture\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\t// remove all webgl properties\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\tinfoMemory.textures ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\tvar extension;\n\n\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfoMemory.textures ++;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\timage = makePowerOfTwo( image );\n\n\t\t}\n\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\tglFormat = utils.convert( texture.format ),\n\t\tglType = utils.convert( texture.type );\n\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t        console.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( !( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfoMemory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t_gl.generateMipmap( target );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = {};\n\n\tfunction get( object ) {\n\n\t\tvar uuid = object.uuid;\n\t\tvar map = properties[ uuid ];\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties[ uuid ] = map;\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tdelete properties[ object.uuid ];\n\n\t}\n\n\tfunction clear() {\n\n\t\tproperties = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tclear: clear\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar capabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tvar version = parseFloat( /^WebGL\\ ([0-9])/.exec( gl.getParameter( gl.VERSION ) )[ 1 ] );\n\tvar lineWidthAvailable = parseFloat( version ) >= 1.0;\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tenable( gl.BLEND );\n\tsetBlending( NormalBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\n\t\t\tattributeDivisors[ attribute ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tcapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tcapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending !== NoBlending ) {\n\n\t\t\tenable( gl.BLEND );\n\n\t\t} else {\n\n\t\t\tdisable( gl.BLEND );\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\tcase AdditiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase SubtractiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MultiplyBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t} else {\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t}\n\n\tfunction setMaterial( material ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tsetFlipSided( material.side === BackSide );\n\n\t\tmaterial.transparent === true\n\t\t\t? setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )\n\t\t\t: setBlending( NoBlending );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true && !! extensions.get( 'EXT_frag_depth' );\n\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\treturn {\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tif ( 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tvar currentSize, currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( device !== null && device.isPresenting ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t} else if ( scope.enabled ) {\n\n\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t}\n\n\t}\n\n\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t//\n\n\tthis.enabled = false;\n\tthis.standing = false;\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( device === null ) return camera;\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tvar pose = frameData.pose;\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\tcamera.position.fromArray( pose.position );\n\n\t\t} else {\n\n\t\t\tcamera.position.set( 0, 0, 0 );\n\n\t\t}\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\tcamera.quaternion.fromArray( pose.orientation );\n\n\t\t}\n\n\t\tcamera.updateMatrixWorld();\n\n\t\tvar stageParameters = device.stageParameters;\n\n\t\tif ( this.standing && stageParameters ) {\n\n\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\t\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\t\tcamera.matrixWorld.multiply( standingMatrix );\n\t\t\tcamera.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t}\n\n\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\tif ( this.standing && stageParameters ) {\n\n\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t}\n\n\t\tvar parent = camera.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t// HACK @mrdoob\n\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t}\n\n\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( device && device.isPresenting ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function() {\n\n\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_etc1':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function() {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function() {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled ||\n\t\t\t\tplanes === null || planes.length === 0 ||\n\t\t\t\trenderingShadows && ! clipShadows ) {\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset;\n\t\t\t\t\t\t\t\t\ti !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).\n\t\t\t\t\t\t\tapplyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\t\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils ( gl, extensions ) {\n\n\tfunction convert ( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return gl.REPEAT;\n\t\tif ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\n\t\tif ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\n\n\t\tif ( p === NearestFilter ) return gl.NEAREST;\n\t\tif ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\n\t\tif ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\n\n\t\tif ( p === LinearFilter ) return gl.LINEAR;\n\t\tif ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\n\t\tif ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\tif ( p === AddEquation ) return gl.FUNC_ADD;\n\t\tif ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\n\t\tif ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\n\n\t\tif ( p === ZeroFactor ) return gl.ZERO;\n\t\tif ( p === OneFactor ) return gl.ONE;\n\t\tif ( p === SrcColorFactor ) return gl.SRC_COLOR;\n\t\tif ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\n\t\tif ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\n\t\tif ( p === DstAlphaFactor ) return gl.DST_ALPHA;\n\t\tif ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\n\n\t\tif ( p === DstColorFactor ) return gl.DST_COLOR;\n\t\tif ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\n\t\tif ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert }\n\n}\n\n// import { Sphere } from '../math/Sphere';\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\n\tvar currentRenderList = null;\n\n\tvar spritesArray = [];\n\tvar flaresArray = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\t\t_currentGeometryProgram = '',\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3(),\n\n\t\t// info\n\n\t\t_infoMemory = {\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\t\t},\n\n\t\t_infoRender = {\n\n\t\t\tframe: 0,\n\t\t\tcalls: 0,\n\t\t\tvertices: 0,\n\t\t\tfaces: 0,\n\t\t\tpoints: 0\n\n\t\t};\n\n\tthis.info = {\n\n\t\trender: _infoRender,\n\t\tmemory: _infoMemory,\n\t\tprograms: null\n\n\t};\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\n\t\t};\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\n\n\t\t\t} else {\n\n\t\t\t\tthrow 'Error creating WebGL context.';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\n\n\t}\n\n\tvar extensions, capabilities, state;\n\tvar properties, textures, attributes, geometries, objects, lights;\n\tvar programCache, renderLists;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\tvar flareRenderer, spriteRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\t\textensions.get( 'WEBGL_depth_texture' );\n\t\textensions.get( 'OES_texture_float' );\n\t\textensions.get( 'OES_texture_float_linear' );\n\t\textensions.get( 'OES_texture_half_float' );\n\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\textensions.get( 'OES_standard_derivatives' );\n\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\t\tBufferGeometry.MaxIndex = 4294967296;\n\n\t\t}\n\n\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tstate = new WebGLState( _gl, extensions, utils );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, _infoMemory );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, _infoMemory );\n\t\tobjects = new WebGLObjects( geometries, _infoRender );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\tlights = new WebGLLights();\n\t\trenderLists = new WebGLRenderLists();\n\n\t\tbackground = new WebGLBackground( _this, state, geometries, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\n\n\t\tflareRenderer = new WebGLFlareRenderer( _this, _gl, state, textures, capabilities );\n\t\tspriteRenderer = new WebGLSpriteRenderer( _this, _gl, state, textures, capabilities );\n\n\t\t_this.info.programs = programCache.programs;\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = new WebVRManager( _this );\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width,\n\t\t\theight: _height\n\t\t};\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tvar device = vr.getDevice();\n\n\t\tif ( device && device.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width * _pixelRatio,\n\t\t\theight: _height * _pixelRatio\n\t\t};\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewport.set( x, _height - y - height, width, height );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t_scissor.set( x, _height - y - height, width, height );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = background.getClearColor;\n\tthis.setClearColor = background.setClearColor;\n\tthis.getClearAlpha = background.getClearAlpha;\n\tthis.setClearAlpha = background.setClearAlpha;\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\n\t\tvr.dispose();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( event ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program, material ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\tif ( ! material.isMeshPhongMaterial &&\n\t\t\t\t! material.isMeshStandardMaterial &&\n\t\t\t\t! material.isMeshNormalMaterial &&\n\t\t\t\tmaterial.flatShading === true ) {\n\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tstate.setMaterial( material );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + ( material.wireframe === true );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = 0;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( startIndex === undefined ) startIndex = 0;\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, ( startIndex * stride + offset ) * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * bytesPerElement );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tlightsArray.push( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tshadowsArray.push( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar isAnimating = false;\n\tvar onAnimationFrame = null;\n\n\tfunction start() {\n\n\t\tif ( isAnimating ) return;\n\t\t( vr.getDevice() || window ).requestAnimationFrame( loop );\n\t\tisAnimating = true;\n\n\t}\n\n\tfunction loop( time ) {\n\n\t\tif ( onAnimationFrame !== null ) onAnimationFrame( time );\n\t\t( vr.getDevice() || window ).requestAnimationFrame( loop );\n\n\t}\n\n\tthis.animate = function ( callback ) {\n\n\t\tonAnimationFrame = callback;\n\t\tstart();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram = '';\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t\tspritesArray.length = 0;\n\t\tflaresArray.length = 0;\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\t_infoRender.frame ++;\n\t\t_infoRender.calls = 0;\n\t\t_infoRender.vertices = 0;\n\t\t_infoRender.faces = 0;\n\t\t_infoRender.points = 0;\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = null;\n\n\t\t}\n\n\t\tthis.setRenderTarget( renderTarget );\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t// custom renderers\n\n\t\tspriteRenderer.render( spritesArray, scene, camera );\n\t\tflareRenderer.render( flaresArray, scene, camera, _currentViewport );\n\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\tif ( renderTarget ) {\n\n\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t};\n\n\t/*\n\t// TODO Duplicated code (Frustum)\n\n\tvar _sphere = new Sphere();\n\n\tfunction isObjectViewable( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null )\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).\n\t\tapplyMatrix4( object.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSpriteViewable( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSphereViewable( sphere ) {\n\n\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\tif ( numPlanes === 0 ) return true;\n\n\t\tvar planes = _this.clippingPlanes,\n\n\t\t\tcenter = sphere.center,\n\t\t\tnegRad = - sphere.radius,\n\t\t\ti = 0;\n\n\t\tdo {\n\n\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t} while ( ++ i !== numPlanes );\n\n\t\treturn true;\n\n\t}\n\t*/\n\n\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\tif ( ! object.visible ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tlightsArray.push( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tshadowsArray.push( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tspritesArray.push( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLensFlare ) {\n\n\t\t\t\tflaresArray.push( object );\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram = '';\n\n\t\t\trenderObjectImmediate( object, program, material );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.lightsHash = lights.state.hash;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t_usedTextureUnits = 0;\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && materialProperties.lightsHash !== lights.state.hash ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\t// Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\t\t\tif ( _currentCamera !== ( _currentArrayCamera || camera ) ) {\n\n\t\t\t\t_currentCamera = ( _currentArrayCamera || camera );\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.nextPowerOfTwo( Math.ceil( size ) );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltcMat !== undefined ) m_uniforms.ltcMat.value = UniformsLib.LTC_MAT_TEXTURE;\n\t\t\tif ( m_uniforms.ltcMag !== undefined ) m_uniforms.ltcMag.value = UniformsLib.LTC_MAG_TEXTURE;\n\n\t\t\tWebGLUniforms.upload(\n\t\t\t\t_gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t}\n\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tvar offset = uvScaleMap.offset;\n\t\t\tvar repeat = uvScaleMap.repeat;\n\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tvar offset = material.map.offset;\n\t\t\tvar repeat = material.map.repeat;\n\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t// GL state setting\n\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\n\n\t\tstate.setCullFace( cullFace );\n\t\tstate.setFlipSided( frontFaceDirection === FrontFaceDirectionCW );\n\n\t};\n\n\t// Textures\n\n\tfunction allocTextureUnit() {\n\n\t\tvar textureUnit = _usedTextureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\t_usedTextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tthis.allocTextureUnit = allocTextureUnit;\n\n\t// this.setTexture2D = setTexture2D;\n\tthis.setTexture2D = ( function () {\n\n\t\tvar warned = false;\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTexture( texture, slot ) {\n\n\t\t\tif ( ! warned ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\twarned = true;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTextureCube = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = null;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2 ( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nFogExp2.prototype.clone = function () {\n\n\treturn new FogExp2( this.color.getHex(), this.density );\n\n};\n\nFogExp2.prototype.toJSON = function ( meta ) {\n\n\treturn {\n\t\ttype: 'FogExp2',\n\t\tcolor: this.color.getHex(),\n\t\tdensity: this.density\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog ( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nFog.prototype.isFog = true;\n\nFog.prototype.clone = function () {\n\n\treturn new Fog( this.color.getHex(), this.near, this.far );\n\n};\n\nFog.prototype.toJSON = function ( meta ) {\n\n\treturn {\n\t\ttype: 'Fog',\n\t\tcolor: this.color.getHex(),\n\t\tnear: this.near,\n\t\tfar: this.far\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene () {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction LensFlare( texture, size, distance, blending, color ) {\n\n\tObject3D.call( this );\n\n\tthis.lensFlares = [];\n\n\tthis.positionScreen = new Vector3();\n\tthis.customUpdateCallback = undefined;\n\n\tif ( texture !== undefined ) {\n\n\t\tthis.add( texture, size, distance, blending, color );\n\n\t}\n\n}\n\nLensFlare.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LensFlare,\n\n\tisLensFlare: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.positionScreen.copy( source.positionScreen );\n\t\tthis.customUpdateCallback = source.customUpdateCallback;\n\n\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\n\n\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( texture, size, distance, blending, color, opacity ) {\n\n\t\tif ( size === undefined ) size = - 1;\n\t\tif ( distance === undefined ) distance = 0;\n\t\tif ( opacity === undefined ) opacity = 1;\n\t\tif ( color === undefined ) color = new Color( 0xffffff );\n\t\tif ( blending === undefined ) blending = NormalBlending;\n\n\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\n\n\t\tthis.lensFlares.push( {\n\t\t\ttexture: texture,\t// THREE.Texture\n\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\n\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\n\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\n\t\t\tscale: 1, \t\t// scale\n\t\t\trotation: 0, \t\t// rotation\n\t\t\topacity: opacity,\t// opacity\n\t\t\tcolor: color,\t\t// color\n\t\t\tblending: blending\t// blending\n\t\t} );\n\n\t},\n\n\t/*\n\t * Update lens flares update positions on all flares based on the screen position\n\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n\t */\n\n\tupdateLensFlares: function () {\n\n\t\tvar f, fl = this.lensFlares.length;\n\t\tvar flare;\n\t\tvar vecX = - this.positionScreen.x * 2;\n\t\tvar vecY = - this.positionScreen.y * 2;\n\n\t\tfor ( f = 0; f < fl; f ++ ) {\n\n\t\t\tflare = this.lensFlares[ f ];\n\n\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\n\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\n\n\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\n\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *\tuvOffset: new THREE.Vector2(),\n *\tuvScale: new THREE.Vector2()\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldPosition = new Vector3();\n\t\tvar worldScale = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldPosition.setFromMatrixPosition( this.matrixWorld );\n\t\t\traycaster.ray.closestPointToPoint( worldPosition, intersectPoint );\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tvar guessSizeSq = worldScale.x * worldScale.y / 4;\n\n\t\t\tif ( worldPosition.distanceToSquared( intersectPoint ) > guessSizeSq ) return;\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n\tvar bones = this.initBones();\n\tvar skeleton = new Skeleton( bones );\n\n\tthis.bind( skeleton, this.matrixWorld );\n\n\tthis.normalizeSkinWeights();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tinitBones: function () {\n\n\t\tvar bones = [], bone, gbone;\n\t\tvar i, il;\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t// create new 'Bone' object\n\n\t\t\t\tbone = new Bone();\n\t\t\t\tbones.push( bone );\n\n\t\t\t\t// apply values\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\t// second, create bone hierarchy\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t// let's update the corresponding matrices\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn bones;\n\n\t},\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar scale, i;\n\n\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\tscale = 1.0 / sw.lengthManhattan();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\tvar vec = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\tscale = 1.0 / vec.lengthManhattan();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\treturn new LineSegments( geometry, material );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\t\t\tvar precisionSq = precision * precision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = (this && this.isLineSegments) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.generateMipmaps = false;\n\n\tvar scope = this;\n\n\tfunction update() {\n\n\t\trequestAnimationFrame( update );\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tscope.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tupdate();\n\n}\n\nVideoTexture.prototype = Object.create( Texture.prototype );\nVideoTexture.prototype.constructor = VideoTexture;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tp0 = func( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tp1 = func( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tp1 = func( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tp1 = func( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tp1 = func( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n \tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\n\t];\n\n\tvar indices = [\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,    - 1, - 1,  1,\n\t\t- 1,  1, - 1,    - 1,  1,  1,\n\t\t  1, - 1, - 1,     1, - 1,  1,\n\t\t  1,  1, - 1,     1,  1,  1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t,     0, - r,  t,\n\t\t 0,  r, - t,     0,  r,  t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t,  0,    - r,  t,  0,\n\t\t r, - t,  0,     r,  t,  0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t,  0, - r,     t,  0, - r,\n\t\t- t,  0,  r,     t,  0,  r\n\t];\n\n\tvar indices = [\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tvar P = path.getPointAt( i / tubularSegments );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin =   Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 100;\n\ttube = tube || 40;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 100;\n\ttube = tube || 40;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\ttriangulate: ( function () {\n\n\t\t/**\n\t\t * This code is a quick port of code written in C++ which was submitted to\n\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\n\t\t * See original code and more information here:\n\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n\t\t *\n\t\t * ported to actionscript by Zevan Rosser\n\t\t * www.actionsnippet.com\n\t\t *\n\t\t * ported to javascript by Joshua Koo\n\t\t * http://www.lab4games.net/zz85/blog\n\t\t *\n\t\t */\n\n\t\tfunction snip( contour, u, v, w, n, verts ) {\n\n\t\t\tvar p;\n\t\t\tvar ax, ay, bx, by;\n\t\t\tvar cx, cy, px, py;\n\n\t\t\tax = contour[ verts[ u ] ].x;\n\t\t\tay = contour[ verts[ u ] ].y;\n\n\t\t\tbx = contour[ verts[ v ] ].x;\n\t\t\tby = contour[ verts[ v ] ].y;\n\n\t\t\tcx = contour[ verts[ w ] ].x;\n\t\t\tcy = contour[ verts[ w ] ].y;\n\n\t\t\tif ( ( bx - ax ) * ( cy - ay ) - ( by - ay ) * ( cx - ax ) <= 0 ) return false;\n\n\t\t\tvar aX, aY, bX, bY, cX, cY;\n\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\n\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\n\n\t\t\taX = cx - bx;  aY = cy - by;\n\t\t\tbX = ax - cx;  bY = ay - cy;\n\t\t\tcX = bx - ax;  cY = by - ay;\n\n\t\t\tfor ( p = 0; p < n; p ++ ) {\n\n\t\t\t\tpx = contour[ verts[ p ] ].x;\n\t\t\t\tpy = contour[ verts[ p ] ].y;\n\n\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\n\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\n\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\n\n\t\t\t\tapx = px - ax;  apy = py - ay;\n\t\t\t\tbpx = px - bx;  bpy = py - by;\n\t\t\t\tcpx = px - cx;  cpy = py - cy;\n\n\t\t\t\t// see if p is inside triangle abc\n\n\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\n\t\t\t\tcCROSSap = cX * apy - cY * apx;\n\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\n\n\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// takes in an contour array and returns\n\n\t\treturn function triangulate( contour, indices ) {\n\n\t\t\tvar n = contour.length;\n\n\t\t\tif ( n < 3 ) return null;\n\n\t\t\tvar result = [],\n\t\t\t\tverts = [],\n\t\t\t\tvertIndices = [];\n\n\t\t\t/* we want a counter-clockwise polygon in verts */\n\n\t\t\tvar u, v, w;\n\n\t\t\tif ( ShapeUtils.area( contour ) > 0.0 ) {\n\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\n\n\t\t\t} else {\n\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\n\n\t\t\t}\n\n\t\t\tvar nv = n;\n\n\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\n\n\t\t\tvar count = 2 * nv;   /* error detection */\n\n\t\t\tfor ( v = nv - 1; nv > 2; ) {\n\n\t\t\t\t/* if we loop, it is probably a non-simple polygon */\n\n\t\t\t\tif ( ( count -- ) <= 0 ) {\n\n\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\n\n\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\n\t\t\t\t\t//return null;\n\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\n\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\n\n\t\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\t\treturn result;\n\n\t\t\t\t}\n\n\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\n\n\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\n\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\n\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\n\n\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\n\n\t\t\t\t\tvar a, b, c, s, t;\n\n\t\t\t\t\t/* true names of the vertices */\n\n\t\t\t\t\ta = verts[ u ];\n\t\t\t\t\tb = verts[ v ];\n\t\t\t\t\tc = verts[ w ];\n\n\t\t\t\t\t/* output Triangle */\n\n\t\t\t\t\tresult.push( [ contour[ a ],\n\t\t\t\t\t\tcontour[ b ],\n\t\t\t\t\t\tcontour[ c ] ] );\n\n\n\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\n\n\t\t\t\t\t/* remove v from the remaining polygon */\n\n\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\n\n\t\t\t\t\t\tverts[ s ] = verts[ t ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnv --;\n\n\t\t\t\t\t/* reset error detection counter */\n\n\t\t\t\t\tcount = 2 * nv;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( indices ) return vertIndices;\n\t\t\treturn result;\n\n\t\t};\n\n\t} )(),\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tfunction removeDupEndPts(points) {\n\n\t\t\tvar l = points.length;\n\n\t\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t\tremoveDupEndPts( contour );\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\n\n\t\t\t// inOtherPt needs to be collinear to the inSegment\n\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\n\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\n\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\n\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\n\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\n\n\t\t\t\t// not parallel\n\n\t\t\t\tvar perpSeg2;\n\t\t\t\tif ( limit > 0 ) {\n\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\n\n\t\t\t\t}\n\n\t\t\t\t// i.e. to reduce rounding errors\n\t\t\t\t// intersection at endpoint of segment#1?\n\t\t\t\tif ( perpSeg2 === 0 ) {\n\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t}\n\t\t\t\tif ( perpSeg2 === limit ) {\n\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\treturn [ inSeg1Pt2 ];\n\n\t\t\t\t}\n\t\t\t\t// intersection at endpoint of segment#2?\n\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\n\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\n\n\t\t\t\t// return real intersection point\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\n\n\t\t\t} else {\n\n\t\t\t\t// parallel or collinear\n\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\n\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\n\n\t\t\t\t// they are collinear or degenerate\n\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\n\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\n\t\t\t\t// both segments are points\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\n\n\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\n\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\n\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\n\n\t\t\t\t}\n\t\t\t\t// segment#1  is a single point\n\t\t\t\tif ( seg1Pt ) {\n\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\n\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t}\n\t\t\t\t// segment#2  is a single point\n\t\t\t\tif ( seg2Pt ) {\n\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\n\t\t\t\t\treturn [ inSeg2Pt1 ];\n\n\t\t\t\t}\n\n\t\t\t\t// they are collinear segments, which might overlap\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\n\t\t\t\tif ( seg1dx !== 0 ) {\n\n\t\t\t\t\t// the segments are NOT on a vertical line\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\n\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\n\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// the segments are on a vertical line\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\n\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\n\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\n\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\n\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\n\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\treturn [ seg2min ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\n\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\n\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\treturn [ seg1min ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\n\n\t\t\t// The order of legs is important\n\n\t\t\t// translation of all points, so that Vertex is at (0,0)\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\n\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\n\n\t\t\t\t// angle != 180 deg.\n\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n\t\t\t\tif ( from2toAngle > 0 ) {\n\n\t\t\t\t\t// main angle < 180 deg.\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// main angle > 180 deg.\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// angle == 180 deg.\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n\t\t\t\treturn\t( from2otherAngle > 0 );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tfunction removeHoles( contour, holes ) {\n\n\t\t\tvar shape = contour.concat(); // work on this shape\n\t\t\tvar hole;\n\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\n\n\t\t\t\t// Check if hole point lies within angle around shape point\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\n\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\n\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\n\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\n\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\t// Check if shape point lies within angle around hole point\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\n\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\n\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\n\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\n\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\treturn\ttrue;\n\n\t\t\t}\n\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t// checks for intersections with shape edges\n\t\t\t\tvar sIdx, nextIdx, intersection;\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\n\n\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t}\n\n\t\t\t\treturn\tfalse;\n\n\t\t\t}\n\n\t\t\tvar indepHoles = [];\n\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t// checks for intersections with hole edges\n\t\t\t\tvar ihIdx, chkHole,\n\t\t\t\t\thIdx, nextIdx, intersection;\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\n\n\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ] ];\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\n\n\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\treturn\tfalse;\n\n\t\t\t}\n\n\t\t\tvar holeIndex, shapeIndex,\n\t\t\t\tshapePt, holePt,\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\n\t\t\t\ttmpShape1, tmpShape2,\n\t\t\t\ttmpHole1, tmpHole2;\n\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tindepHoles.push( h );\n\n\t\t\t}\n\n\t\t\tvar minShapeIndex = 0;\n\t\t\tvar counter = indepHoles.length * 2;\n\t\t\twhile ( indepHoles.length > 0 ) {\n\n\t\t\t\tcounter --;\n\t\t\t\tif ( counter < 0 ) {\n\n\t\t\t\t\tconsole.log( 'THREE.ShapeUtils: Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!' );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// search for shape-vertex and hole-vertex,\n\t\t\t\t// which can be connected without intersections\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\n\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\n\t\t\t\t\tholeIndex\t= - 1;\n\n\t\t\t\t\t// search for hole which can be reached without intersections\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\n\n\t\t\t\t\t\tholeIdx = indepHoles[ h ];\n\n\t\t\t\t\t\t// prevent multiple checks\n\t\t\t\t\t\tcutKey = shapePt.x + ':' + shapePt.y + ':' + holeIdx;\n\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\n\n\t\t\t\t\t\thole = holes[ holeIdx ];\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\n\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\n\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\n\n\t\t\t\t\t\t\tholeIndex = h2;\n\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\n\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\n\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\n\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\n\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn shape; \t\t\t/* shape with no holes */\n\n\t\t}\n\n\n\t\tvar i, il, f, face,\n\t\t\tkey, index,\n\t\t\tallPointsMap = {};\n\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n\t\tvar allpoints = contour.concat();\n\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\n\n\t\t}\n\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\n\n\t\t// prepare all points map\n\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\n\n\t\t\tkey = allpoints[ i ].x + ':' + allpoints[ i ].y;\n\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Duplicate point', key, i );\n\n\t\t\t}\n\n\t\t\tallPointsMap[ key ] = i;\n\n\t\t}\n\n\t\t// remove holes by cutting paths to holes and adding them to the shape\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\n\n\t\tvar triangles = ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\n\t\t//console.log( \"triangles\",triangles, triangles.length );\n\n\t\t// check all face vertices against all points map\n\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\n\n\t\t\tface = triangles[ i ];\n\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\n\n\t\t\t\tkey = face[ f ].x + ':' + face[ f ].y;\n\n\t\t\t\tindex = allPointsMap[ key ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tface[ f ] = index;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn triangles.concat();\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  amount: <int>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *  frames: <Object> // containing arrays of tangents, normals, binormals\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tif ( typeof ( shapes ) === \"undefined\" ) {\n\n\t\treturn;\n\n\t}\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tthis.addShapeList( shapes, options );\n\n\tthis.computeVertexNormals();\n\n\t// can't really use automatic vertex normals\n\t// as then front and back sides get smoothed too\n\t// should do separate smoothing just for sides\n\n\t//this.computeVertexNormals();\n\n\t//console.log( \"took\", ( Date.now() - startTime ) );\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.getArrays = function () {\n\n\tvar positionAttribute = this.getAttribute( \"position\" );\n\tvar verticesArray = positionAttribute ? Array.prototype.slice.call( positionAttribute.array ) : [];\n\n\tvar uvAttribute = this.getAttribute( \"uv\" );\n\tvar uvArray = uvAttribute ? Array.prototype.slice.call( uvAttribute.array ) : [];\n\n\tvar IndexAttribute = this.index;\n\tvar indicesArray = IndexAttribute ? Array.prototype.slice.call( IndexAttribute.array ) : [];\n\n\treturn {\n\t\tposition: verticesArray,\n\t\tuv: uvArray,\n\t\tindex: indicesArray\n\t};\n\n};\n\nExtrudeBufferGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\tvar sl = shapes.length;\n\toptions.arrays = this.getArrays();\n\n\tfor ( var s = 0; s < sl; s ++ ) {\n\n\t\tvar shape = shapes[ s ];\n\t\tthis.addShape( shape, options );\n\n\t}\n\n\tthis.setIndex( options.arrays.index );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( options.arrays.position, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );\n\n};\n\nExtrudeBufferGeometry.prototype.addShape = function ( shape, options ) {\n\n\tvar arrays = options.arrays ? options.arrays : this.getArrays();\n\tvar verticesArray = arrays.position;\n\tvar indicesArray = arrays.index;\n\tvar uvArray = arrays.uv;\n\n\tvar placeholder = [];\n\n\n\tvar amount = options.amount !== undefined ? options.amount : 100;\n\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\tvar steps = options.steps !== undefined ? options.steps : 1;\n\n\tvar extrudePath = options.extrudePath;\n\tvar extrudePts, extrudeByPath = false;\n\n\t// Use default WorldUVGenerator if no UV generators are specified.\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;\n\n\tvar splineTube, binormal, normal, position2;\n\tif ( extrudePath ) {\n\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\textrudeByPath = true;\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t// SETUP TNB variables\n\n\t\t// TODO1 - have a .isClosed in spline?\n\n\t\tsplineTube = options.frames !== undefined ? options.frames : extrudePath.computeFrenetFrames( steps, false );\n\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\tbinormal = new Vector3();\n\t\tnormal = new Vector3();\n\t\tposition2 = new Vector3();\n\n\t}\n\n\t// Safeguards if bevels are not enabled\n\n\tif ( ! bevelEnabled ) {\n\n\t\tbevelSegments = 0;\n\t\tbevelThickness = 0;\n\t\tbevelSize = 0;\n\n\t}\n\n\t// Variables initialization\n\n\tvar ahole, h, hl; // looping of holes\n\tvar scope = this;\n\n\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\tvar vertices = shapePoints.shape;\n\tvar holes = shapePoints.holes;\n\n\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\tif ( reverse ) {\n\n\t\tvertices = vertices.reverse();\n\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t/* Vertices */\n\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\tahole = holes[ h ];\n\n\t\tvertices = vertices.concat( ahole );\n\n\t}\n\n\n\tfunction scalePt2( pt, vec, size ) {\n\n\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t}\n\n\tvar b, bs, t, z,\n\t\tvert, vlen = vertices.length,\n\t\tface, flen = faces.length;\n\n\n\t// Find directions for point movement\n\n\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t//\n\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t// check for collinear edges\n\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t// not collinear\n\n\t\t\t// length of vectors for normalizing\n\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t// vector from inPt to intersection point\n\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t//  but prevent crazy spikes\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t} else {\n\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// handle special case of collinear edges\n\n\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( direction_eq ) {\n\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t} else {\n\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t}\n\n\n\tvar contourMovements = [];\n\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\tif ( j === il ) j = 0;\n\t\tif ( k === il ) k = 0;\n\n\t\t//  (j)---(i)---(k)\n\t\t// console.log('i,j,k', i, j , k)\n\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t}\n\n\tvar holesMovements = [],\n\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\tahole = holes[ h ];\n\n\t\toneHoleMovements = [];\n\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t}\n\n\t\tholesMovements.push( oneHoleMovements );\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t}\n\n\n\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\tt = b / bevelSegments;\n\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t// contract shape\n\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\tv( vert.x, vert.y, - z );\n\n\t\t}\n\n\t\t// expand holes\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tbs = bevelSize;\n\n\t// Back facing vertices\n\n\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\tif ( ! extrudeByPath ) {\n\n\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t} else {\n\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t}\n\n\t}\n\n\t// Add stepped vertices...\n\t// Including front facing vertices\n\n\tvar s;\n\n\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\t// Add bevel segments planes\n\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\tt = b / bevelSegments;\n\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t// contract shape\n\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t}\n\n\t\t// expand holes\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/* Faces */\n\n\t// Top and bottom faces\n\n\tbuildLidFaces();\n\n\t// Sides faces\n\n\tbuildSideFaces();\n\n\n\t/////  Internal functions\n\n\tfunction buildLidFaces() {\n\n\t\tvar start = verticesArray.length/3;\n\n\t\tif ( bevelEnabled ) {\n\n\t\t\tvar layer = 0; // steps + 1\n\t\t\tvar offset = vlen * layer;\n\n\t\t\t// Bottom faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t}\n\n\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\toffset = vlen * layer;\n\n\t\t\t// Top faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Bottom faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t}\n\n\t\t\t// Top faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.addGroup( start, verticesArray.length/3 -start, options.material !== undefined ? options.material : 0);\n\n\t}\n\n\t// Create faces for the z-sides of the shape\n\n\tfunction buildSideFaces() {\n\n\t\tvar start = verticesArray.length/3;\n\t\tvar layeroffset = 0;\n\t\tsidewalls( contour, layeroffset );\n\t\tlayeroffset += contour.length;\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t//, true\n\t\t\tlayeroffset += ahole.length;\n\n\t\t}\n\n\n\t\tscope.addGroup( start, verticesArray.length/3 -start, options.extrudeMaterial !== undefined ? options.extrudeMaterial : 1);\n\n\n\t}\n\n\tfunction sidewalls( contour, layeroffset ) {\n\n\t\tvar j, k;\n\t\ti = contour.length;\n\n\t\twhile ( -- i >= 0 ) {\n\n\t\t\tj = i;\n\t\t\tk = i - 1;\n\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\tvar s = 0,\n\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction v( x, y, z ) {\n\n\t\tplaceholder.push( x );\n\t\tplaceholder.push( y );\n\t\tplaceholder.push( z );\n\n\t}\n\n\n\tfunction f3( a, b, c ) {\n\n\t\taddVertex( a );\n\t\taddVertex( b );\n\t\taddVertex( c );\n\n\t\tvar nextIndex = verticesArray.length / 3;\n\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\taddUV( uvs[ 0 ] );\n\t\taddUV( uvs[ 1 ] );\n\t\taddUV( uvs[ 2 ] );\n\n\t}\n\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\n\n\t\taddVertex( a );\n\t\taddVertex( b );\n\t\taddVertex( d );\n\n\t\taddVertex( b );\n\t\taddVertex( c );\n\t\taddVertex( d );\n\n\n\t\tvar nextIndex = verticesArray.length / 3;\n\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\taddUV( uvs[ 0 ] );\n\t\taddUV( uvs[ 1 ] );\n\t\taddUV( uvs[ 3 ] );\n\n\t\taddUV( uvs[ 1 ] );\n\t\taddUV( uvs[ 2 ] );\n\t\taddUV( uvs[ 3 ] );\n\n\t}\n\n\tfunction addVertex( index ) {\n\n\t\tindicesArray.push( verticesArray.length / 3 );\n\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t}\n\n\n\tfunction addUV( vector2 ) {\n\n\t\tuvArray.push( vector2.x );\n\t\tuvArray.push( vector2.y );\n\n\t}\n\n\tif ( ! options.arrays ) {\n\n\t\tthis.setIndex( indicesArray );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );\n\n\t}\n\n};\n\nExtrudeGeometry.WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry(  text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 50;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 20;\n\touterRadius = outerRadius || 50;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t// also check if holes are in the opposite direction\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n\theight = height !== undefined ? height : 100;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 50;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>,\n *  opacity: <float>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.opacity = 1.0;\n\n\tthis.lights = true;\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = window.decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = window.atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t \tresponse = new ArrayBuffer( data.length );\n\n\t\t\t\t\t\tvar view = new Uint8Array( response );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ response ], { type: mimeType } );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar request = new XMLHttpRequest();\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = event.target.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tif ( this.status === 200 ) {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else if ( this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\tif ( onProgress !== undefined ) {\n\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\t\tonProgress( event );\n\n\t\t\t\t}, false );\n\n\t\t\t}\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'Anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\timage.addEventListener( 'load', function () {\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}, false );\n\n\t\t/*\n\t\timage.addEventListener( 'progress', function ( event ) {\n\n\t\t\tif ( onProgress ) onProgress( event );\n\n\t\t}, false );\n\t\t*/\n\n\t\timage.addEventListener( 'error', function ( event ) {\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t}, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'Anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'Anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar texture = new Texture();\n\t\ttexture.image = loader.load( url, function () {\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\treturn this.intensity * Math.PI;\n\t\t},\n\t\tset: function ( power ) {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.position.set( 0, 1, 0 );\n\tthis.updateMatrix();\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n\t// TODO (abelnation): distance/decay\n\n\t// TODO (abelnation): update method for RectAreaLight to update transform to lookat target\n\n\t// TODO (abelnation): shadows\n\n}\n\n// TODO (abelnation): RectAreaLight update when light shape is changed\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[   i1   ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[   i1   ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\tthrow new Error( \"call to abstract method\" );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call(\n\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = -0;\n\tthis._offsetPrev = -0;\n\tthis._weightNext = -0;\n\tthis._offsetNext = -0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: \tZeroCurvatureEnding,\n\t\tendingEnd:\t\tZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\n\t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\n\t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\n\t\tvar sN =       wN   * ppp   -           wN      * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\nvar KeyframeTrackPrototype;\n\nKeyframeTrackPrototype = {\n\n\tTimeBufferType: Float32Array,\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant(\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant(\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant(\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrackPrototype:', message );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) -- to;\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.\n\t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else keep = true;\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j )\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n};\n\nfunction KeyframeTrackConstructor( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( \"track name is undefined\" );\n\n\tif ( times === undefined || times.length === 0 ) {\n\n\t\tthrow new Error( \"no keyframes in track named \" + name );\n\n\t}\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\tthis.validate();\n\tthis.optimize();\n\n}\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype =\n\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0,\n\t\t\t\t\tvalues, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype =\n\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function( result ) {\n\n\t\treturn new QuaternionLinearInterpolant(\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype =\n\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype =\n\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrackConstructor.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype =\n\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype =\n\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrackConstructor.apply( this, arguments );\n\n}\n\nKeyframeTrack.prototype = KeyframeTrackPrototype;\nKeyframeTrackPrototype.constructor = KeyframeTrack;\n\n// Static methods:\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tparse: function( json ) {\n\n\t\tif( json.type === undefined ) {\n\n\t\t\tthrow new Error( \"track type undefined, can not parse\" );\n\n\t\t}\n\n\t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\tif ( json.times === undefined ) {\n\n\t\t\tvar times = [], values = [];\n\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\n\t\t}\n\n\t\t// derived classes can define a static parse method\n\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\treturn trackType.parse( json );\n\n\t\t} else {\n\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType(\n\t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t},\n\n\t_getTrackTypeForValueTypeName: function( typeName ) {\n\n\t\tswitch( typeName.toLowerCase() ) {\n\n\t\t\tcase \"scalar\":\n\t\t\tcase \"double\":\n\t\t\tcase \"float\":\n\t\t\tcase \"number\":\n\t\t\tcase \"integer\":\n\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase \"vector\":\n\t\t\tcase \"vector2\":\n\t\t\tcase \"vector3\":\n\t\t\tcase \"vector4\":\n\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase \"color\":\n\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase \"quaternion\":\n\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase \"bool\":\n\t\t\tcase \"boolean\":\n\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase \"string\":\n\n\t\t\t\treturn StringKeyframeTrack;\n\n\t\t}\n\n\t\tthrow new Error( \"Unsupported typeName: \" + typeName );\n\n\t}\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n\tthis.optimize();\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\ti,\n\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\ttimes, values\n\t\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {\n\n\tthis.onLoadStart = function () {};\n\tthis.onLoadProgress = function () {};\n\tthis.onLoadComplete = function () {};\n\n}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: undefined,\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar parts = url.split( '/' );\n\n\t\tif ( parts.length === 1 ) return './';\n\n\t\tparts.pop();\n\n\t\treturn parts.join( '/' ) + '/';\n\n\t},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = [ value, value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction JSONLoader( manager ) {\n\n\tif ( typeof manager === 'boolean' ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\tmanager = undefined;\n\n\t}\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.withCredentials = false;\n\n}\n\nObject.assign( JSONLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : Loader.prototype.extractUrlBase( url );\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = JSON.parse( text );\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\tvar type = metadata.type;\n\n\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\n\t},\n\n\tparse: ( function () {\n\n\t\tfunction parseModel( json, geometry ) {\n\n\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t}\n\n\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tscale = json.scale,\n\n\t\t\t\tnUvLayers = 0;\n\n\n\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t// disregard empty arrays\n\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = vertices.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\tvertex = new Vector3();\n\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = faces.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\toffset += 4;\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface = new Face3();\n\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.bones = json.bones;\n\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\tvar scale = json.scale;\n\n\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\tvar outputAnimations = [];\n\n\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\tvar animations = [];\n\n\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\tanimations.push( json.animation );\n\n\t\t\t}\n\n\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t}\n\n\t\t\t// parse implicit morph animations\n\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t}\n\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t}\n\n\t\treturn function ( json, texturePath ) {\n\n\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t// Geometry 4.0 spec\n\t\t\t\tjson = json.data;\n\n\t\t\t}\n\n\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t} else {\n\n\t\t\t\tjson.scale = 1.0;\n\n\t\t\t}\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tparseModel( json, geometry );\n\t\t\tparseSkin( json, geometry );\n\t\t\tparseMorphing( json, geometry );\n\t\t\tparseAnimations( json, geometry );\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.texturePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.texturePath === '' ) {\n\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t}\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar geometries = this.parseGeometries( json.geometries );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseGeometries: function ( json ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof( value ) === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture = new Texture( images[ data.image ] );\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function parseObject( data, geometries, materials ) {\n\n\t\t\tvar object;\n\n\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn geometries[ name ];\n\n\t\t\t}\n\n\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array;\n\n\t\t\t\t}\n\n\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn materials[ name ];\n\n\t\t\t}\n\n\t\t\tswitch ( data.type ) {\n\n\t\t\t\tcase 'Scene':\n\n\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\n\t\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LOD':\n\n\t\t\t\t\tobject = new LOD();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\n\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineLoop':\n\n\t\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineSegments':\n\n\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointCloud':\n\t\t\t\tcase 'Points':\n\n\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\n\t\t\t\t\tobject = new Group();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tobject = new Object3D();\n\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\n\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\tmatrix.fromArray( data.matrix );\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t} else {\n\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t\t}\n\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\t\tif ( data.shadow ) {\n\n\t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t\t}\n\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\tvar children = data.children;\n\n\t\t\t\tfor ( var  i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\tvar levels = data.levels;\n\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t};\n\n\t}()\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint(t), getTangent(t)\n * .getPointAt(u), getTangentAt(u)\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n} );\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t ) {\n\n\tif ( t === 1 ) {\n\n\t\treturn this.v2.clone();\n\n\t}\n\n\tvar point = this.v2.clone().sub( this.v1 );\n\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u ) {\n\n\treturn this.getPoint( u );\n\n};\n\nLineCurve.prototype.getTangent = function ( t ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.curves = [];\n\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = (curve && curve.isEllipseCurve) ? divisions * 2\n\t\t\t\t: (curve && curve.isLineCurve) ? 1\n\t\t\t\t: (curve && curve.isSplineCurve) ? divisions * curve.points.length\n\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && !points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t/**************************************************************\n\t *\tCreate Geometries Helpers\n\t **************************************************************/\n\n\t/// Generate geometry from path points (for Line or Points objects)\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\t// Generate geometry from equidistant sampling along the path\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.aX = aX;\n\tthis.aY = aY;\n\n\tthis.xRadius = xRadius;\n\tthis.yRadius = yRadius;\n\n\tthis.aStartAngle = aStartAngle;\n\tthis.aEndAngle = aEndAngle;\n\n\tthis.aClockwise = aClockwise;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t ) {\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn new Vector2( x, y );\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.points = ( points === undefined ) ? [] : points;\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t ) {\n\n\tvar points = this.points;\n\tvar point = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( point );\n\tvar weight = point - intPoint;\n\n\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar point1 = points[ intPoint ];\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\treturn new Vector2(\n\t\tCatmullRom( weight, point0.x, point1.x, point2.x, point3.x ),\n\t\tCatmullRom( weight, point0.y, point1.y, point2.y, point3.y )\n\t);\n\n};\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.v0 = v0;\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\tthis.v3 = v3;\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.getPoint = function ( t ) {\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\treturn new Vector2(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.v0 = v0;\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t ) {\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\treturn new Vector2(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n};\n\nvar PathPrototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tfromPoints: function ( vectors ) {\n\n\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\n\n\t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.fromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = PathPrototype;\nPathPrototype.constructor = Path;\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape() {\n\n\tPath.apply( this, arguments );\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( PathPrototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// Get points of shape and holes (keypoints based on segments parameter)\n\n\textractAllPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn this.extractAllPoints( divisions );\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Font( data ) {\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size, divisions ) {\n\n\t\tfunction createPaths( text ) {\n\n\t\t\tvar chars = String( text ).split( '' );\n\t\t\tvar scale = size / data.resolution;\n\t\t\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\t\t\tvar offsetX = 0, offsetY = 0;\n\n\t\t\tvar paths = [];\n\n\t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\t\tvar char = chars[ i ];\n\n\t\t\t\tif ( char === '\\n' ) {\n\n\t\t\t\t\toffsetX = 0;\n\t\t\t\t\toffsetY -= line_height;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar ret = createPath( char, scale, offsetX, offsetY );\n\t\t\t\t\toffsetX += ret.offsetX;\n\t\t\t\t\tpaths.push( ret.path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn paths;\n\n\t\t}\n\n\t\tfunction createPath( c, scale, offsetX, offsetY ) {\n\n\t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\n\n\t\t\tif ( ! glyph ) return;\n\n\t\t\tvar path = new ShapePath();\n\n\t\t\tvar pts = [];\n\t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n\t\t\tif ( glyph.o ) {\n\n\t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\tQuadraticBezier( t, cpx0, cpx1, cpx );\n\t\t\t\t\t\t\t\t\tQuadraticBezier( t, cpy0, cpy1, cpy );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\tCubicBezier( t, cpx0, cpx1, cpx2, cpx );\n\t\t\t\t\t\t\t\t\tCubicBezier( t, cpy0, cpy1, cpy2, cpy );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn { offsetX: glyph.ha * scale, path: path };\n\n\t\t}\n\n\t\t//\n\n\t\tif ( size === undefined ) size = 100;\n\t\tif ( divisions === undefined ) divisions = 4;\n\n\t\tvar data = this.data;\n\n\t\tvar paths = createPaths( text );\n\t\tvar shapes = [];\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t}\n\n} );\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar context = AudioContext.getContext();\n\n\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera( near, far, cubeResolution ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderTarget.activeCubeFace = 0;\n\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 1;\n\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 2;\n\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 3;\n\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 4;\n\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderTarget.activeCubeFace = 5;\n\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderTarget.activeCubeFace = i;\n\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.value = value;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\tsource.start( 0, this.startTime );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.startTime = this.context.currentTime;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.startTime = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.value = value;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param  {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: function ( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( /[^\\w-]/g, '' );\n\n\t},\n\n\tparseTrackName: function () {\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:[\\w-]+[\\/:])*)/;\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /([\\w-\\.]+)?/;\n\n\t\t// Object on target node, and accessor. Name may contain only word\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.([\\w-]+)(?:\\[(.+)\\])?)?/;\n\n\t\t// Property and accessor. May contain only word characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.([\\w-]+)(?:\\[(.+)\\])?/;\n\n\t\tvar trackRe = new RegExp(''\n\t\t\t+ '^'\n\t\t\t+ directoryRe.source\n\t\t\t+ nodeRe.source\n\t\t\t+ objectRe.source\n\t\t\t+ propertyRe.source\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function ( trackName ) {\n\n\t\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\t\tif ( ! matches ) {\n\n\t\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t\t}\n\n\t\t\t\tvar results = {\n\t\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\t\tpropertyName: matches[ 5 ],     // required\n\t\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t\t};\n\n\t\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\t\tif ( lastDot !== undefined && lastDot !== -1 ) {\n\n\t\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t\t// include '.' characters).\n\t\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== -1 ) {\n\n\t\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t\t}\n\n\t\t\t\treturn results;\n\n\t\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar searchSkeleton = function ( skeleton ) {\n\n\t\t\t\tfor ( var i = 0; i < skeleton.bones.length; i ++ ) {\n\n\t\t\t\t\tvar bone = skeleton.bones[ i ];\n\n\t\t\t\t\tif ( bone.name === nodeName ) {\n\n\t\t\t\t\t\treturn bone;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar bone = searchSkeleton( root.skeleton );\n\n\t\t\tif ( bone ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode(\n\t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n * \t-\tAdd objects you would otherwise pass as 'root' to the\n * \t\tconstructor or the .clipAction method of AnimationMixer.\n *\n * \t-\tInstead pass this object as 'root'.\n *\n * \t-\tYou can also add and remove objects later when the mixer\n * \t\tis running.\n *\n * Note:\n *\n *  \tObjects of this class appear as one object to the mixer,\n *  \tso cache control of the individual objects must be done\n *  \ton the group.\n *\n * Limitation:\n *\n * \t- \tThe animated properties must be compatible among the\n * \t\tall objects in the group.\n *\n *  -\tA single property can either be controlled through a\n *  \ttarget group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup( var_args ) {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = [];\t\t\t\t\t// inside: string\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() { return scope._objects.length; },\n\t\t\tget inUse() { return this.total - scope.nCachedObjects_; }\n\t\t},\n\n\t\tget bindingsPerObject() { return scope._bindings.length; }\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function( var_args ) {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ],\n\t\t\t\tknownObject = undefined;\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push(\n\t\t\t\t\t\t\tnew PropertyBinding(\n\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding(\n\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function( var_args ) {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function( var_args ) {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\t\tendingStart: \tZeroCurvatureEnding,\n\t\t\tendingEnd:\t\tZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = -1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0;\t\t\t// restart clip\n\t\tthis._loopCount = -1;\t// forget previous loops\n\t\tthis._startTime = null;\t// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function() {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function() {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function() {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function() {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function() {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\n\t\tif ( deltaTime === 0 ) return time;\n\n\t\tvar duration = this._clip.duration,\n\n\t\t\tloop = this.loop,\n\t\t\tloopCount = this._loopCount;\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending < 0 ) {\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 0 ) {\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\n\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\n\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nObject.assign( AnimationMixer.prototype, EventDispatcher.prototype, {\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() { return scope._actions.length; },\n\t\t\t\tget inUse() { return scope._nActiveActions; }\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() { return scope._bindings.length; },\n\t\t\t\tget inUse() { return scope._nActiveBindings; }\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() { return scope._controlInterpolants.length; },\n\t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.onUploadCallback = function () {};\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\tBufferAttribute.call( this, array, itemSize );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive ) {\n\n\t\tvar intersects = [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive ) {\n\n\t\tvar intersects = [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The poles (phi) are at the positive and negative y axis.\n * The equator starts at positive z.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function() {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function( vec3 ) {\n\n\t\tthis.radius = vec3.length();\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function( vec3 ) {\n\n\t\tthis.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );\n\t\tthis.theta = Math.atan2( vec3.x, vec3.z );\n\t\tthis.y = vec3.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( renderCallback ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0,   0,   0,   1,\n\t\t0, 0, 0,   1,   0,   1,\n\t\t0, 0, 0, - 1,   0,   1,\n\t\t0, 0, 0,   0,   1,   1,\n\t\t0, 0, 0,   0, - 1,   1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\tvar vector2 = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.onBeforeRender();\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.onBeforeRender = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function onBeforeRender() {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\tthis.line = new Line( geometry, material );\n\tthis.add( this.line );\n\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nRectAreaLightHelper.prototype.update = function () {\n\n\t// calculate new dimensions of the helper\n\n\tvar hx = this.light.width * 0.5;\n\tvar hy = this.light.height * 0.5;\n\n\tvar position = this.line.geometry.attributes.position;\n\tvar array = position.array;\n\n\t// update vertices\n\n\tarray[  0 ] =   hx; array[  1 ] = - hy; array[  2 ] = 0;\n\tarray[  3 ] =   hx; array[  4 ] =   hy; array[  5 ] = 0;\n\tarray[  6 ] = - hx; array[  7 ] =   hy; array[  8 ] = 0;\n\tarray[  9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\tarray[ 12 ] =   hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\tposition.needsUpdate = true;\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.line.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.line.material.color.copy( this.light.color );\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.create( LineSegments.prototype );\nGridHelper.prototype.constructor = GridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size,   size, 0,\n\t\t  size,   size, 0,\n\t\t  size, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size,   size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v3 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( \"n1\", \"n2\", colorFrustum );\n\taddLine( \"n2\", \"n4\", colorFrustum );\n\taddLine( \"n4\", \"n3\", colorFrustum );\n\taddLine( \"n3\", \"n1\", colorFrustum );\n\n\t// far\n\n\taddLine( \"f1\", \"f2\", colorFrustum );\n\taddLine( \"f2\", \"f4\", colorFrustum );\n\taddLine( \"f4\", \"f3\", colorFrustum );\n\taddLine( \"f3\", \"f1\", colorFrustum );\n\n\t// sides\n\n\taddLine( \"n1\", \"f1\", colorFrustum );\n\taddLine( \"n2\", \"f2\", colorFrustum );\n\taddLine( \"n3\", \"f3\", colorFrustum );\n\taddLine( \"n4\", \"f4\", colorFrustum );\n\n\t// cone\n\n\taddLine( \"p\", \"n1\", colorCone );\n\taddLine( \"p\", \"n2\", colorCone );\n\taddLine( \"p\", \"n3\", colorCone );\n\taddLine( \"p\", \"n4\", colorCone );\n\n\t// up\n\n\taddLine( \"u1\", \"u2\", colorUp );\n\taddLine( \"u2\", \"u3\", colorUp );\n\taddLine( \"u3\", \"u1\", colorUp );\n\n\t// target\n\n\taddLine( \"c\", \"t\", colorTarget );\n\taddLine( \"p\", \"c\", colorCross );\n\n\t// cross\n\n\taddLine( \"cn1\", \"cn2\", colorCross );\n\taddLine( \"cn3\", \"cn4\", colorCross );\n\n\taddLine( \"cf1\", \"cf2\", colorCross );\n\taddLine( \"cf3\", \"cf4\", colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t// center / target\n\n\t\tsetPoint( \"c\", 0, 0, - 1 );\n\t\tsetPoint( \"t\", 0, 0,  1 );\n\n\t\t// near\n\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( \"f1\", - w, - h, 1 );\n\t\tsetPoint( \"f2\",   w, - h, 1 );\n\t\tsetPoint( \"f3\", - w,   h, 1 );\n\t\tsetPoint( \"f4\",   w,   h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\n\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\n\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\n\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\n\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n\tthis.onBeforeRender();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.onBeforeRender = function () {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n\t//\n\n\tthis.onBeforeRender();\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.onBeforeRender = function () {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.lookAt( this.plane.normal );\n\n\tthis.updateMatrixWorld();\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry;\nvar coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( length === undefined ) length = 1;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxisHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,  size, 0, 0,\n\t\t0, 0, 0,  0, size, 0,\n\t\t0, 0, 0,  0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,  1, 0.6, 0,\n\t\t0, 1, 0,  0.6, 1, 0,\n\t\t0, 0, 1,  0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxisHelper.prototype = Object.create( LineSegments.prototype );\nAxisHelper.prototype.constructor = AxisHelper;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly();\nvar py = new CubicPoly();\nvar pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points ) {\n\n\tCurve.call( this );\n\n\tif ( points.length < 2 ) console.warn( 'THREE.CatmullRomCurve3: Points array needs at least two entries.' );\n\n\tthis.points = points || [];\n\tthis.closed = false;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.getPoint = function ( t ) {\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar point = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( point );\n\tvar weight = point - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.type === 'catmullrom' ) {\n\n\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\n\n\t}\n\n\treturn new Vector3( px.calc( weight ), py.calc( weight ), pz.calc( weight ) );\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.v0 = v0;\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\tthis.v3 = v3;\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.getPoint = function ( t ) {\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\treturn new Vector3(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.v0 = v0;\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t ) {\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\treturn new Vector3(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.getPoint = function ( t ) {\n\n\tif ( t === 1 ) {\n\n\t\treturn this.v2.clone();\n\n\t}\n\n\tvar vector = new Vector3();\n\n\tvector.subVectors( this.v2, this.v1 ); // diff\n\tvector.multiplyScalar( t );\n\tvector.add( this.v1 );\n\n\treturn vector;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\n\n\t\tvar group = new Group();\n\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\tgroup.add( new Mesh( geometry, materials[ i ] ) );\n\n\t\t}\n\n\t\treturn group;\n\n\t},\n\n\tdetach: function ( child, parent, scene ) {\n\n\t\tchild.applyMatrix( parent.matrixWorld );\n\t\tparent.remove( child );\n\t\tscene.add( child );\n\n\t},\n\n\tattach: function ( child, scene, parent ) {\n\n\t\tchild.applyMatrix( new Matrix4().getInverse( parent.matrixWorld ) );\n\n\t\tscene.remove( child );\n\t\tparent.add( child );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( a ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( optionalTarget ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( samplingCoef ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\n_Math.random16 = function () {\n\n\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\n\treturn Math.random();\n\n};\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( a ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.'  );\n\n\t},\n\tapplyToBuffer: function( buffer, offset, length ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function( array, offset, length ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( a ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.'  );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function( buffer, offset, length ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function( array, offset, length ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.error( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.error( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.error( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t}\n\n} );\n\n//\n\nGeometry.prototype.computeTangents = function () {\n\n\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n};\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.cullFace;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\n\t\t\tthis.shadowMap.cullFace = value;\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\treturn this.renderReverseSided ? CullFaceFront : CullFaceBack;\n\n\t\t},\n\t\tset: function ( cullFace ) {\n\n\t\t\tvar value = ( cullFace !== CullFaceBack );\n\t\t\tconsole.warn( \"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\" );\n\t\t\tthis.renderReverseSided = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nvar ImageUtils = {\n\n\tcrossOrigin: undefined,\n\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\tvar loader = new TextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\tvar loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadCompressedTexture: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t},\n\n\tloadCompressedTextureCube: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t}\n\n};\n\n//\n\nfunction Projector() {\n\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n}\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tthis.clear = function () {};\n\tthis.render = function () {};\n\tthis.setClearColor = function () {};\n\tthis.setSize = function () {};\n\n}\n\nexport { WebGLRenderTargetCube, WebGLRenderTarget, WebGLRenderer, ShaderLib, UniformsLib, UniformsUtils, ShaderChunk, FogExp2, Fog, Scene, LensFlare, Sprite, LOD, SkinnedMesh, Skeleton, Bone, Mesh, LineSegments, LineLoop, Line, Points, Group, VideoTexture, DataTexture, CompressedTexture, CubeTexture, CanvasTexture, DepthTexture, Texture, CompressedTextureLoader, DataTextureLoader, CubeTextureLoader, TextureLoader, ObjectLoader, MaterialLoader, BufferGeometryLoader, DefaultLoadingManager, LoadingManager, JSONLoader, ImageLoader, FontLoader, FileLoader, Loader, Cache, AudioLoader, SpotLightShadow, SpotLight, PointLight, RectAreaLight, HemisphereLight, DirectionalLightShadow, DirectionalLight, AmbientLight, LightShadow, Light, StereoCamera, PerspectiveCamera, OrthographicCamera, CubeCamera, ArrayCamera, Camera, AudioListener, PositionalAudio, AudioContext, AudioAnalyser, Audio, VectorKeyframeTrack, StringKeyframeTrack, QuaternionKeyframeTrack, NumberKeyframeTrack, ColorKeyframeTrack, BooleanKeyframeTrack, PropertyMixer, PropertyBinding, KeyframeTrack, AnimationUtils, AnimationObjectGroup, AnimationMixer, AnimationClip, Uniform, InstancedBufferGeometry, BufferGeometry, GeometryIdCount, Geometry, InterleavedBufferAttribute, InstancedInterleavedBuffer, InterleavedBuffer, InstancedBufferAttribute, Face3, Object3D, Raycaster, Layers, EventDispatcher, Clock, QuaternionLinearInterpolant, LinearInterpolant, DiscreteInterpolant, CubicInterpolant, Interpolant, Triangle, _Math as Math, Spherical, Cylindrical, Plane, Frustum, Sphere, Ray, Matrix4, Matrix3, Box3, Box2, Line3, Euler, Vector4, Vector3, Vector2, Quaternion, Color, ImmediateRenderObject, VertexNormalsHelper, SpotLightHelper, SkeletonHelper, PointLightHelper, RectAreaLightHelper, HemisphereLightHelper, GridHelper, PolarGridHelper, FaceNormalsHelper, DirectionalLightHelper, CameraHelper, BoxHelper, Box3Helper, PlaneHelper, ArrowHelper, AxisHelper, CatmullRomCurve3, CubicBezierCurve3, QuadraticBezierCurve3, LineCurve3, ArcCurve, EllipseCurve, SplineCurve, CubicBezierCurve, QuadraticBezierCurve, LineCurve, Shape, Path, ShapePath, Font, CurvePath, Curve, ShapeUtils, SceneUtils, WebGLUtils, WireframeGeometry, ParametricGeometry, ParametricBufferGeometry, TetrahedronGeometry, TetrahedronBufferGeometry, OctahedronGeometry, OctahedronBufferGeometry, IcosahedronGeometry, IcosahedronBufferGeometry, DodecahedronGeometry, DodecahedronBufferGeometry, PolyhedronGeometry, PolyhedronBufferGeometry, TubeGeometry, TubeBufferGeometry, TorusKnotGeometry, TorusKnotBufferGeometry, TorusGeometry, TorusBufferGeometry, TextGeometry, TextBufferGeometry, SphereGeometry, SphereBufferGeometry, RingGeometry, RingBufferGeometry, PlaneGeometry, PlaneBufferGeometry, LatheGeometry, LatheBufferGeometry, ShapeGeometry, ShapeBufferGeometry, ExtrudeGeometry, ExtrudeBufferGeometry, EdgesGeometry, ConeGeometry, ConeBufferGeometry, CylinderGeometry, CylinderBufferGeometry, CircleGeometry, CircleBufferGeometry, BoxGeometry, BoxBufferGeometry, ShadowMaterial, SpriteMaterial, RawShaderMaterial, ShaderMaterial, PointsMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshPhongMaterial, MeshToonMaterial, MeshNormalMaterial, MeshLambertMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshBasicMaterial, LineDashedMaterial, LineBasicMaterial, Material, Float64BufferAttribute, Float32BufferAttribute, Uint32BufferAttribute, Int32BufferAttribute, Uint16BufferAttribute, Int16BufferAttribute, Uint8ClampedBufferAttribute, Uint8BufferAttribute, Int8BufferAttribute, BufferAttribute, REVISION, MOUSE, CullFaceNone, CullFaceBack, CullFaceFront, CullFaceFrontBack, FrontFaceDirectionCW, FrontFaceDirectionCCW, BasicShadowMap, PCFShadowMap, PCFSoftShadowMap, FrontSide, BackSide, DoubleSide, FlatShading, SmoothShading, NoColors, FaceColors, VertexColors, NoBlending, NormalBlending, AdditiveBlending, SubtractiveBlending, MultiplyBlending, CustomBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, OneMinusSrcColorFactor, SrcAlphaFactor, OneMinusSrcAlphaFactor, DstAlphaFactor, OneMinusDstAlphaFactor, DstColorFactor, OneMinusDstColorFactor, SrcAlphaSaturateFactor, NeverDepth, AlwaysDepth, LessDepth, LessEqualDepth, EqualDepth, GreaterEqualDepth, GreaterDepth, NotEqualDepth, MultiplyOperation, MixOperation, AddOperation, NoToneMapping, LinearToneMapping, ReinhardToneMapping, Uncharted2ToneMapping, CineonToneMapping, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, SphericalReflectionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter, UnsignedByteType, ByteType, ShortType, UnsignedShortType, IntType, UnsignedIntType, FloatType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedInt248Type, AlphaFormat, RGBFormat, RGBAFormat, LuminanceFormat, LuminanceAlphaFormat, RGBEFormat, DepthFormat, DepthStencilFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, LoopOnce, LoopRepeat, LoopPingPong, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, ZeroCurvatureEnding, ZeroSlopeEnding, WrapAroundEnding, TrianglesDrawMode, TriangleStripDrawMode, TriangleFanDrawMode, LinearEncoding, sRGBEncoding, GammaEncoding, RGBEEncoding, LogLuvEncoding, RGBM7Encoding, RGBM16Encoding, RGBDEncoding, BasicDepthPacking, RGBADepthPacking, BoxGeometry as CubeGeometry, Face4, LineStrip, LinePieces, MeshFaceMaterial, MultiMaterial, PointCloud, Particle, ParticleSystem, PointCloudMaterial, ParticleBasicMaterial, ParticleSystemMaterial, Vertex, DynamicBufferAttribute, Int8Attribute, Uint8Attribute, Uint8ClampedAttribute, Int16Attribute, Uint16Attribute, Int32Attribute, Uint32Attribute, Float32Attribute, Float64Attribute, ClosedSplineCurve3, SplineCurve3, Spline, BoundingBoxHelper, EdgesHelper, WireframeHelper, XHRLoader, BinaryTextureLoader, GeometryUtils, ImageUtils, Projector, CanvasRenderer };\n"]},"metadata":{},"sourceType":"module"}